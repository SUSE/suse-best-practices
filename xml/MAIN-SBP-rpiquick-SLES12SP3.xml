<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
<!ENTITY productname "&sls;">
<!ENTITY productnamereg "&slsreg;">
<!ENTITY productnumber '12 SP3'>
]>

<article role="sbp" xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
  xml:id="art-sbp-rpiquick-sles12sp3" xml:lang="en">



  <info>
    <title>Introduction to &productname; for ARM on the
      &rpi;</title>
    <!--      <subtitle>&productname; &productnumber; for &arm;</subtitle>-->
    <!--<orgname>SUSE Best Practices</orgname>-->

    <!--<productnumber>&productnumber; for &aarch64;</productnumber>-->
    <productname>&productname; for ARM 12 SP3</productname>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker>
        <dm:url>https://github.com/SUSE/suse-best-practices/issues/new</dm:url>
        <dm:product>Introduction to &productname; for ARM on the
          &rpi;</dm:product>
      </dm:bugtracker>
      <dm:editurl>https://github.com/SUSE/suse-best-practices/edit/main/xml/</dm:editurl>
    </dm:docmanager>
    
    
      <meta name="series">SUSE Best Practices</meta> 
      <meta name="category">HW/SW Stack</meta> 
      
      <meta name="platform">SUSE Linux Enterprise Server 12 SP3</meta>    
  <!--    <meta name="platform"></meta> -->       
      
      <authorgroup>
      <author>
      <personname>
      <firstname>Fabian</firstname>
      <surname>Vogt</surname>
      </personname>
      <affiliation>
      <jobtitle>Release Engineer</jobtitle>
      <orgname>SUSE</orgname>
      </affiliation>
      </author>
      <author>
      <personname>
      <firstname>Andreas</firstname>
      <surname>Faerber</surname>
      </personname>
      <affiliation>
      <jobtitle>Project Manager</jobtitle>
      <orgname>SUSE</orgname>
      </affiliation>
      </author>
<!--      <editor>
      <orgname></orgname>
      </editor>
      <othercredit>
      <orgname></orgname>
      </othercredit>-->
      </authorgroup>
    
    <cover role="logos">
      <mediaobject>
        <imageobject>
          <imagedata fileref="suse.svg" width="4em"/>
        </imageobject>
      </mediaobject>
   <!--   <mediaobject>
        <imageobject>
          <imagedata fileref="microsoft.svg" width="6em"/>
        </imageobject>
      </mediaobject>-->
    </cover>
  
    <date>April 9, 2018</date>


    <abstract>
      <para> This guide contains an overview of &productname; for ARM
        on the &rpi; platform and will guide you through the setup
        procedure. </para>
      <para>
        <emphasis role="strong">Disclaimer: </emphasis>
        Documents published as part of the SUSE Best Practices series have been contributed voluntarily
        by SUSE employees and third parties. They are meant to serve as examples of how particular
        actions can be performed. They have been compiled with utmost attention to detail. However,
        this does not guarantee complete accuracy. SUSE cannot verify that actions described in these
        documents do what is claimed or whether actions described have unintended consequences.
        SUSE LLC, its affiliates, the authors, and the translators may not be held liable for possible errors
        or the consequences thereof.
      </para>
      
    </abstract>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>


  <sect1 xml:id="sec-rpi-platform">
    <title>Platform Overview</title>

    <para> To be able to use &productname; for ARM on the &rpi;, an
      Arm compatible &rpi;* is required. &productname; 12 SP3 for
      ARM is tested to work on a &rpi; 3 Model B board. </para>

    <sect2 xml:id="sec-rpi-platform-system">
      <title>Technical Details of the &rpi; 3 Model B</title>
      <para> The &rpi; is a series of small single-board computers
        based on a System on a Chip (SoC) by Broadcom*, featuring various
        peripherals on the board. </para>

      <figure xml:id="fig-rpi-platform-system-board">
        <title>Overview of the &rpi; 3 Model B Connectors, © Efa /
          English Wikipedia / CC BY-SA 3.0</title>
        <mediaobject>
          <imageobject role="fo">
            <imagedata fileref="rpi-3b-overview-2.png" width="80%"
              format="PNG"/>
          </imageobject>
          <imageobject role="html">
            <imagedata fileref="rpi-3b-overview-2.png" width="80%"
              format="PNG"/>
          </imageobject>
          <textobject>
            <phrase>Overview of the &rpi; 3 Model B connectors © Efa /
              English Wikipedia / CC BY-SA 3.0</phrase>
          </textobject>
        </mediaobject>
      </figure>

      <figure xml:id="fig-rpi-platform-system-photo">
        <title>Photo of the &rpi; 3 Model B Connectors, © Evan-Amos /
          Own work / Public Domain</title>
        <mediaobject>
          <imageobject role="fo">
            <imagedata fileref="rpi-3b-photo.png" width="80%" format="PNG"
            />
          </imageobject>
          <imageobject role="html">
            <imagedata fileref="rpi-3b-photo.png" width="80%" format="PNG"
            />
          </imageobject>
          <textobject>
            <phrase>Photo of the &rpi; 3 Model B connectors © Evan-Amos
              / Own work / Public Domain</phrase>
          </textobject>
        </mediaobject>
      </figure>

      <variablelist>
        <title>Selected Features of the &rpi; 3 Model B</title>

        <varlistentry>
          <term>CPU</term>
          <listitem>
            <para> The Broadcom BCM2837 SoC includes a quad-core Arm*
              Cortex*-A53 Application Processor supporting the ARMv8 32-bit
              and 64-bit instruction sets. With the default configuration,
              it is clocked up to 1.2&#xa0;GHz. </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>RAM</term>
          <listitem>
            <para> 1024 MiB DDR2 memory mounted on the back of the board.
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Graphics</term>
          <listitem>
            <para> Broadcom* VideoCore* IV providing OpenGL* ES 2.0
              support. Displays can be connected over HDMI or composite
              (TRRS jack). </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Ethernet</term>
          <listitem>
            <para> A USB Ethernet adapter on the board provides
              10/100&#xa0;MBit/s Ethernet. </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>WLAN</term>
          <listitem>
            <para> The BCM43438 chip supports IEEE-802.11b, IEEE-802.11g
              and IEEE-802.11n in the 2.4&#xa0;GHz band. It also
              provides Bluetooth 2.0-4.1 (Low Energy). </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Storage</term>
          <listitem>
            <para>The microSDHC card slot allows for a memory card to be
              inserted as primary boot medium.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Power</term>
          <listitem>
            <para> The &rpi;'s main power source is the Micro USB
              connector. If your &rpi; comes with a power supply, it is
              recommended to use the bundled power supply only. </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>USB</term>
          <listitem>
            <para> A total of four USB 2.0 ports is available. </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Connectors</term>
          <listitem>
            <para> A 0.1 inch multi-function pin header is also available.
              Note that not all functionality of this header is exposed in
              &productname; for ARM on the &rpi;. </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 xml:id="sec-rpi-platform-software">
      <title>&productname; for ARM 12 SP3</title>
      <para>&productname; for ARM 12 SP3 is the first fully supported
        commercial Linux operating system release available for the
        &rpi;. You can purchase subscriptions which entitle you to
        receive all released bug and security fixes, feature updates, and
        technical assistance from SUSE's worldwide support. Learn more
        about subscription and support options at <link
          xlink:href="https://www.suse.com/support/programs/subscriptions/?id=SUSE_Linux_Enterprise_Server"
          >
          https://www.suse.com/support/programs/subscriptions/?id=SUSE_Linux_Enterprise_Server</link></para>

      <note>
        <title>Trial Version</title>
        <para> If you want to try out &productname; for ARM 12 SP3 on
          the &rpi;, &suse; will provide you with a trial version.
          This gives you access to free patches and updates for a period of
          60 days. You must sign in to the SUSE Customer Center at <link
            xlink:href="https://scc.suse.com/login"
            >https://scc.suse.com/login</link> using your Customer Center
          account credentials to receive this free offer. If you do not
          have a Customer Center account, you must create one to take
          advantage of the trial version. </para>
      </note>


      <bridgehead>Minimum System Requirements for Installation</bridgehead>

      <itemizedlist>
        <listitem>
          <para>Raspberry Pi 3 Model B</para>
        </listitem>
        <listitem>
          <para>SD Card with at least 8GB capacity</para>
        </listitem>
        <listitem>
          <para>USB keyboard, mouse</para>
        </listitem>
        <listitem>
          <para>HDMI cable and monitor</para>
        </listitem>
        <listitem>
          <para>Power supply with at least 2.5A capacity</para>
        </listitem>
      </itemizedlist>


      <!--
      <sect3 xml:id="sec-rpi-platform-software-modules">
        <title>Available Extensions and Modules</title>
        <para>
          &productname; offers additional and updated packages in form of modules
          and extensions. On &prodrpi;, the Software Development Kit (SDK) comes
          preinstalled, while the other modules listed below can be installed manually with &yast;.
        </para>

        <variablelist>
          <varlistentry>
            <term>Toolchain Module</term>
            <term>Software Development Kit (SDK) Extension</term>
            <listitem>
              <para>
                The Toolchain Module contains the toolchain (GCC, ...)
                for an enhanced software development experience combined with the
                SDK. It is updated yearly to provide more up-to-date versions of
                key development tools.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Web and Scripting Module</term>
            <listitem>
              <para>
                The Web and Scripting Module contains a newer version of the PHP
                and Python scripting languages.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Containers Module</term>
            <listitem>
              <para>
                The Containers Module contains several packages revolving around containers
                and related tools, including Docker.
                A Quick Start Guide for Docker can be found on &docaddress;.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>
          For more information about modules and extensions, see
          <link xlink:href="https://www.suse.com/docrep/documents/huz0a6bf9a/suse_linux_enterprise_server_12_modules_white_paper.pdf">SUSE Linux Enterprise Server 12 Modules</link>.
        </para>

        <note>
          <title>Use &prodrpi; Package Sources</title>
          <para>
            &prodrpi; is not compatible with packages from other &sle; variants.
          </para>
        </note>
      </sect3>

      -->

      <sect3 xml:id="sec-rpi-platform-software-sles12sp2">
        <title>Differences Compared to the Previous Release
            <quote>&prodrpi;</quote></title>

        <para>The previous release of <quote>&prodrpi;</quote> (based
          on SUSE Linux Enterprise Server 12 SP2) was intended for
          experimental users of &productname; on the &rpi;
          platform. It included several large packages such as the C
          compiler and development tools. The commercial release of the
          &rpi; image of &productname; for ARM is different in
          several ways:</para>

        <itemizedlist>
          <listitem>
            <para>It is based on the later code base from &productname;
              12 SP3.</para>
          </listitem>
          <listitem>
            <para>It uses the normal &productname; for ARM support
              channels instead of a special purpose
                <quote>&prodrpi;</quote> channel.</para>
          </listitem>
          <listitem>
            <para>The image is significantly smaller than the previous
              release to allow the installation to be tailored for the
              actual use.</para>
          </listitem>
        </itemizedlist>

        <para>Additional packages can be installed by YaST or Zypper after
          registration. Since many of our customers are interested in using
          &productname; for ARM on a &rpi; for industrial
          monitoring and digital signage, it makes more sense to provide a
          minimal image that can easily be expanded. </para>
      </sect3>

      <sect3 xml:id="sec-rpi-platform-software-raspbian">
        <title>Differences Compared to Raspbian</title>
        <para> Raspbian is the de-facto default distribution for the
          &rpi;. The following paragraphs provide a short overview of
          differences between &productname; for ARM on the &rpi;
          and Raspbian. </para>

        <variablelist>
          <varlistentry>
            <term>Based on Upstream Kernel</term>
            <listitem>
              <para>Raspbian uses a kernel with modifications especially
                for the &rpi;. &productname; for ARM uses the
                default &sle; kernel for &aarch64; which is derived
                from the official mainline kernel. </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <!-- TODO: Better title? -->
            <term>&aarch64; Instruction Set</term>
            <listitem>
              <para> &productname; for ARM on the &rpi; is the
                first distribution for the &rpi; using the
                &aarch64; instruction set. </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Boot Process</term>
            <listitem>
              <para> In Raspbian, the kernel is loaded directly. This is
                not supported by &productname; for ARM, where the
                U-Boot boot loader is used to provide an EFI boot
                environment. A GRUB2 EFI binary is chainloaded to provide a
                graphical boot screen. </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Root File System</term>
            <listitem>
              <para> &productname; for ARM on the &rpi; uses Btrfs
                as file system for the root partition. Compression is
                enabled by default for better SD card performance. </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <!-- <para> TO DO: We should (later) add a note on differences dealing with expansion boards.</para>-->

      </sect3>

      <sect3 xml:id="sec-rpi-platform-software-yast">
        <title>&yast;</title>
        <para> &yast; is the installation and configuration framework
          for &sle;. It is popular for its easy use, flexible graphical
          interfaces and the capability to customize your system quickly
          during and after the installation. &yast; can be used to
          configure your entire system: You can configure hardware, set up
          networking, manage system services and tune your security
          settings. All these tasks can be reached from the &yast;
          control center. To start it, choose &yast; in the menu or run
          the command <command>xdg-su -c yast2</command>. You will be
          prompted to enter the password of the &rootuser; user. </para>

        <figure xml:id="fig-rpi-yast2">
          <title>The &yast; Control Center</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rpi_yast2.png"/>
            </imageobject>
            <textobject>
              <phrase>The &yast; control center</phrase>
            </textobject>
          </mediaobject>
        </figure>

        <para> When started, &yast; shows an overview of available
          modules (<xref linkend="fig-rpi-yast2"/>). Simply click an icon
          to open a module. </para>
      </sect3>

      <sect3 xml:id="sec-rpi-platform-software-zypper">
        <title>Zypper</title>
        <para> Zypper is the package manager for &sle;. It is the tool
          for installing, updating and removing packages and for managing
          repositories. </para>

        <para> The general syntax for Zypper invocations is: </para>

        <screen>zypper <option>[global-options]</option> <replaceable>command</replaceable> <option>[command-options]</option><option>[arguments]</option> ...</screen>

        <note>
          <title>Short Command Form</title>
          <para> For most commands, there is both a short and a long form.
            An overview is available with <command>zypper --help</command>.
          </para>
        </note>

        <variablelist>
          <varlistentry>
            <term>Installing a package</term>
            <listitem>
              <screen>zypper install mplayer</screen>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Removing a package</term>
            <listitem>
              <screen>zypper remove mplayer</screen>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>List available patches</term>
            <listitem>
              <screen>zypper list-patches</screen>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Install available patches</term>
            <listitem>
              <screen>zypper patch</screen>
            </listitem>
          </varlistentry>
        </variablelist>

        <note>
          <title>Installing Software Updates</title>
          <para> The recommended way to install available software updates
            is using the &yast; Online Updater. To start it, choose
              <quote>Online Update</quote> in <quote>Settings</quote> under
              <quote>Desktop Apps</quote> in the IceWM menu. </para>
        </note>
      </sect3>

      <sect3 xml:id="sec-rpi-platform-software-limitations">
        <title>Limitations</title>
        <variablelist>
          <varlistentry>
            <term>Graphics not hardware-accelerated</term>
            <listitem>
              <para>&xvendor; hardware acceleration is disabled to
                improve system stability and reliability.</para>
              <para>To enable it, comment out the following line in
                  <filename>/etc/X11/xorg.conf.d/20-kms.conf</filename>:
                  <literal>Option "AccelMethod" "none"</literal> by
                prefixing it with <quote>#</quote>.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>For other limitations refer to the online version of the
          Release Notes at <link
            xlink:href="https://www.suse.com/releasenotes/x86_64/SUSE-SLES/12-SP3/"
            >https://www.suse.com/releasenotes/x86_64/SUSE-SLES/12-SP3/</link>.</para>

      </sect3>
    </sect2>
  </sect1>

  <sect1 xml:id="sec-rpi-installation">
    <title>Installation</title>
    <!-- TODO: Compressed or not compressed? -->
    <para> &productname; for the &rpi; is distributed as
      XZ-compressed image file for microSD cards. This section will guide
      you through the process of preparing the card to the first boot. If
      you already have a microSD card containing the image, you can skip
      this section and go straight to <xref linkend="sec-rpi-firstboot"/>. </para>

    <note>
      <title>SD Card Space Requirements</title>
      <para> It is recommended to use a card with a capacity of at least 8
        GB. </para>
      <!--<para>TO DO!!! 8 GB may lead to space issues with btrfs snapshots and
        has not been tested for SP3. Suggestion: Leave as is and revisit
        later.</para>-->

    </note>

    <warning>
      <title>All Data on the Card will be Lost!</title>
      <para> By following the procedure below, all data on the SD card will
        be overwritten and therefore irrevocably lost! Be very careful when
        choosing the destination device of the image writing process!
      </para>
    </warning>

    <sect2 xml:id="sec-rpi-installation-linux">
      <title>Preparing the Card on Linux</title>
      <para> Before and after you plug in the SD card, run the
          <command>lsblk</command> command. Between the two runs of
          <command>lsblk</command>, there should be a difference of one or
        more lines. The first column and first row is the name of the node
        representing the SD card in your system. To write the image to the
        card, use the <command>dd</command> command: </para>

      <screen>xz -cd <replaceable>IMAGE</replaceable> | dd of=/dev/<replaceable>SDCARDDEV</replaceable> bs=4096</screen>

      <example xml:id="ex-rpi-installation-dd">
        <title> Writing the Image to the Card using <command>dd</command>
        </title>
        <para>This command decompresses the image
            <literal>SLE-12-SP3-Server-RaspberryPi3.aarch64-GM.raw.xz</literal>
          to the SD card <literal>mmcblk0</literal>. </para>

        <screen>xz -cd SLE-12-SP3-Server-RaspberryPi3.aarch64-GM.raw.xz | dd of=/dev/mmcblk0 bs=4096</screen>
      </example>
    </sect2>

    <sect2 xml:id="sec-rpi-installation-windows">
      <title>Preparing the Card on Microsoft Windows* Operating
        Systems</title>

      <para> The following steps will guide you through the installation of
        the image onto the SD card on Microsoft Windows operating systems.
        You need to meet these prerequisites: </para>

      <itemizedlist>
        <listitem>
          <para>Latest available image of &productname; for ARM on the
            &rpi;</para>
        </listitem>
        <listitem>
          <para>Easy 7-Zip from <link xlink:href="http://www.e7z.org/"
              >http://www.e7z.org/</link></para>
        </listitem>
        <listitem>
          <para>Win32 Disk Imager from <link
              xlink:href="http://sourceforge.net/projects/win32diskimager/"
              >http://sourceforge.net/projects/win32diskimager/</link></para>
        </listitem>
      </itemizedlist>

      <procedure xml:id="pro-rpi-installation-windows">
        <step>
          <para> Open the downloaded image using Easy 7-Zip. Extract the
            file content into a directory with sufficient free space. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_image_7z.png"/>
              </imageobject>
              <textobject>
                <phrase>7zip extraction dialog</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>
        </step>
        <step>
          <para> Run Win32 Disk Imager and select the extracted file as
              <guimenu>Image File</guimenu>. Then, choose the correct drive
            letter as <guimenu>Device</guimenu>. Click
              <guimenu>Write</guimenu> to start the procedure. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_image_win32.png"/>
              </imageobject>
              <textobject>
                <phrase>Win32 Disk Imager Writing Process</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

          <note>
            <title>Finding the correct device</title>
            <para> If you are unsure which drive letter to choose from in
              the list, remove the SD card and run Win32 Disk Imager again.
              The option that disappeared is the right target device.
            </para>
          </note>
        </step>
      </procedure>
    </sect2>

    <sect2 xml:id="sec-rpi-installation-macos">
      <title>Preparing the Card on macOS*</title>
      <para> The following steps will guide you through the installation of
        the image onto the SD card on macOS. You need to meet these
        prerequisites: </para>

      <itemizedlist>
        <listitem>
          <para>Latest available image of &productname; for ARM on the
            &rpi;</para>
        </listitem>
        <listitem>
          <para>The Unarchiver from <link
              xlink:href="http://unarchiver.c3.cx/unarchiver"
              >http://unarchiver.c3.cx/unarchiver</link></para>
        </listitem>
      </itemizedlist>

      <procedure xml:id="pro-rpi-installation-macos">
        <step>
          <para> Open Finder at the location where the downloaded image is
            stored. Use the <guimenu>Open With</guimenu> selection to
            choose <emphasis role="strong">The Unarchiver</emphasis>
            instead of the default <emphasis role="strong"
              >Archive</emphasis> utility and extract the content into a
            directory with sufficient free space. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%"
                  fileref="rpi_image_macos_sles12sp3.jpg"/>
              </imageobject>
              <textobject>
                <phrase>Open the Image with The Unarchiver</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>
        </step>
        <step>
          <para> Open a Terminal window and change into the destination
            directory of the uncompressed image. Enter <command>diskutil
              list</command> before and after the SD card is inserted to
            find out which device to use. </para>
        </step>
        <step>
          <para> Run <command>diskutil unmountDisk
                <replaceable>/dev/diskX</replaceable></command>, where X is
            the disk number from the previous step. </para>
        </step>
        <step>
          <para> Run <command>sudo dd bs=4096
                if=<replaceable>imageFile.raw</replaceable>
                of=<replaceable>/dev/diskX</replaceable></command>, where X
            is the disk number and imageFile.raw is the name of the
            uncompressed image. </para>

          <screen>&prompt.user;sudo dd bs=4096 if=SLE-12-SP3-Server-RaspberryPi3.aarch64-GM.raw.xz of=/dev/disk4
Password:
5550+0 records in
5550+0 records out
5819596800 bytes transferred in 1131.796649 secs (5141910 bytes/sec)
          </screen>
        </step>
        <step>
          <para> Now unmount the disk (which is now labelled
              <guimenu>EFI</guimenu>) as usual. </para>
        </step>
      </procedure>
    </sect2>
  </sect1>

  <sect1 xml:id="sec-rpi-firstboot">
    <title>Booting for the First Time</title>
    <para> After insertion of the prepared microSD card, connect a display,
      Ethernet and USB keyboard and mouse first, then provide power over
      Micro USB. After a few seconds you should be able to see a few lines
      of text on the screen. If that is not the case, recheck the
      connection to the display. </para>

    <note>
      <title>Operation Without Mouse</title>
      <para> &yast; can be used without a mouse by only using the
        keyboard. Every GUI element has an accelerator configured, visible
        as underlined letter. To activate such an accelerator, press the
        letter together with <keycap function="alt"/>. </para>
    </note>

    <para> On the first boot, the system will expand to fill the entire SD
      card, so be patient. </para>

    <sect2 xml:id="sec-rpi-firstboot-yast">
      <title>Initial System Setup with &yast;</title>
      <para> After a few minutes, &yast; will lead you through the
        initial system setup. </para>

      <procedure xml:id="pro-rpi-firstboot-yast">
        <step>
          <para> First, the system language and keyboard layout needs to be
            configured. Use the drop-down boxes and click
              <guimenu>Next</guimenu>. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_first_lang.png"/>
              </imageobject>
              <textobject>
                <phrase>&yast; showing keyboard and language
                  configuration on first boot</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>
        </step>

        <step>
          <para> Select <guimenu>Next</guimenu> on this screen. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_first_welcome.png"/>
              </imageobject>
              <textobject>
                <phrase>&yast; showing a Welcome message</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>
        </step>

        <step>
          <para> Read the License Agreement. You need to accept the license
            by selecting <guimenu>I Agree to the License Terms</guimenu>
            and choosing <guimenu>Next</guimenu>. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%"
                  fileref="rpi_first_eula_sles12sp3.png"/>
              </imageobject>
              <textobject>
                <phrase>&yast; displaying the license text</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>
        </step>

        <step>
          <para> Select the time zone either by clicking the area in the
            map or selecting region and zone in the drop-down boxes. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_first_timezone.png"/>
              </imageobject>
              <textobject>
                <phrase>&yast; asking for the time zone</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

          <para> If the time and date shown at the bottom on the screen are
            incorrect, setup the &ntp; client by following these steps: </para>

          <substeps>
            <step>
              <para>Click <guimenu>Other Settings</guimenu> to open the
                NTPD configuration.</para>
            </step>
            <step>
              <para>Click <guimenu>Other Settings</guimenu> to synchronize
                date and time with NTPD.</para>
            </step>
            <step>
              <para>After the synchronization completed, click
                  <guimenu>Accept</guimenu> to return to the Time and Date
                overview.</para>
            </step>
          </substeps>
        </step>
        <step>
          <para> Click <guimenu>Next</guimenu> to proceed. </para>
        </step>


        <step>
          <para> On this page, you can configure a default user account. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_first_user.png"/>
              </imageobject>
              <textobject>
                <phrase>&yast; showing basic user
                  configuration</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

          <note>
            <title>Automatic Login not supported</title>
            <para> Automatic Login is not supported by
                <package>xdm</package>, the default display manager.
              Install <package>gdm</package> after the installation to make
              it work. </para>
            <!-- <para>ATTENTION: gdm has not been tested...</para>-->
          </note>
        </step>

        <step>
          <para> If you chose to skip the previous step or if you chose not
            to set a root password, you will be asked to provide one now.
            Do not forget what you enter here, you will need it for
            administration! </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_first_root.png"/>
              </imageobject>
              <textobject>
                <phrase>&yast; asking you to set a password for the
                  &rootuser; user</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>
        </step>

        <step>
          <para> On this screen you need to enter your E-mail address and
            the registration code you received. You can also choose to
              <guimenu>Skip Registration</guimenu>. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%"
                  fileref="rpi_first_reg_sles12sp3.png"/>
              </imageobject>
              <textobject>
                <phrase>&yast; asking for registration
                  information</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

          <note>
            <title>Skipping the Registration</title>
            <para> If you choose to skip the registration here, you will
              not receive updates or patches until you registered manually
              using &yast;.</para>
          </note>

          <para>After successful registration you will be given the option
            to activate <emphasis role="italic">Modules</emphasis> as
            additional package repositories. For example the <emphasis
              role="italic">Toolchain Module</emphasis> provides the
            supported versions of the GNU Compiler Collection for SUSE
            Linux Enterprise Server for ARM 12 SP3.</para>

        </step>

        <step>
          <para> Click <guimenu>Finish</guimenu> to exit the setup wizard
            and continue the system start-up. </para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_first_finish.png"/>
              </imageobject>
              <textobject>
                <phrase>&yast; congratulating you for finishing the
                  initial configuration</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>
        </step>
      </procedure>
    </sect2>

    <sect2 xml:id="sec-rpi-firstboot-icewm">
      <title>The Desktop Environment</title>
      <para> When the system finished booting, you will see the following
        login screen: </para>

      <figure xml:id="fig-rpi-installation-xdm">
        <title>XDM Login Screen</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="rpi_xdm.png"/>
          </imageobject>
          <textobject>
            <phrase>XDM login screen after the system has booted</phrase>
          </textobject>
        </mediaobject>
      </figure>

      <para> Type in the user name and password you chose during the
        initial configuration. The default IceWM desktop starts. By using
        the menu, you can start an <command>XTerm</command> terminal: </para>

      <figure xml:id="fig-rpi-installation-icewm">
        <title>IceWM desktop</title>
        <mediaobject>
          <imageobject>
            <imagedata width="80%" fileref="rpi_icewm.png"/>
          </imageobject>
          <textobject>
            <phrase>IceWM desktop after login</phrase>
          </textobject>
        </mediaobject>
      </figure>
    </sect2>
  </sect1>

  <sect1 xml:id="sec-rpi-usage">
    <title>General System Usage</title>
    <para> After the initial configuration procedure and the first boot of
      the system, you can now use various components of the system. </para>

    <sect2 xml:id="sec-rpi-bt">
      <title>Bluetooth*</title>
      <para> The &rpi; has a Bluetooth* controller on-board that can be
        used for various purposes, like wireless keyboards, mice or audio
        devices. </para>

      <para> To enable the Bluetooth* controller for use with
          <command>bluetoothctl</command> and related applications, run: </para>

      <screen>&prompt.root;hciattach /dev/ttyAMA0 bcm43xx 921600
bcm43xx_init
Flash firmware /lib/firmware/BCM43430A1.hcd
Set Controller UART speed to 921600 bit/s
Device setup complete</screen>

      <para> You can then use <command>hciconfig hci0 up</command> to bring
        the device up and use <command>hcitool scan</command> to scan the
        environment for discoverable devices. </para>
    </sect2>

    <sect2 xml:id="sec-rpi-gcc">
      <title>Compiler</title>
      <para> For compiling software, only the versions of the GNU Compiler
        Collection provided by the Toolchain Module, which can be selected
        after registration, are supported. To use the supported version,
          <command>gcc-7</command> needs to be invoked instead of
          <command>gcc</command>. </para>
    </sect2>
  </sect1>

  <sect1 xml:id="sec-rpi-configuration">
    <title>Initial System Configuration</title>
    <para> In this section it is explained how to perform the initial
      system configuration for &productname; for ARM 12 SP3 on the
      &rpi;. </para>

    <!--   <sect2 xml:id="sec-rpi-userpassword">
      <title> Assigning a Password to the <systemitem class="username"
          >pi</systemitem> User </title>
      <para> For security reasons, it is strongly discouraged to have a
        user with an empty password. By default, the <systemitem
          class="username">pi</systemitem> user does not have a password
        assigned. To change that, start <command>XTerm</command> and run
          <command>passwd</command>: </para>

      <screen>
<prompt>pi@linux:~></prompt> passwd
New password:
Retype new password:
passwd: password updated successfully
<prompt>pi@linux:~></prompt></screen>

      <note>
        <title>Invisible Password Input</title>
        <para> When entering the password, you will not see the typed
          characters on screen. In fact, you may not notice that you are
          typing. That is an intentional effect for increased security.
        </para>
      </note>
    </sect2>-->

    <!--    <sect2 xml:id="sec-rpi-rootpassword">
      <title>Changing the &rootuser; Password</title>
      <para> The images written to SD cards all share the same user and
        password combination, so it is recommended to assign a new password
        for the &rootuser; user. To do that, run the <command>sudo
          passwd</command> command. The default password for &rootuser;
        is <literal>linux</literal>. </para>

      <screen>
<prompt>pi@linux:~></prompt> sudo passwd

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

root's password:
New password:
Retype new password:
passwd: password updated successfully
<prompt>pi@linux:~></prompt></screen>
    </sect2>-->

    <sect2 xml:id="sec-rpi-hostname">
      <title>Changing the Host Name</title>

      <para>Follow these steps to change the default host name:</para>

      <procedure xml:id="pro-rpi-hostname-yast">
        <step>
          <para> Open the &yast; network module either by running
              <command>yast2 lan</command> or clicking the network icon in
            the &yast; control center. </para>
        </step>

        <step>
          <para> Select <guimenu>Hostname/DNS</guimenu> in the top tab bar.
          </para>
        </step>

        <step>
          <para> Type the new host name into the
              <guimenu>Hostname</guimenu> field. </para>
        </step>

        <step>
          <para> Click <guimenu>OK</guimenu> to save the change. After
            &yast; exited, you need to log out and in again. </para>
        </step>
      </procedure>
    </sect2>

    <sect2 xml:id="sec-rpi-network">
      <title>Setting up Networking</title>
      <para> The default configuration has DHCP enabled on the Ethernet
        port. If that suits your network environment, you can skip this
        section. If you require the use of a static IP address, use
        &yast;:</para>

      <procedure xml:id="pro-rpi-network-yast">
        <step>
          <para> Open the &yast; network module either by running
              <command>yast2 lan</command> or clicking the network icon in
            the &yast; control center. </para>
        </step>

        <step>
          <para> In &yast;, you will see the network interface being
            selected. Select the built-in Ethernet and choose
              <guimenu>Edit</guimenu> to open the address configuration.
          </para>
        </step>

        <step>
          <para> Select <guimenu>Statically Assigned IP Address</guimenu>
            and type in the desired values for <guimenu>IP
              Address</guimenu> and <guimenu>Subnet Mask</guimenu>. Click
              <guimenu>Next</guimenu>. </para>
        </step>

        <step>
          <para> With a static network configuration, you will also need to
            specify a DNS server (if applicable) and a gateway. For the
            gateway, select <guimenu>Routing</guimenu> in the tab bar and
            enter the IPs of the gateways into the specific fields. </para>
        </step>

        <step>
          <para> The DNS server is set in the
              <guimenu>Hostname/DNS</guimenu> tab. After choosing that tab,
            enter the IPs of the name servers into the respective
              <guimenu>Name Server</guimenu> fields. </para>
        </step>
      </procedure>

      <para>Similarly to the procedure described above, YaST also lets you
        configure the built-in Wi-Fi network adapter.</para>

      <para> For detailed information about the network configuration in
        &productname;, consult the respective sections of the SUSE
        Linux Enterprise Server Deployment Guide and the SUSE Linux
        Enterprise Server Administration Guide at <link
          xlink:href="https://documentation.suse.com/sles/12-SP3/"/>. To
        access these guides, download the compressed documentation
        folder.</para>
    </sect2>

    <sect2 xml:id="sec-rpi-registration">
      <title>Registration Process</title>
      <para> It is very important to register your SUSE Linux Enterprise
        Server for ARM subscription to ensure full functionality of your
        Raspberry Pi system. The SD card image provided by SUSE contains a
        minimal set of packages that are intended for the initial boot
        process and to get your Raspberry Pi onto the network. </para>

      <para>When you have registered your SUSE Linux Enterprise Server for
        ARM subscription, you can download other packages you may need,
        such as compilers. The SUSE Linux Enterprise Server version that
        runs on your Raspberry Pi is the same version that runs on x86,
        Power, IBM Z, or on other Arm-based systems.</para>

      <important>
        <title>Setting the Clock</title>
        <para>Because the Raspberry Pi does not have a persistent Real Time
          Clock, make sure that the clock is set to the current date and
          time before attempting to use Zypper or YaST to install
          additional packages. </para>
      </important>

      <para>You can register your system either during first boot or via
        the <emphasis role="italic">YaST Product Registration</emphasis>
        module.</para>

      <note>
        <title>Evaluation Code</title>
        <para>Sixty day evaluation subscriptions may be requested at the
          following page: <link
            xlink:href="https://www.suse.com/products/arm/raspberry-pi/"
            >https://www.suse.com/products/arm/raspberry-pi/</link>
        </para>
      </note>

      <para>
        <emphasis role="strong">After you obtained a registration code from
          a subscription card, you need to activate your subscription on
          the SUSE Customer Center at:</emphasis>
      </para>

      <para>
        <link xlink:href="https://scc.suse.com">https://scc.suse.com</link>
      </para>

      <para>To register your subscription, perform the following
        steps:</para>

      <procedure xml:id="pro-rpi-reg-process">
        <step>
          <para>Log in to the SUSE Customer Center using a browser on
            another machine. Create an account if required:</para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_scc.png"/>
              </imageobject>
              <textobject>
                <phrase>Log in to the SUSE Customer Center</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

        </step>

        <step>
          <para>Click <guimenu>Manually Activate
            Subscriptions</guimenu>:</para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_management_tools.png"/>
              </imageobject>
              <textobject>
                <phrase>Manual activation of subscription.</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

        </step>

        <step>
          <para>Click the dialog field <guimenu>Activate a single
              subscription</guimenu>:</para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%"
                  fileref="rpi_activate_subscription.png"/>
              </imageobject>
              <textobject>
                <phrase>Activate a single subscription.</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

        </step>

        <step>
          <para>Enter the registration code and accept the terms and
            conditions:</para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_enter_code.png"/>
              </imageobject>
              <textobject>
                <phrase>Enter the registration code.</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

        </step>

        <step>
          <para>Confirm the subscription activation and the organization
            assignment. Click <guimenu>Activate</guimenu>:</para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_confirm_activation.png"
                />
              </imageobject>
              <textobject>
                <phrase>Confirm the activation.</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

        </step>

        <step>
          <para>Your subscription is now active and ready to be
            used:</para>

          <informalfigure>
            <mediaobject>
              <imageobject>
                <imagedata width="80%" fileref="rpi_success.png"/>
              </imageobject>
              <textobject>
                <phrase>You now have an active subscription.</phrase>
              </textobject>
            </mediaobject>
          </informalfigure>

        </step>

      </procedure>





    </sect2>
  </sect1>

  <sect1 xml:id="sec-rpi-documentation">
    <title>Product Documentation</title>
    <para> This introduction only covered the most basic tasks. </para>

    <sect2 xml:id="sec-rpi-documentation-sle">
      <title>Product Documentation</title>
      <para> You can find the complete documentation for &productname;
        12 SP3 at &docaddress;. </para>

      <note>
        <title>Applicability of Product Documentation</title>
        <para> Not all content in the product documentation applies to
          &productname; for ARM on the &rpi;, because the &rpi;
          differs largely from other hardware platforms. </para>
      </note>
    </sect2>

    <sect2 xml:id="sec-rpi-documentation-forum">
      <title>SUSE Forums</title>
      <para>A valid and activated subscription entitles you to receive bug
        and security fixes, feature updates, and technical assistance from
        SUSE's support organization. Learn more at <link
          xlink:href="https://www.suse.com/support/"
          >https://www.suse.com/support/</link>. Via the SUSE Customer
        Center at <link xlink:href="https://scc.suse.com/login"
          >https://scc.suse.com/login</link> you can open an
        incident.</para>

      <para>In addition, SUSE has provided conversation forums where you
        can get answers to questions. Go to <link
          xlink:href="https://forums.suse.com/"
          >https://forums.suse.com/</link>. Under the main forum category
          <emphasis role="strong">SUSE Linux Enterprise Server</emphasis>
        select the sub-forum <emphasis role="strong">SLES for Raspberry
          Pi</emphasis>. </para>

      <important>
        <title>Forums Are No Official Support Channel</title>
        <para>The SUSE Forum is <emphasis role="strong">no
            official</emphasis> support channel from SUSE. The individual
          articles or statements were contributed voluntarily by community
          members and users of the respective products. SUSE cannot verify
          either that the actions described in the articles do what they
          claim to do or that they do not have unintended consequences.
          Therefore, neither SUSE LLC, its affiliates, nor the authors may
          be held liable for possible errors or the consequences
          thereof.</para>

        <para>Visit <link xlink:href="https://www.suse.com/support/"
            >https://www.suse.com/support/</link> for more information
          about official support options.</para>

      </important>

    </sect2>
  </sect1>

  
  <?pdfpagebreak style="sbp" formatter="fop"?>
    <xi:include href="sbp-legal-notice.xml"/>

  <?pdfpagebreak style="sbp" formatter="fop"?>
  <xi:include href="license-gfdl.xml"/>

</article>
