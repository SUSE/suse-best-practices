<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
]>
<article role="sbp" xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="art-sbp-suma-life" xml:lang="en">
    <info>
        <title>Advanced Patch Lifecycle Management with SUSE
            Manager</title>
        <subtitle>Methods and approaches for managing updates in multi-landscape environments</subtitle>
       <!-- <orgname>SUSE Best Practices</orgname>-->
        <productname>SUSE Manager</productname>
        <!--<productnumber>2.1, 3.0. 3.1, 3.2</productnumber>-->
        <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
            <dm:bugtracker>
                <dm:url>https://github.com/SUSE/suse-best-practices/issues/new</dm:url>
                <dm:product>Advanced Patch Lifecycle Management with SUSE
                    Manager</dm:product>
            </dm:bugtracker>
            <dm:editurl>https://github.com/SUSE/suse-best-practices/edit/main/xml/</dm:editurl>
        </dm:docmanager>
        
        
            <meta name="series">SUSE Best Practices</meta> 
            <meta name="category">Systems Management</meta> 
            
            <meta name="platform">SUSE Manager</meta>    
           <!-- <meta name="platform"></meta>-->        
            
            <authorgroup>
            <author>
            <personname>
            <firstname>Jeff</firstname>
            <surname>Price</surname>
            </personname>
            <affiliation>
            <jobtitle>Principal Architect</jobtitle>
            <orgname>SUSE</orgname>
            </affiliation>
            </author>
        <!--    <author>
            <personname>
            <firstname></firstname>
            <surname></surname>
            </personname>
            <affiliation>
            <jobtitle></jobtitle>
            <orgname></orgname>
            </affiliation>
            </author>
            <editor>
            <orgname></orgname>
            </editor>
            <othercredit>
            <orgname></orgname>
            </othercredit>-->
            </authorgroup>
        
        <cover role="logos">
            <mediaobject>
                <imageobject>
                    <imagedata fileref="suse.svg" width="4em"/>
                </imageobject>
            </mediaobject>
           <!-- <mediaobject>
                <imageobject>
                    <imagedata fileref="microsoft.svg" width="6em"/>
                </imageobject>
            </mediaobject>-->
        </cover>       

        <date>July 11, 2018</date>

        <abstract>
            <para>This document describes how to set up and configure a
                SUSE Manager implementation to enable companies in the
                delivery of often requested features. Covered are the
                automatic creation and archive of patch sets by a defined
                time period, a consistent method of patch promotion and
                delivery through numerous landscapes and environments, and
                the exception process for handling patches that need to be
                excluded from a patch cycle. Also explained are the
                creation of an environment with historical patch sets, the
                minimal need for host channel subscription manipulation
                from cradle to grave, and the support for service pack
                migration with custom child channels.</para>
            
            <para>
                <emphasis role="strong">Disclaimer: </emphasis>
                Documents published as part of the SUSE Best Practices series have been contributed voluntarily
                by SUSE employees and third parties. They are meant to serve as examples of how particular
                actions can be performed. They have been compiled with utmost attention to detail. However,
                this does not guarantee complete accuracy. SUSE cannot verify that actions described in these
                documents do what is claimed or whether actions described have unintended consequences.
                SUSE LLC, its affiliates, the authors, and the translators may not be held liable for possible errors
                or the consequences thereof.
            </para>
            
        </abstract>
    </info>


    <sect1 xml:id="sec-overview">
        <title>Overview</title>
        <para>For many organizations today, keeping systems patched and
            secure is one of the biggest ongoing challenges that systems
            administrators can face. Both proprietary and open source
            software companies are constantly at work providing updates
            that fix flaws discovered in their software products.</para>
        <para>Adding to the pressures are the requirements imposed by
            compliance initiatives like PCI-DSS (Payment Card Industry Data
            Security Standard), SOX (Sarbanes-Oxley), HIPAA (Health
            Insurance Portability and Accountability Act), FIPS 140
            (Federal Information Processing Standard), etc. Included in
            most of these <quote>standards</quote> are rules that dictate
            the frequency or time frames for patching and often these
            schedules are modified because of the severity level of a
            specific patch.</para>
        <para>Businesses large and small are depending on an ever-changing
            landscape of applications on a wide range of computer
            infrastructure. These can include physical and virtual hosts
            and may have complicated application stacks. These applications
            may have specific kernel version dependencies, have strict
            uptime requirements or be tied to a specific run time
            environment (like Java). They may only be certified on a
            specific Linux OS release, or have a particular set of
            configuration requirements. There might be extra hardening or
            platform requirements that set these hosts apart from the
            rest.</para>
        <para>Additionally, many companies have created duplicate host
            environments like <quote>development</quote> or
                <quote>QA</quote> landscapes that mirror
                <quote>production</quote> to allow for testing or
            validation of changes. This means at least one more complete
            set of hosts to manage, patch, and report on. This increases
            the challenges of meeting a rigorous patch schedule that often
            requires patching all hosts on a quarterly basis (or more
            frequently for critical vulnerabilities).</para>
        <para>Is there any way to address all of the issues and regain
            control of a complicated enterprise Linux environment?</para>


        <sect2 xml:id="sec-susesol">
            <title>A SUSE Solution</title>
            <para>SUSE Manager delivers best-in-class Linux server
                management features like automated software management,
                system provisioning, and monitoring. It provides a unified
                Linux management infrastructure by standardizing and
                automating server patching and management. These tasks can
                be performed faster and with fewer errors, which improves
                IT staff productivity while reducing server
                downtime.</para>

            <sect3 xml:id="sec-defin">
                <title>Definitions</title>
                <para>This document uses the word <emphasis role="strong"
                        >landscape</emphasis> to describe one of several
                    groups of Linux hosts. This is commonly used with
                    enterprise software deployments as a way to define the
                    role/quality of a host. Examples include production
                    (PROD), development (DEV), quality assurance (QA), user
                    acceptance/testing (UAT), etc.</para>
                <para>The word <emphasis role="strong"
                        >environment</emphasis> is also used. In this
                    document, environment is defined as a physical
                    separation of Linux hosts, like Corporate (CORP), Store
                    (STORE), or NPE (Non-Production Environment).</para>
                <para>Lastly, the word <emphasis role="strong"
                        >organization</emphasis> is used. SUSE Manager has
                    a concept of organizations and defines them as a
                    separate management environment placed under the
                    default organization that is created during initial
                    installation of a SUSE Manager Server. This is a single
                    parent (like an LDAP <quote>O</quote>) with many child
                    placements (like an LDAP <quote>OU</quote>–restricted
                    to a flat OU structure with no nesting). Organizations
                    in SUSE Manager will typically have separate
                    credentials required to administer them via the Web
                    UI–and any Linux hosts managed by SUSE Manager will be
                    registered into a single organization and only visible
                    there. Keep these definitions in mind as you
                    read.</para>

            </sect3>

        </sect2>

        <sect2 xml:id="sec-example">
            <title>Example Scenario</title>
            <para>The Chameleon Corporation is the world’s largest reptile
                and amphibian pet store, and has its headquarters in Yemen.
                It has more than 1500 stores operating under the names
                LizardsRUs, UnVeiledInc and Chameleo-rama in five different
                countries.</para>
            <para>The Chameleon Corporation has the following requirements
                for managing patch and security updates to their Linux
                hosts. Because of compliance constraints, their patch
                lifecycle (the timing and delivery) is based on their
                corporate security policies, the host
                environments/landscapes, and their future management
                needs.</para>
            <para>Here is a high-level summary of the requirements:</para>

            <orderedlist>
                <listitem>
                    <para>The published Security Policy states the need to
                        patch all Linux systems with the latest available
                        updates, bug fixes, and enhancements on a quarterly
                        basis. The quarters are defined as Q1: January
                            1<superscript>st</superscript> through March
                            31<superscript>st</superscript>, Q2: April
                            1<superscript>st</superscript> through June
                            30<superscript>th</superscript>, Q3: July
                            1<superscript>st</superscript> through
                        September 30<superscript>th</superscript>, and Q4:
                        October 1<superscript>st</superscript> through
                        December 31<superscript>st</superscript>.</para>
                </listitem>
                <listitem>
                    <para>The published Security Policy also states the
                        need to patch all Linux systems with
                            <quote>critical</quote> security updates (CVSS
                        score of 7 or greater) within one month of release
                        of the patch. This introduces a second schedule
                        that may overlap any existing patch roll out.</para>
                </listitem>
                <listitem>
                    <para>The company has three different host
                        environments: Corporate, Store, and NPE. These host
                        environments are partitioned using SUSE Manager
                        organizations. Each SUSE Manager organization has
                        visibility into the default SUSE Manager
                        organization’s software channels because of trusts,
                        yet the managed hosts are naturally grouped and
                        managed by their environment.</para>
                </listitem>
                <listitem>
                    <para>There are at least three landscapes in each
                        environment: DEV, UAT, and PROD. There are
                        additional landscapes for some environments (for
                        example, SIT, DIT, etc.) but these are handled
                        similarly to the aforementioned landscapes. Patch
                        lifecycle promotion simply accounts for moving
                        patches into additional stages as needed.</para>
                </listitem>
                <listitem>
                    <para>A <quote>patch exceptions</quote> process exists,
                        as there is often a need to account for the removal
                        of patches (for example kernel updates) from a
                        rollout. Some hosts might have hardware drivers or
                        third party software that depends on specific
                        kernel versions. This exception process would be
                        handled on a case-by-case basis.</para>
                </listitem>
            </orderedlist>
            <para>In summary, these requirements highlight the need for two
                patch schedules, across three (or more) landscapes, in
                three SUSE Manager organizations, with a way to handle a
                storage location for patches that cannot be rolled out
                (exceptions), yet need to be tracked, re-mediated and
                reintroduced to ensure compliance.</para>
            <para>SUSE Manager can handle these complexities very well and
                can be set up to allow flexible delivery of these
                requirements. Automation can even be applied to assist with
                some facets, and procedures can be developed to ensure the
                consistent delivery of patches that meet the published
                company policies.</para>
        </sect2>

        <sect2 xml:id="sec-features">
            <title>Features</title>
            <para>This document describes how to set up and configure a
                SUSE Manager implementation to enable companies to deliver
                these often requested features:</para>
            <itemizedlist>
                <listitem>
                    <para>Automatic creation and archive of patch sets by
                        quarter (or any other time period)</para>
                </listitem>
                <listitem>
                    <para>A consistent method of patch promotion and
                        delivery through numerous landscapes and
                        environments</para>
                </listitem>
                <listitem>
                    <para>An exception process for handling patches that
                        need to be excluded from a patch cycle</para>
                </listitem>
                <listitem>
                    <para>Environment creation with historical patch
                        sets</para>
                </listitem>
                <listitem>
                    <para>Minimal need for host channel subscription
                        manipulation from cradle to grave</para>
                </listitem>
                <listitem>
                    <para>Support for service pack migration with custom
                        child channels</para>
                </listitem>
            </itemizedlist>
            <para>Many of these features can be tuned to meet a change in
                requirements, like an increase in, or a reduction of, the
                number of landscapes (DEV and PROD or Sandbox, DEV, QA,
                UAT, PRE-PROD, PROD, etc.), or a more, or less frequent
                delivery calendar. Keep this in mind as you read. SUSE
                Manager is a very flexible product that has helped many
                customers create and deploy solid systems and patch
                management frameworks. Your requirements may differ from
                the ones described here, but the flexibility of SUSE
                Manager enables you to meet your ongoing and changing
                needs.</para>
        </sect2>

        <sect2 xml:id="sec-guidance">
            <title>Guidance</title>
            <para>This guide is based on SUSE Manager 2.1, but can also be
                used with SUSE Manager 3.0. The document will not highlight
                any Salt minion specifics nor should this matter change how
                channel organizations and patch manipulation are handled
                here.</para>

            <para>A fresh installation is not necessary, but some
                assumption is made that you have a working SUSE Manager
                environment, with some registered hosts, and a decent
                knowledge of the terms and capabilities. The SUSE Manager
                documentation at <link
                    xlink:href="https://documentation.suse.com/suma/3.2/"
                /> is an excellent source of information that is often
                updated. Refer to the documentation for clarification of
                any process that seems confusing. Many of the
                implementation steps detailed in this document are enhanced
                examples based on procedures, capabilities, or step-by-step
                    <quote>how-tos</quote> in our product
                documentation.</para>
            <note>
                <title>Test Your Implementation</title>
                <para>Some advanced features (like using the
                        <command>spacecmd</command> or the XMLRPC API) will
                    be explained in more detail, but these explanations may
                    not be exhaustive. We will include some code examples
                    in the Appendix that can be used as-is, or modified to
                    suit your particular environments or needs. However,
                    these come with <emphasis role="strong">no
                        warranty</emphasis>, and should not be expected to
                    be perfect for any implementation. <emphasis
                        role="strong">Always test</emphasis> your
                    particular implementation before any production
                    usage.</para>
            </note>
            <para>The next section will describe the setup of SUSE Manager
                to meet the requirements defined in the <emphasis
                    role="strong">Scenario</emphasis> section. We will
                start with a description of the architecture (and
                components) developed to meet the requirements, and then
                proceed with steps to create it yourself. Each component
                within this guide is used together with the others to
                deliver a comprehensive solution in the specific scenario
                described herein, but might be used individually to help
                you meet your own solution requirements.</para>
        </sect2>

    </sect1>
    <sect1 xml:id="sec-implement">
        <title>Implementation</title>
        <para>Let’s review. We need to set up SUSE Manager and create a set
            of procedures, processes, and/or tools (scripts) to help us
            with our patch lifecycle management. This will include the
            creation (and optimally an <quote>automatic</quote> creation)
            of patch archive channels from the SUSE provided
                <quote>updates</quote> channels for the versions of SUSE
            Linux Enterprise Server we use. These patch archives will be
            the sources for our patch promotions, but can also be a source
            to set up testing environments based on a patch set rolled out
            in the past. This could be used to troubleshoot an error
            condition for example, by creating a lab full of hosts patched
            up to any previous patch set. We can also demonstrate and
            visualize a clear view of compliance defined by a time-stamped
            set of patches.</para>
        <para>We also need to create a set of software channels that will
            get our updates when <emphasis role="strong">we</emphasis>
            decide to roll them out. Each landscape needs to receive them
            from the previous <quote>validated</quote> landscape <emphasis
                role="strong">only</emphasis>. This means they will first
            get put into DEV, and are tested on the machines there. Then
            they move into QA and get tested there. Finally they get moved
            into PROD. The whole thing will start over every quarter, and
            we will handle exceptions if and when they occur. Every
            exception will be tracked by another established process with
            the constant goal of re-mediating any exception and making sure
            the patch is reintroduced as quickly as possible to ensure our
            clear view of compliance.</para>
        <para>Other interruptions to a quarterly roll out might be the
            release of a <quote>critical</quote> security patch that needs
            to be deployed more rapidly than once-a-quarter. To handle this
            extra schedule, we should create an addition channel for any
            critical patches to track them and their roll out. Patches that
            should be considered as critical patches are any CVE that has a
            CVSS score of 7.1 or greater, or otherwise that is mandated by
            our corporate security organization. We have two different SUSE
            Linux Enterprise Server versions that we currently manage: SUSE
            Linux Enterprise Server 11 SP3 and SUSE Linux Enterprise Server
            12. We want to plan for using SUSE Manager to assist with
            service pack migrations, so setting up to account for SUSE
            Linux Enterprise Server 11 SP4 initially would be ideal. We
            also maintain both 32-bit and 64-bit Intel/AMD architecture
            versions of SUSE Linux Enterprise Server 11 SP3 so we will need
            to account for both of them.</para>
        <para>There are two different environments we need to manage:
            Corporate (CORP) and Store (STORE). We have created separate
            SUSE Manager organizations to allow our systems administrators
            an exclusive view of the hosts they are responsible for. Each
            SUSE Manager organization has the three landscapes (DEV, QA,
            and PROD) that they use for patch testing/promotion.</para>
        <para>Activation keys and bootstraps should be created for each
            SUSE Manager organization (each environment) and each landscape
            so that hosts can be registered into their appropriate, and
            most likely, permanent role. For example, a bootstrap script
            will register a SUSE Linux Enterprise Server 11 SP3 (64-bit)
            DEV host into the correct organization and will add the
            appropriate base and child channels that should never need to
            be manipulated again. Automation is preferred. As mentioned,
            the use of scripts or scheduled jobs would greatly enhance the
            solution and provide relief to the administration staff.</para>

        <sect2 xml:id="sec-arch">
            <title>Architecture</title>
            <para>Here is a high-level outline of the architecture and
                channels:</para>
            <note>
                <title>Use of Prefixes</title>
                <para>For any <emphasis role="strong">Base</emphasis>
                    channel listed here–this can be a clone tree of the
                    SUSE vendor channels–as such it would include a
                        <emphasis role="italic">prefix-</emphasis> in the
                    name. This can aid the handling of service pack
                    migrations described in the channel creation sections
                    that follow.</para>
            </note>

            <itemizedlist>
                <listitem>
                    <para>SUSE Manager Organization</para>
                    <itemizedlist>
                        <listitem>
                            <para>Default (Main) - 1</para>
                            <itemizedlist>
                                <listitem>
                                    <para>32-bit Archive Channels
                                     (Public)</para>
                                    <itemizedlist>
                                     <listitem>
                                     <para>Q2 - 06-30-2015 - SLES 11 SP3
                                     Updates for i586</para>
                                     </listitem>
                                     <listitem>
                                     <para>Q3 - 09-30-2015 - SLES 11 SP3
                                     Updates for i586</para>
                                     </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>64-bit Archive Channels
                                     (Public)</para>
                                    <itemizedlist>
                                     <listitem>
                                     <para>Q2 - 06-30-2015 - SLES 11 SP3
                                     Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>Q3 - 09-30-2015 - SLES 11 SP3
                                     Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>Q2 - 06-30-2015 - SLES 12
                                     Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>Q3 - 09-30-2015 - SLES 12
                                     Updates for x86_64</para>
                                     </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Clone Sets or Child Channels
                                     within SUSE Base Channels</para>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Base : SLES 11 SP3 Pool for
                                     i586</para>
                                    <itemizedlist>
                                     <listitem>
                                     <para>DEV - Current Patch Set - SLES
                                     11 SP3 Updates for i586</para>
                                     </listitem>
                                     <listitem>
                                     <para>QA - Current Patch Set - SLES 11
                                     SP3 Updates for i586</para>
                                     </listitem>
                                     <listitem>
                                     <para>PROD - Current Patch Set - SLES
                                     11 SP3 Updates for i586</para>
                                     </listitem>
                                     <listitem>
                                     <para>Patch Exceptions (DO NOT
                                     SUBSCRIBE) - SLES 11 SP3 i586</para>
                                     </listitem>
                                     <listitem>
                                     <para>Security ASAP Exceptions - SLES
                                     11 SP3 i586</para>
                                     </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Base : SLES 11 SP3 Pool for
                                     x86_64</para>
                                    <itemizedlist>
                                     <listitem>
                                     <para>DEV - Current Patch Set - SLES
                                     11 SP3 Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>QA - Current Patch Set - SLES 11
                                     SP3 Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>PROD - Current Patch Set - SLES
                                     11 SP3 Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>Patch Exceptions (DO NOT
                                     SUBSCRIBE) - SLES 11 SP3 x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>Security ASAP Exceptions - SLES
                                     11 SP3 x86_64</para>
                                     </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Base : SLES 12 SP3 Pool for
                                     x86_64</para>
                                    <itemizedlist>
                                     <listitem>
                                     <para>DEV - Current Patch Set - SLES
                                     12 Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>QA - Current Patch Set - SLES 12
                                     Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>PROD - Current Patch Set - SLES
                                     12 Updates for x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>Patch Exceptions (DO NOT
                                     SUBSCRIBE) - SLES 12 x86_64</para>
                                     </listitem>
                                     <listitem>
                                     <para>Security ASAP Exceptions - SLES
                                     12 x86_64</para>
                                     </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                            <itemizedlist>
                                <listitem>
                                    <para>Patch Exceptions Channels (as
                                     above)</para>
                                    <itemizedlist>
                                     <listitem>
                                     <para>Per Base Channel - 1 channel for
                                     each <quote>Updates</quote>
                                     channel:</para>
                                     <itemizedlist>
                                     <listitem>
                                     <para>Examples:</para>
                                     <itemizedlist>
                                     <listitem>
                                     <para>Patch Exceptions (DO NOT
                                     SUBSCRIBE) - SLES 11 SP3 i586</para>
                                     </listitem>
                                     <listitem>
                                     <para>Security ASAP Exceptions - SLES
                                     11 SP3 i586</para>
                                     </listitem>
                                     </itemizedlist>
                                     </listitem>
                                     </itemizedlist>
                                     </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                    <itemizedlist>
                        <listitem>
                            <para>Corporate (CORP) - 2</para>
                            <itemizedlist>
                                <listitem>
                                    <para>Any public channel will be
                                     visible here</para>
                                </listitem>
                                <listitem>
                                    <para>Private channels can be shared
                                     per organization</para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                    <itemizedlist>
                        <listitem>
                            <para>Store (STORE) - 3</para>
                            <itemizedlist>
                                <listitem>
                                    <para>Any public channel will be
                                     visible here</para>
                                </listitem>
                                <listitem>
                                    <para>Private channels can be shared
                                     per organization</para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </itemizedlist>
        </sect2>

        <sect2 xml:id="sec-design">
            <title>Automation and Process Design</title>
            <para>Automation will include automatic channel clone creation
                for the Archive channels. To best suit a particular
                company’s use cases and product usage, a combination of
                scripts (cron and Bash) and a configuration file will be
                used. The archive creation will be triggered by a custom
                cron job as follows. Criteria for dates will determine the
                exact setup. For example, a quarterly schedule could be
                implemented based on the first or last day of a given
                quarter. If the trigger time is the <emphasis role="strong"
                    >end</emphasis> of a quarter, it would need to consider
                day 30 on the 3<superscript>rd</superscript> and
                    9<superscript>th</superscript> months of a calendar
                (March and September), and day 31 on the
                    6<superscript>th</superscript> and
                    12<superscript>th</superscript> months (June and
                December). This will require two crontab entries such as
                (cron syntax):</para>

<screen>0 0 30 6,9 * /path/to/archive-create-script</screen>


<screen>00 0 31 3,12 * /path/to/archive-create-script</screen>

            <para> If the trigger for the quarter is going to happen on the
                    1<superscript>st</superscript> of a month, then only
                one crontab entry would be required, for example:</para>

<screen>0 0 1 1,4,7,10 * /path/to/archive-create-script</screen>

            <para>The actual <quote>archive-create-script</quote> will also
                need logic in it to determine the quarter it was run and
                formatting logic to provide the correct syntax for SUSE
                Manager channel cloning, etc. The script should also loop
                through each architecture and SUSE Linux Enterprise Server
                version to make a full set of archives based on the
                company’s choices. Processes for patch promotion will be
                created so that administrators can precisely and explicitly
                define when a patch set is moved <emphasis role="strong"
                    >into</emphasis> a given landscape, and just as
                importantly, from <emphasis role="strong">where</emphasis>.
                The easiest method to do this is using a script that
                leverages the XMLRPC API exposed in SUSE Manager. The API
                contains <quote>softwareChannel</quote> methods called
                    <quote>mergePackages</quote> and
                    <quote>mergeErrata</quote>. These two methods can be
                called with a source channel and target channel to quickly
                take content from one channel and merge the differences
                into another.</para>
            <para>The last process will define a workflow for removing a
                patch from the promotion process–and making sure it is
                stored to be tracked. These patch exceptions can later be
                reintroduced to a patch roll out calendar as the reason for
                the exception is re-mediated. In addition to the exception
                process of <emphasis role="strong">removing</emphasis> a
                patch, there is a similar process for <emphasis
                    role="strong">adding</emphasis> a patch as an emergency
                dictates.</para>
            <para>Emergency patches will likely always be available in the
                current SUSE Updates channels, but might not have been
                introduced into an archive channel yet. As the quarterly
                archive channel creation job is triggered, any available
                patches would be part of an archive set, however at any
                other given point in time, this might have occurred before
                the patch was released or it may be up to three months
                until a new archive is created that contains this recent
                patch. A method for searching and then copying a patch into
                a target channel will need to be created. This will handle
                those times when a critical patch is released by SUSE but
                your archive channel will not get a copy until the quarter
                is up.</para>

            <para>Copying these emergency patches into place does not
                affect the normal deployments or creation of archive
                channels. The next archive channel creation will also
                contain this patch, and the use of an emergency patch
                channel with a duplicate patch (in the case of merging the
                same patch later) will not cause any conflicts with a
                system that already has installed it.</para>
            <para>Further explanation can be found below in <xref
                    linkend="sec-exception"/>.</para>
        </sect2>

        <sect2 xml:id="sec-patchpromo">
            <title>Patch Promotion Cycle</title>
            <para>Understanding how patches (and the packages they include)
                are obtained from SUSE, where they go after download, and
                how they are arranged within SUSE Manager is key to setting
                up the Advanced Patch Lifecycle system. By default, SUSE
                Manager arranges its channel sets by a particular version
                and architecture of SUSE Linux Enterprise Server and its
                extensions.</para>
            <para>For example, a base set of channels within SUSE Manager
                for SUSE Linux Enterprise Server 11 SP3 x86_64 includes the
                parent or base channel called a <quote>pool</quote>
                channel. This channel contains packages that are the
                functional equivalent of the installation DVD for SUSE
                Linux Enterprise Server 11 SP3 64-bit. Under this pool
                channel are all of the <quote>child</quote> channels which
                include a channel for the SUSE Manager Client packages,
                called SUSE Manager Tools channel, and an updates channel
                called, in this case, SUSE Linux Enterprise Server 11 SP3
                Updates for x86_64.</para>
            <para>A normal set of channels that a managed host subscribes
                to will include at least a parent channel (pool), a SUSE
                Manager Tools channel, and an Updates channel. In some
                cases like SUSE Linux Enterprise Server 11 SP2, this will
                include the SUSE Linux Enterprise Server 11 SP1 Pool, the
                SP1 Updates channel, the SP2 Core channel, SP2 Updates, SP2
                Extension Store, and the SP2 SUSE Manager Tools
                channel.</para>
            <note>
                <title>Long Term Service Pack Support (LTSS)</title>
                <para>Because both SUSE Linux Enterprise Server SP1 and SP2
                    are in their LTSS phase, there are no longer any
                    non-LTSS updates being created from SUSE. This means
                    that any SP1 or SP2 hosts a company might have will
                    need to purchase LTSS and use the LTSS Updates channel
                    to receive further patches and support. Visit
                        <link xlink:href="http://www.suse.com/lifecycle"/>
                    for more information.</para>
            </note>

            <para>Here is a graphic that illustrates the patch promotion
                process:</para>
            <figure>
                <title>Patch Promotion Process</title>
                <mediaobject>
                    <imageobject role="fo">
                        <imagedata fileref="process-flow.png" width="95%"
                            format="PNG"/>
                    </imageobject>
                    <imageobject role="html">
                        <imagedata fileref="process-flow.png" width="90%"
                            format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </sect2>

        <sect2 xml:id="sec-exception">
            <title>Exception and Escalation Channels</title>
            <para>There might be several reasons to delay or remove a patch
                from a deployment cycle. A patch could be causing issues
                with the stability of a system or systems, it might not
                have passed a testing cycle from the current or previous
                landscape, or there could be some other reason not to
                deploy it within a patch cycle. On the other hand, there
                might be a reason to deploy a critical patch (one that
                patches a security vulnerability or a debilitating bug)
                ahead of schedule. Because of the critical nature of the patch
                it needs to go through testing and deployment as fast as
                possible– without waiting for the next quarterly patch
                cycle.</para>
            <para>To handle the periodic removal or addition of these
                exception patches, processes should be created to track
                them appropriately. While these exceptions are being
                tracked, they will be copied into their own channel
                containers for safekeeping, accounting, and
                reporting.</para>
            <para>These channels can be created within the Archive base
                channel or within the cloned base channel for the version
                of SUSE Linux Enterprise Server that corresponds to the
                patch exception (recommended).</para>
            <para>The process for excluding a patch will be to first
                    <emphasis role="strong">copy</emphasis> the patch (and
                associated packages) into the Exception Channel, and then
                to <emphasis role="strong">remove</emphasis> the patch (and
                associated packages) from the current deployment landscape.
                Optionally it can be removed from the current quarter’s
                archive channel but it is important to realize that the
                patch will be included in the following quarter’s archive
                as well. It might be tempting to remove it from the SUSE
                Updates channel, but this can often lead to a mishandling
                or misreporting of compliance. It is much better to track
                and <emphasis role="strong">resolve</emphasis> the reasons
                for the exception in the first place. This way, the patch
                can be reintroduced to the patch deployment workflow and
                re-mediate any potential security issues or code flaws that
                the patch was created to fix.</para>

            <sect3 xml:id="sec-securityescal">
                <title>Security Escalation Channel and Process
                    Definition</title>
                <para>The process for <emphasis role="strong"
                        >adding</emphasis> a security patch is similar to
                    the process of excluding one. The key difference is
                    that the patch needs to be copied into the Security
                    Exception Channel from either the SUSE Updates channel
                    or the latest archive if it has been created but not
                    used for a promotion cycle yet. Assuming that this
                        <emphasis role="strong">new</emphasis> critical
                    security patch has been released in the middle of a
                    roll out phase (you have already been promoting the
                    current quarter’s patches and this new one comes out),
                    it is likely that this new patch has not yet appeared
                    in an archive.</para>
                <para>Another assumption is the need to test this new patch
                    by promoting it through the landscapes as any normal
                    patch set, but if necessary it can be copied directly
                    to any stage. Simply <emphasis role="strong"
                        >copy</emphasis> this security patch into the
                    initial landscape (for example DEV - Current) and
                    follow the normal deploy-test-promote cycles to get it
                    into production. Depending on the critical nature of
                    the patch, the normal schedule for testing could be
                    accelerated or in rare cases bypassed altogether
                    assuming acceptable risk.</para>
            </sect3>

        </sect2>
        <sect2 xml:id="sec-components">
            <title>Components</title>
            <para>Here is a list of things we will create to enable
                Advanced Patch Lifecycle Management using SUSE Manager 2.1:</para>
                    <bridgehead>Channels</bridgehead>
                <orderedlist>
                    <listitem>
                        <para>Archive Channels</para>
                    </listitem>
                    <listitem>
                        <para>Current Updates Channels</para>
                    </listitem>
                    <listitem>
                        <para>Exception Channels (Patch Exclude or
                            Security-ASAP)</para>
                    </listitem>
                    <listitem>
                        <para>Optional SP-Migration Clone Set</para>
                    </listitem>
                </orderedlist>
                <bridgehead>Activation Keys / Bootstraps</bridgehead>
                <orderedlist>
                    <listitem>
                        <para>Per-Organization/Per-SLES version Activation
                            Keys</para>
                    </listitem>
                    <listitem>
                        <para>Per-Org/Per-SLES version Registration
                            Bootstrap</para>
                    </listitem>
                </orderedlist>
                <bridgehead>Scripts</bridgehead>
                <orderedlist>
                    <listitem>
                        <para>Archive Creation Script</para>
                    </listitem>
                    <listitem>
                        <para>Archive Sources List Control File</para>
                    </listitem>
                    <listitem>
                        <para>Merge Tool Python Script</para>
                    </listitem>
                </orderedlist>
                <bridgehead>Crontab Entries / Automation</bridgehead>
                <orderedlist>
                    <listitem>
                        <para>Quarterly (or other frequency) archive
                            creation call</para>
                    </listitem>
                </orderedlist>

        </sect2>

        <sect2 xml:id="sec-channels">
            <title>Channels</title>
            <para>As described in the architecture section above, several
                custom channels will be created to support the patch
                promotion process. These channels will store the archives
                (created as clones of the SUSE Updates channels) and they
                will also store the exception patches. For each landscape a
                custom channel will be created to hold patches that have
                been promoted. These channels will contain more and more
                content over time as patches are promoted each
                cycle.</para>
            <para>For example, during Quarter 1 (Q1) the archive channel
                contains 159 patches, and these are merged into the DEV
                updates channel for SUSE Linux Enterprise Server 11 SP4. As
                SUSE releases patches in an ongoing fashion, when the next
                quarter’s archive is created, Q2 for this example, it
                contains all of the Q1 patches and an additional 130
                patches for a total of 289. The merge function will take
                the 130 new patches (and associated packages) and add them
                to the DEV updates channel during the next patch
                cycle.</para>
            <para>Each new patch cycle updates the available patches in a
                given landscape’s <quote>current updates</quote> channel.
                In this way each subsequent patch promotion adds the new
                updates and these can be applied to any hosts subscribed to
                the channel.</para>
            <para>The exception channels will be populated by managing
                individual patches, copying them from one of the landscape
                updates channels or from one of the archive channels. When
                a patch is copied successfully into an exception channel,
                it can be removed from an updates channel or an
                archive.</para>

            <sect3 xml:id="sec-creatingchan">
                <title>Creating the Channels</title>
                <bridgehead>Archive Channels:</bridgehead>
                <para>Custom channels are created in SUSE Manager as
                        <quote>new</quote>, blank, and empty channels, or
                        <quote>clones</quote>. Technically, cloned channels
                    can also be created as empty, but in this case we will
                    create the archive channels with content sourced from
                    the SUSE Updates channel, the patches, AND the packages
                    they reference. Each archive channel will reside within
                    an empty base channel. Base channels will be created
                    for each processor architecture managed by SUSE
                    Manager, for example, IA-32, x86_64, s390x, PPC, etc.
                    Multiple archives matching the different versions of
                    SUSE Linux Enterprise Server can exist in the base
                    channel, but they will all be the same processor
                    architecture.</para>
                <para>Create the base archive channels:</para>
                <para>For each processor architecture used by the hosts
                    that SUSE Manager manages, create empty channels named
                        <quote>32-bit Archives Channel</quote> and
                        <quote>64-bit Archives Channel</quote>:</para>
                <orderedlist>
                    <listitem>
                        <para>In the Web UI click <quote>Channels</quote>
                            then the submenu <quote>Manage Software
                                Channels</quote> and click <quote>+Create
                                Channel</quote>.</para>
                    </listitem>
                    <listitem>
                        <para>The channel label <emphasis role="strong"
                                >must be</emphasis> kept in the format of
                                <quote>architecture-patch-archives-channel</quote>,
                            for example the 64-bit channel label should
                            read
                                <quote>x86_64-patch-archives-channel</quote>. </para>
                        <important>
                            <title>Label the Channels</title>
                            <para>Failing to label these channels
                                appropriately will cause the example
                                archive script to not work properly
                                (without modifications). SUSE Manager is
                                very strict about channel
                                    <quote>labels</quote> consisting of
                                lowercase letters, starting with a letter
                                (not a number) and containing no spaces,
                                etc.</para>
                            <para>In this example of creating a label
                                starting with <quote>x86_64</quote> it is
                                assumed a 32-bit channel might be
                                    <quote>i586</quote> or similar.</para>
                        </important>

                    </listitem>
                    <listitem>
                        <para>These archive channels have <quote>NO
                                PARENT</quote>, because they
                                <quote>ARE</quote> parent channels.</para>
                    </listitem>
                    <listitem>
                        <para>Select the appropriate architecture for this
                            channel: x86_64 for 64-bit, and IA-32 for
                            32-bit, etc..</para>
                    </listitem>
                    <listitem>
                        <para>Select the Public radio button for these
                            channels to ensure their visibility to all
                            organizations.</para>
                    </listitem>
                    <listitem>
                        <para>Repeat for each architecture type of SUSE
                            Linux Enterprise Server you have
                            deployed.</para>
                    </listitem>
                </orderedlist>
                <para>Create the cloned archive channels.</para>
                <para>For each version of SUSE Linux Enterprise Server that
                    is used, create cloned channels:</para>
                <orderedlist>
                    <listitem>
                        <para>In the Web UI click <quote>Channels</quote>
                            then the submenu <quote>Manage Software
                                Channels</quote> and click <quote>Clone
                                Channel</quote>.</para>
                    </listitem>
                    <listitem>
                        <para>Select the SUSE “Updates” channel of the SUSE
                            Linux Enterprise Server version you want to
                            create an archive of as the Source.</para>
                    </listitem>
                    <listitem>
                        <para>Make sure to select the radio button for all
                            content/patches.</para>
                    </listitem>
                    <listitem>
                        <para>Name the channel appropriately with an
                            indication of Time/Date and what the archive
                            contains, for example, <quote>Q3 - 09-30-2015 -
                                Archive of SLES 11 SP3 for
                            x86_64</quote>.</para>
                    </listitem>
                    <listitem>
                        <para>Create a label using proper syntax, for
                            example:</para>
                            <screen>q3-09-30-2015-archive-sles11sp3-x86_64</screen>
                    </listitem>
                    <listitem>
                        <para>Important: select the appropriate base
                            archive channel to contain the clone.</para>
                    </listitem>
                    <listitem>
                        <para>Include an appropriate description of the
                            channel in the Summary and Description
                            fields.</para>
                    </listitem>
                    <listitem>
                        <para>Click <quote>Create Channel</quote> when
                            finished.</para>
                    </listitem>
                    <listitem>
                        <para>Scroll down and select the Public radio
                            button and then click <quote>Update
                                Channel</quote>.</para>
                    </listitem>
                    <listitem>
                        <para>Repeat for each SUSE Linux Enterprise Server
                            version under each architecture.</para>
                    </listitem>
                </orderedlist>

                <para>Optional: Use spacewalk-clone-by-date to create
                    archive channels from the past:</para>
                <para>See the Appendix for an example source file that can
                    be used with the spacewalk-clone-by-date utility. This
                    configuration file can be used to create a clone
                    channel with a certain date range as a filter for the
                    content in the channel:</para>
                <orderedlist>
                    <listitem>
                        <para>The utility is called with the following
                            syntax:</para>
                            <screen>spacewalk-clone-by-date -c "config file"</screen>
                    </listitem>
                    <listitem>
                        <para>Repeat this for each archive channel with a
                            past date, modifying the configuration files to
                            match the appropriate dates and channel
                            source/target names.</para>
                    </listitem>
                </orderedlist>

                <sect4 xml:id="sec-spmigration">
                    <title>Service Pack Migration Support with Update and
                        Exception Channels</title>
                    <para>There are a couple of generally accepted methods
                        to manage a set of channels that allows consistent
                        and expected behaviors when leveraging the service
                        pack migration feature. You can find this feature
                        in the software tab of a particular host. It allows
                        you to update the service pack of a particular host
                        in a one-click fashion. When using the patch
                        lifecycle methods described in this document, some
                        challenges arise when using the service pack
                        migration feature. When you select a given host to
                        do a service pack migration, the UI proposes
                        (dictates) a set of mandatory <quote>child</quote>
                        channels that will be subscribed to for a migration
                        action. These mandatory child channels (grayed-out
                        in the UI) will normally include the SUSE provided
                        update channels for a given version of SUSE Linux
                        Enterprise Server.</para>
                    <para>See the following screenshot:</para>
                    <figure>
                        <title>Service Pack Migration</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="screen-sp-migration.png"
                                    width="95%" format="PNG"/>
                            </imageobject>
                            <imageobject role="html">
                                <imagedata
                                    fileref="screen-sp-migration.png"
                                    width="90%" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <para>To allow usage of the patch lifecycle processes
                        described here <emphasis role="strong"
                            >and</emphasis> to use the functionality of
                        service pack migrations, it is best to create a
                        full clone-set of the SUSE Linux Enterprise Server
                        product versions in use at your company. This is
                        sometimes called a clone-tree, and can be easily
                        created using the <command>spacecmd</command>
                        command of the same name,
                            <command>softwarechannel_clonetree</command>.</para>
                    <para>A full clone-tree will include the base/parent
                        channel (normally called a pool) and all child
                        channels that currently exist underneath it. For
                        example, using the SUSE Linux Enterprise Server 11
                        SP3 Pool x86_64 channel as a source, you provide
                        your own <emphasis role="strong">prefix</emphasis>
                        to the clone-tree command and it will make a copy
                        of the pool and all children adding the prefix to
                        the beginning of all the channel names and
                        labels.</para>
                    <para>See below for an image of the original SUSE Linux
                        Enterprise Server 11 SP3 x86_64 channels and the
                        cloned tree with prefix versions
                            <quote>Chameleon_Co-</quote> next to it:</para>
                    <figure>
                        <title>Full Software Channel List for Chameleon
                            Corporation</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="screen-full-sw-channel-list.png"
                                    width="95%" format="PNG"/>
                            </imageobject>
                            <imageobject role="html">
                                <imagedata
                                    fileref="screen-full-sw-channel-list.png"
                                    width="90%" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <para>The command <command>spacecmd
                            softwarechannel_clonetree</command> can be
                        called directly by providing the source and prefix
                        information directly–or interactively by calling
                        the command from within the spacecmd shell
                        itself.</para>
                    <para>Example:</para>
                        <screen>spacecmd -u &lt;SMadmin> -- softwarechannel_clonetree -s sles11-sp3-pool-x86_64 -p "my_company-"</screen>
                    <note>
                        <title>&lt;SMadmin></title>
                        <para>Make sure to replace &lt;SMadmin> with your SUSE Manager webUI administrator user name!</para>
                    </note>
                    <para>This command creates a whole set of SUSE Linux
                        Enterprise Server 11 SP3 x86_64 channels with a
                        prefix of <quote>my_company</quote>.</para>
                    <para>Repeat this process for each version of SUSE
                        Linux Enterprise Server, and then–when using the
                        Service Pack migration feature–you can choose
                            <emphasis role="strong">your</emphasis> company
                        version of the target version of SUSE Linux
                        Enterprise Server, and choose the child channels
                        appropriate for the landscape the host is in (as
                        described below).</para>
                    <para>You can then modify the cloned updates channel by
                        removing all patches/packages, then use the merge
                        script process to merge your <quote>Current Patch
                            Set</quote> into the mandatory updates channel.
                        This way you can do service pack migrations, but
                        still retain <emphasis role="strong"
                            >your</emphasis> currently promoted patch set.
                        Otherwise, SP migrations will always update to
                        whatever are the latest packages in the
                            <quote>mandatory</quote> updates child
                        channel.</para>
                    <para>Consider the following screenshot that shows the
                        Q3 patch archive for SUSE Linux Enterprise Server
                        11 SP4 with 227 packages, the SUSE Updates channel
                        for SP4 with 234 packages, and the Chameleon
                        Corporation version of SP4 Updates with 0 (zero)
                        packages:</para>

                    <figure>
                        <title>Partial View of Software Channel List for
                            SUSE and Chameleon Corporation</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="screen-sw-channel-list-1.png"
                                    width="95%" format="PNG"/>
                            </imageobject>
                            <imageobject role="html">
                                <imagedata
                                    fileref="screen-sw-channel-list-1.png"
                                    width="90%" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>

                    <para>In the upcoming sections we will describe the
                        creation of custom <quote>current updates</quote>
                        channels and how to use a merge script. For service
                        pack migrations using your own set of promoted
                        patches, merge a <quote>Current</quote> Patch
                        Archive from a <quote>production</quote> channel
                        into the <quote>Updates</quote> channel so it will
                        be used for migration efforts–or simply leave the
                            <quote>Updates</quote> channel always <emphasis
                            role="strong">empty</emphasis> and add your
                        Current Updates channel to the <quote>Optional
                            Child Channels</quote>” selection.</para>
                    <para>With an <emphasis role="strong">empty</emphasis>
                        <quote>Updates</quote> channel and a populated
                            <quote>Current Updates</quote>, you can be
                        assured of a service pack migration working as
                        expected and not patching the machine to a version
                        of packages more current than whatever is deemed
                            <quote>production</quote>. The custom
                            <quote>Updates</quote> channels and the merge
                        script process will be described in detail in the
                        coming sections.</para>

                    <bridgehead><quote>Current Updates</quote>
                        Channels:</bridgehead>

                    <para>Now create the <quote>Current Updates</quote>
                        channels that managed hosts will subscribe to
                        depending on their landscape, for example,
                            <quote>DEV - Current Updates - for SLES 11 SP3
                            x86_64</quote>, or <quote>PROD - Current
                            Updates - for SLES 12 x86_64</quote>. There
                        will be a full set of landscape channels for each
                        version of SUSE Linux Enterprise Server and they
                        will all be empty to begin with. Create a
                            <quote>new</quote> channel and then optionally
                            <quote>clone</quote> that one to reduce the
                        amount of typing needed:</para>

                    <orderedlist>
                        <listitem>
                            <para>From the <quote>Manage Software
                                    Channels</quote> submenu, click
                                    <quote>+Create Channel</quote>.</para>
                        </listitem>
                        <listitem>
                            <para>Create the channel within one of the SUSE
                                Linux Enterprise Pool Channels or, if you
                                have your own clone set, within that
                                pool.</para>
                        </listitem>
                        <listitem>
                            <para>Modify the channel to be Public.</para>
                        </listitem>
                        <listitem>
                            <para>Clone this new channel (without updates)
                                into the remaining landscapes, each as a
                                    <quote>Current Updates -</quote>
                                channel, and each with the appropriate
                                landscape prefix (for example, <quote>DEV -
                                </quote>, <quote>TEST - </quote>,
                                    <quote>PROD - </quote>, etc.).</para>
                        </listitem>
                        <listitem>
                            <para>You should end up with a full set of
                                landscapes for each SUSE Linux Enterprise
                                Server version you are going to manage.
                                Keep in mind for the SUSE Linux Enterprise
                                Server 11 SP1 and SP2 channels this will
                                result in a full set x2 (times 2)–or even
                                x4 (times 4) with LTSS. However, SP1 and
                                SP2 Update channels are not being updated
                                any longer, so they could be subscribed as
                                static channels now. (See the note about
                                LTSS in chapter <xref
                                    linkend="sec-patchpromo"/>.)</para>
                        </listitem>
                    </orderedlist>

                    <figure>
                        <title>Example Screenshot of <quote>Current
                                Updates</quote> Channels</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="screen-sw-channel-list-2.png"
                                    width="95%" format="PNG"/>
                            </imageobject>
                            <imageobject role="html">
                                <imagedata
                                    fileref="screen-sw-channel-list-2.png"
                                    width="90%" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>

                    <bridgehead><quote>Exception</quote>
                        Channels:</bridgehead>

                    <para>Now create the two exception channels for each
                        version of SUSE Linux Enterprise Server being
                        managed. While it may be possible to create a mixed
                        channel that is unique to the architecture (like
                        the archive channel base), tracking which
                        distribution a patch exception has come from can
                        get cumbersome. If you mix patches/packages from
                        different versions of SUSE Linux Enterprise Server,
                        it is more difficult to track, resolve, and then
                        reintroduce these patches back into the patch
                        workflow. It is much easier to place them into an
                        exceptions channel specifically for the version of
                        SUSE Linux Enterprise Server the patch came from.
                        Create the <quote>Patch Exception</quote> and
                            <quote>Security ASAP Exception</quote> channels
                        as follows:</para>

                    <orderedlist>
                        <listitem>
                            <para>From the <quote>Manage Software
                                    Channels</quote> submenu, click
                                    <quote>+Create Channel</quote>.</para>
                        </listitem>
                        <listitem>
                            <para>Create the <quote>Patch Exceptions - DO
                                    NOT SUBSCRIBE</quote> channel within
                                one of the SUSE Linux Enterprise Server
                                pool channels or, if you have your own
                                clone set, within that pool. This channel
                                will reside next to your landscape
                                channels.</para>
                        </listitem>
                        <listitem>
                            <para>Modify the channel to be Public.</para>
                        </listitem>
                        <listitem>
                            <para>Create the <quote>Security ASAP
                                    Exception</quote> channel as above–it
                                too will reside next to your landscape and
                                patch exceptions channels.</para>
                        </listitem>
                        <listitem>
                            <para>For SUSE Linux Enterprise Server 11 SP1
                                and SP2 keep in mind: they reside in the
                                same SP1 Pool base channel, so there will
                                be exceptions and security exceptions
                                channels for each service pack.</para>
                        </listitem>
                    </orderedlist>

                    <figure>
                        <title>Example Screenshot of
                                <quote>Exceptions</quote> Channels</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="screen-sw-channel-list-3.png"
                                    width="95%" format="PNG"/>
                            </imageobject>
                            <imageobject role="html">
                                <imagedata
                                    fileref="screen-sw-channel-list-3.png"
                                    width="90%" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </sect4>

            </sect3>
        </sect2>

        <sect2 xml:id="sec-actkeys">
            <title>Activation Keys / Bootstraps</title>
            <para>Typically you will have already created a set of
                Activation Keys assigned to a specific version of SUSE
                Linux Enterprise Server that your hosts are installed with.
                There may be other characteristics assigned in your keys
                like System Groups, assorted Child Channels, Software
                Packages, etc. You can choose to modify your existing
                Activation Keys and reuse them, or you can create new keys
                for this implementation. This example assumes a new
                key.</para>

            <orderedlist>
                <listitem>
                    <para>Within the <quote>Systems</quote> menu -> click
                        the <quote>Activation Keys</quote> submenu from the
                        left panel.</para>
                </listitem>
                <listitem>
                    <para>Click <quote>+Create Key</quote> in the upper
                        right.</para>
                </listitem>
                <listitem>
                    <para>Create the Activation Key within this
                        Organization (remember to log in to other
                        Organizations to create keys there if needed).
                        Assign the appropriate entitlements, software
                        packages, and configuration channels as
                        appropriate.</para>
                </listitem>
                <listitem>
                    <para>Name the Activation Key according to the
                            <emphasis role="strong">Landscape</emphasis>
                        host you will register to with this key.</para>
                    <para>Example:</para>
                    <figure>
                        <title>Create Activation Key Screenshot</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="screen-act-key-details.png"
                                    width="95%" format="PNG"/>
                            </imageobject>
                            <imageobject role="html">
                                <imagedata
                                    fileref="screen-act-key-details.png"
                                    width="90%" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </listitem>

                <listitem>
                    <para><emphasis role="strong">Important:</emphasis>
                        Click on the Child Channels Tab. Now you can assign
                        the appropriate Current Updates channel depending
                        on which <emphasis role="strong"
                            >Landscape</emphasis> this key is for.</para>
                    <para>Example:</para>

                    <figure>
                        <title>Child Channels Screenshot</title>
                        <mediaobject>
                            <imageobject role="fo">
                                <imagedata
                                    fileref="screen-child-channels.png"
                                    width="90%" format="PNG"/>
                            </imageobject>
                            <imageobject role="html">
                                <imagedata
                                    fileref="screen-child-channels.png"
                                    width="90%" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </listitem>

                <listitem>
                    <para>Select the appropriate SUSE Manager Tools channel
                        and the other needed channels to fill out
                        the requirements for the version of SUSE Linux
                        Enterprise Server in question.</para>
                </listitem>
                <listitem>
                    <para>Note that the <emphasis role="strong">Security
                            ASAP Exceptions</emphasis> channel <emphasis
                            role="strong">is</emphasis> selected as an
                        active child channel, and the <emphasis
                            role="strong">Patch Exceptions (DO NOT
                            SUBSCRIBE)</emphasis> channel is <emphasis
                            role="strong">not</emphasis> selected. This is
                        important, because any patch/package copied into
                        the Patch Exceptions channel should remain
                        invisible to hosts while patches/packages copied to
                        the Security ASAP Exceptions channel should always
                        be immediately visible to a host.</para>
                </listitem>
            </orderedlist>

            <para>The Activation Key is called by a bootstrap script–often
                there is a one-to-one relationship between a registration
                bootstrap script and an activation key. Whether new
                activation keys were created or existing ones were modified
                to point to the landscape specific <quote>current
                    updates</quote> channels, there should be a bootstrap
                script that calls that activation key.</para>

            <para>All new hosts will use these bootstraps to register and
                become managed by SUSE Manager. One of the key benefits is
                that they should never need to change their channel
                assignments, as the host will now be assigned to its proper
                landscape update channels and will receive new updates as
                they are promoted each patch cycle. We will discuss
                promotion in the next section <xref linkend="sec-scripts"
                />.</para>


        </sect2>

        <sect2 xml:id="sec-scripts">
            <title>Scripts</title>

            <bridgehead>Patch/Package Merge Script:</bridgehead>
            <para>The <quote>Patch/Package Merge</quote> script is used to
                    <emphasis role="strong">promote</emphasis> patches (and
                relevant packages) from one channel to another. It is used
                at first to merge content from an Archive channel into the
                first stage (<emphasis role="strong">landscape</emphasis>),
                for example DEV. It is then used to promote content from
                one stage to the next until the content reaches the final
                stage. This process is then repeated for each version of
                SUSE Linux Enterprise Server (like 11 SP1, SP2, etc.) and
                each corporate environment (like STORE, CORP, etc.).</para>

            <para>Finally, the entire process is repeated for each patch
                calendar cycle (quarterly/monthly/etc.).</para>

            <bridgehead>Channel Archive Creation Script / Channel Archive
                Sources List Configuration File:</bridgehead>
            <para>This script and its associated <quote>sources
                    list</quote> configuration file are called either
                manually or by a crontab entry. The script uses the sources
                list file to determine which versions of SUSE Linux
                Enterprise Server and which architectures to create
                archives for. As previously described, the Archive channels
                are created as point-in-time clones of the various SUSE
                Linux Enterprise Server Updates channels.</para>
            <para>To have the correct Archive channels created, simply add
                lines to the sources file. Each line has three fields, the
                first being the architecture, the second being the source
                channel, and the third being target channel text. The
                script parses the source list and constructs the target
                parent channel for the archives by architecture, and then
                constructs the target channel and label, etc.</para>
            <para>The script calls the <command>spacecmd</command>
                functions <command>softwarechannel_clone</command> and
                    <command>softwarechannel_setorgaccess</command> for
                each entry in the sources list. It calculates the current
                calendar quarter, creates the archives and makes these
                archives publicly visible. See the Appendix for the entire
                script.</para>

        </sect2>

        <sect2 xml:id="sec-crontab">
            <title>Crontab Entries / Automation</title>

            <bridgehead>Schedule-based Trigger for Archive Creation Script
                (Quarter-End)</bridgehead>
            <para>A decision needs to be made whether a calendar quarter is
                going to get created (looking backward) at the end of a
                particular month, or at the beginning of a month (one day
                past the final day of a quarter). Since the Archive
                channels are getting created by cloning the SUSE Updates
                channels of a particular SLES version, the decision can
                affect the content.</para>
            <para>Either way is fine as it will be consistent from quarter
                to quarter. For the purposes of explaining the cron syntax,
                we will opt to show the more difficult of the two: how to
                call the archive script at the end of the quarter. This is
                more difficult simply because it requires two cron entries
                to handle both the 30<superscript>th</superscript> of the
                month (for June and September) and the
                    31<superscript>st</superscript> of the month (for March
                and December).</para>
            <para>The crontab entries will point to the archive creation
                script and execute in months 3, 6, 9, and 12. Here are what
                the cron entries look like: </para>

<screen>0 0 30 6,9 * /path/to/the/archive/script</screen>
<screen>0 0 31 3,12 * /path/to/the/archive/script</screen>


            <para>The path will point to the actual
                archive-channel-create-script.sh (or similar). This could
                be placed in /usr/sbin/ and must be made <emphasis
                    role="italic">executable</emphasis> (chmod +x).</para>

            <para>Also it is very important to note that this script is
                calling <command>spacecmd</command> commands from within a
                Bash shell script. Spacecmd is itself a python-based shell
                that can be invoked–allowing the use of an extensive set of
                commands <emphasis role="strong">within</emphasis> the
                shell, or from outside the shell as a mediated command
                interpreter.</para>

            <para>The invocation of spacecmd stores a <emphasis
                    role="strong">.spacecmd</emphasis> directory in the
                invoking user`s home directory. Within the .spacecmd
                directory is a configuration file that can store credential sets
                that can be leveraged to avoid being prompted at
                spacecmd execution. This can be used to store credentials
                so the cron job will execute and not pause waiting for
                authentication credentials to be passed.</para>

            <para>The crontab entries will point to the archive creation
                script and execute in months 3, 6, 9, and 12. Here are what
                the cron entries look like:</para>

            <para>
                <parameter>[spacecmd]</parameter>
            </para>
            <para>
                <parameter>server=localhost</parameter>
            </para>
            <para>
                <parameter>username=admin</parameter>
            </para>
            <para>
                <parameter>password=suse1234</parameter>
            </para>
            <para>
                <parameter>nossl=0</parameter>
            </para>

            <para>Storing these credentials will allow
                    <command>spacecmd</command> operations from the SUSE
                Manager’s root user to be executed without the need to pass
                user name or password–allowing the cron job for archive
                creation to run without failure at the appropriate
                time.</para>

        </sect2>
    </sect1>

    <sect1 xml:id="sec-usage">
        <title>Usage Workflows</title>

        <para>This guide describes an approach to patch lifecycle
            management that leverages SUSE Manager to deliver the following
            benefits:</para>

        <itemizedlist>
            <listitem>
                <para>Automated creation of Patch Archive Channels:</para>
                <itemizedlist>
                        <listitem>
                            <para>These channels can be created on a
                                quarterly (or more frequent) basis and
                                allow an organization to create test
                                environments based on a historical set of
                                patches (for example, the creation of a lab
                                using available patches from two calendar
                                quarters ago).</para>
                        </listitem>
                    </itemizedlist>

            </listitem>
            <listitem>
                <para>Leverage a static set of <quote>current</quote>
                    update channels so host subscriptions do not need to
                    change:</para>
                <itemizedlist>
                    <listitem>
                        <para>Using the API/scripts, updates can be merged
                            from a patch <quote>archive</quote> into a
                            subscribed host channel removing the need to
                            constantly clone and re-clone channels and
                            modify host subscriptions.</para>
                    </listitem>
                    <listitem>
                        <para>Multi-landscape environments can use a
                            promotion process to merge updates through each
                            phase during testing/validation of patch
                            sets.</para>
                    </listitem>
                </itemizedlist>
            </listitem>
            <listitem>
                <para>Exception handling for patches that need to be
                excluded from a patch roll out:</para>
                <itemizedlist>
                        <listitem>
                            <para>The creation of a <quote>patch
                                    exceptions</quote> channel and a
                                process for copying patches/packages into
                                that channel (and then removing them from
                                an updates channel) allows for tracking of
                                patch exceptions. This channel should be
                                    <emphasis>excluded</emphasis> from any
                                hosts channel subscriptions, thereby
                                keeping all patch/package content from
                                being visible or available for
                                installation.</para>
                        </listitem>
                        <listitem>
                            <para>Patch exceptions <quote>processes</quote>
                                must be developed to track
                                remediation of all exceptions to
                                avoid future complications from managing an
                                ever-growing bucket of patches.</para>
                        </listitem>
                    </itemizedlist>

            </listitem>
            <listitem>
                <para>Security ASAP Exceptions handling for patches that
                need to roll out with a higher priority:</para>
                <itemizedlist>
                        <listitem>
                            <para>The security ASAP exception channel
                                should always be subscribed to (unlike the
                                    <quote>patch exceptions</quote>
                                channel). Subscription to this channel
                                allows a host to obtain patches/packages
                                added in an ad hoc manner, for example a
                                security patch deemed important enough to
                                deploy outside of a normal patch schedule.
                                This could be copied from a new archive or
                                directly from one of the SUSE (vendor)
                                updates channels.</para>
                        </listitem>
                    </itemizedlist>

            </listitem>
        </itemizedlist>

        <sect2 xml:id="sec-exprocesswf">
            <title>Example Process Workflows</title>

            <para>Here are some suggested workflows for the patch promotion
                and exception processes. Keep in mind that these can be
                modified to fit more closely to a particular operational
                group’s existing set of processes.</para>

            <bridgehead>Workflow 1: Patch Promotion Process</bridgehead>

            <para>The patch promotion process follows the following sample
                steps.</para>

            <table>
                <title>Patch Promotion Process</title>
                <tgroup cols="3">
                    <colspec colwidth="3cm"/>
                    <colspec colwidth="1*"/>
                    <colspec colwidth="1*"/>
                    <thead>
                        <row>
                            <entry>Action</entry>
                            <entry>Process</entry>
                            <entry>Notes</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>Review</entry>
                            <entry>Refer to the existing calendar to
                                determine the start date for a patch
                                roll out.</entry>
                            <entry>Start dates typically happen when a new
                                quarter begins, but this depends on your
                                frequency and established periods for
                                roll outs.</entry>
                        </row>
                        <row>
                            <entry>Select</entry>
                            <entry>Identify the SUSE Manager Organization
                                and the environment targets for the patch
                                roll out.</entry>
                            <entry>In the scenario here, this could be CORP
                                or STORE or NPE, and depending on the use
                                of SUSE Manager Organizations an
                                administrator would need to log in to the
                                Organization to see the hosts.</entry>
                        </row>
                        <row>
                            <entry>Select</entry>
                            <entry>Choose the SUSE Linux Enterprise Server
                                version(s) that will be patched.</entry>
                            <entry>Patch promotions are done for each SUSE
                                Linux Enterprise Server version. Each
                                version has its own set of landscape
                                channels that patches get promoted through
                                (DEV, TEST, QA, PROD, etc.).</entry>
                        </row>
                        <row>
                            <entry>Merge</entry>
                            <entry>Merge the current archive into the
                                initial landscape (or landscape of
                                choice).</entry>
                            <entry>Using the <quote>Merge Script</quote>
                                utility: select the <emphasis role="strong"
                                    >source</emphasis> channel (<emphasis
                                    role="strong">archive</emphasis> in
                                this case) and <emphasis role="strong"
                                    >target</emphasis> channel (DEV -
                                Current to begin a series).</entry>
                        </row>
                        <row>
                            <entry>Deploy</entry>
                            <entry>Deploy patches from the current
                                landscape to the subscribed hosts.</entry>
                            <entry>When patches have been merged, the
                                status of hosts subscribed to the
                                    <quote>current</quote> channel will
                                show which patches are now available. Issue
                                the appropriate patch commands to deploy
                                these patches.</entry>
                        </row>
                        <row>
                            <entry>Test</entry>
                            <entry>Coordinate testing for the hosts that
                                have received the latest deployed patches,
                                or notify the appropriate teams/LOB to
                                start their evaluation.</entry>
                            <entry>After the patches have been deployed, a
                                period of testing or review should start–in
                                order to validate the success of the patch
                                deployment. Coordination should occur with
                                business partners to establish success of
                                deployment.</entry>
                        </row>
                        <row>
                            <entry>Evaluate</entry>
                            <entry>Evaluate the results of the previous
                                merge/deploy and proceed with the next
                                landscape. If final landscape, report
                                completion.</entry>
                            <entry>Continue to merge and deploy patch sets
                                into each landscape until the final one.
                                Report completion–all hosts should show
                                    <quote>green</quote> status.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>


            <bridgehead>Workflow 2: Patch Exception Process</bridgehead>

            <para>The patch exception process follows the following sample
                steps. Again, keep in mind that these can be modified to
                fit more closely to a particular operational group’s
                existing set of processes.</para>
            <para>Consider the following table:</para>

            <table>
                <title>Patch Exception Process</title>
                <tgroup cols="3">
                    <colspec colwidth="3cm"/>
                    <colspec colwidth="1*"/>
                    <colspec colwidth="1*"/>
                    <thead>
                        <row>
                            <entry>Action</entry>
                            <entry>Process</entry>
                            <entry>Notes</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>Identify</entry>
                            <entry>Locate the patch you want to identify as
                                an <quote>exception</quote> for potential
                                removal from patch set.</entry>
                            <entry>Find the patch using the search tools in
                                SUSE Manager, or locate the patch in a
                                specific Archive or Landscape
                                Channel.</entry>
                        </row>
                        <row>
                            <entry>Copy</entry>
                            <entry>Using the <quote>Manage Channels</quote>
                                function of SUSE Manager: select the
                                    <emphasis role="strong"
                                    >exception</emphasis> channel for a
                                specific version of SUSE Linux Enterprise
                                Server and add the identified patch into it
                                from the source (from previous
                                step).</entry>
                            <entry>
                                <para>The source of the patch (channel) and
                                    the target of the patch (exceptions
                                    channel) are important. This step may
                                    be repeated for different
                                    versions of SUSE Linux Enterprise
                                    Server. Potential sources for the patch
                                    can be an:</para>
                                <orderedlist numeration="loweralpha">
                                    <listitem>
                                     <para>Archive Channel</para>
                                    </listitem>
                                    <listitem>
                                     <para>Landscape Channel</para>
                                    </listitem>
                                    <listitem>
                                     <para>SUSE Updates Channel</para>
                                    </listitem>
                                </orderedlist>
                            </entry>
                        </row>
                        <row>
                            <entry>Remove</entry>
                            <entry>Using the <quote>Manage Channels</quote>
                                function of SUSE Manager:
                                    <emphasis>list</emphasis> the patches
                                to find the patch that was
                                    <quote>added</quote> in the previous
                                step. Find it and then <emphasis
                                    role="strong">remove</emphasis> it from
                                the current phase (or phases).</entry>
                            <entry>Finding the patch and then removing it
                                from a Landscape Channel keeps the
                                subscribed hosts from seeing the patch–and
                                reporting its applicability.</entry>
                        </row>
                        <row>
                            <entry>Track</entry>
                            <entry>Submit any tickets or commence any
                                established process to track this patch
                                exception.</entry>
                            <entry>The goal of tracking is to remain aware
                                that there is an exception and attempt to
                                re-mediate, allowing the patch to be
                                reintroduced into a patch deployment
                                cycle.</entry>
                        </row>
                        <row>
                            <entry>Remediate</entry>
                            <entry>Work to re-mediate the exception.</entry>
                            <entry>When a fix has been identified/created
                                for a given exception, the patch can be
                                reintroduced into a deployment
                                workflow.</entry>
                        </row>
                        <row>
                            <entry>Note</entry>
                            <entry>Exceptions should only last for a
                                    <emphasis role="strong"
                                    >single</emphasis> deployment cycle.
                                Keep in mind the next archive will also
                                contain this same patch–which is a
                                    <emphasis role="strong">good
                                    thing</emphasis>.</entry>
                            <entry>Exceptions should always be a temporary
                                condition. Work should always be done to
                                fix the reasons a patch cannot roll out–
                                compliance can be at risk while an
                                exception exists.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>

            <bridgehead>Workflow 3: Security Patch ASAP
                Process</bridgehead>

            <para>The security exception process differs from the previous
                patch exception process in that a patch is now being
                    <emphasis role="strong">added</emphasis> to a patch
                roll out cycle–likely in the middle of a current
                (inprogress) roll out. Another process table and some screenshots from the SUSE Manager
                interface are included here to provide further clarity.</para>
            <para>Review the following table:</para>

            <table>
                <title>Security Patch ASAP Process</title>
                <tgroup cols="3">
                    <colspec colwidth="3cm"/>
                    <colspec colwidth="1*"/>
                    <colspec colwidth="1*"/>
                    <thead>
                        <row>
                            <entry>Action</entry>
                            <entry>Process</entry>
                            <entry>Notes</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>Identify</entry>
                            <entry>Locate the patch you want to identify as
                                a <quote>security exception</quote>–for
                                potential <emphasis role="strong">addition
                                    to</emphasis> a particular landscape or
                                patch set. </entry>
                            <entry>Find the patch using the search tools in
                                SUSE Manager, or locate the patch in a
                                specific Updates Channel for a specific
                                version of SUSE Linux Enterprise
                                Server.</entry>
                        </row>
                        <row>
                            <entry>Copy</entry>
                            <entry>Using the <quote>Manage Channels</quote>
                                function of SUSE Manager, select the
                                Security ASAP Exception Channel for a
                                specific version of SUSE Linux Enterprise
                                Server and <emphasis>add</emphasis> the
                                identified patch to it from the source
                                (likely the SUSE Updates Channel from the
                                previous step).</entry>
                            <entry>
                                <para>The source of the security patch
                                    (SUSE Updates Channel) and the target
                                    of the patch (Security Exceptions ASAP
                                    Channel) is key. This step may be
                                    repeated for different versions
                                    of SLES. Potential source for the patch
                                    will likely be an:</para>
                                <orderedlist numeration="loweralpha">
                                    <listitem>
                                     <para>Archive Channel</para>
                                    </listitem>
                                    <listitem>
                                     <para>Landscape Channel</para>
                                    </listitem>
                                    <listitem>
                                     <para>SUSE Updates Channel</para>
                                    </listitem>
                                </orderedlist>
                            </entry>
                        </row>
                        <row>
                            <entry>Deploy</entry>
                            <entry>Deploy the Security Exception patch(es)
                                into the selected landscape to the
                                subscribed hosts.</entry>
                            <entry>When the Security patches have been
                                added to a Landscape Channel, the status of
                                hosts subscribed to the “current” channel
                                will show patches are now available. Issue
                                the appropriate patch commands to deploy
                                these patches.</entry>
                        </row>
                        <row>
                            <entry>Track</entry>
                            <entry>Submit any tickets or commence any
                                established process to track this Security
                                Patch exception.</entry>
                            <entry>The goal of tracking is to remain aware
                                that a Security Patch exception has been
                                deployed. This patch will become part of a
                                normal archive during the next quarterly
                                automation creation.</entry>
                        </row>
                        <row>
                            <entry>Report</entry>
                            <entry>Security Exceptions normally occur to
                                handle a compliance concern. When deployed,
                                a compliance (Audit) report can be
                                generated.</entry>
                            <entry>Security Exceptions are handled as an
                                escalation to the normal schedule. They
                                will, as a matter of normal operation, be
                                part of the next Archive and would be
                                deployed as part of the default schedule–
                                and as a corollary, the next normal roll out
                                would not need to include this patch (as it
                                will already be deployed).</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>

            <para>This screenshot shows the function of adding a patch to
                the Security ASAP Exceptions Channel–specifically the SLES
                11 SP1 x86_64 version:</para>

            <figure>
                <title>Adding a patch to the Security ASAP Exceptions
                    Channel</title>
                <mediaobject>
                    <imageobject role="fo">
                        <imagedata fileref="screen-security-exceptions.png"
                            width="95%" format="PNG"/>
                    </imageobject>
                    <imageobject role="html">
                        <imagedata fileref="screen-security-exceptions.png"
                            width="90%" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>

            <para>This screenshot provides a view of the <emphasis
                    role="strong">List/Remove</emphasis> function of a
                specific channel (in this case, <quote>DEV - Current -
                    SLES11-SP1-LTSS-Updates for x86_64</quote>), and would
                be the interface where a patch would be removed from a
                channel and keep it from being visible and potentially
                deployed as part of an exception process.</para>

            <figure>
                <title>Adding a patch to the Security ASAP Exceptions
                    Channel</title>
                <mediaobject>
                    <imageobject role="fo">
                        <imagedata fileref="screen-suma-patches.png"
                            width="95%" format="PNG"/>
                    </imageobject>
                    <imageobject role="html">
                        <imagedata fileref="screen-suma-patches.png"
                            width="90%" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </sect2>
    </sect1>

    <sect1 xml:id="sec-appendix">
        <title>Appendix</title>

        <sect2 xml:id="sec-spacewalksample">
            <title>Spacewalk-Clone-By-Date Configuration File
                Sample</title>
            <para>This sample is stored as a text file. It is used with the
                    <emphasis role="strong"
                    >spacewalk-clone-by-date</emphasis> utility by using
                the <emphasis role="strong">-c</emphasis> flag to indicate
                an input configuration file:</para>

            <screen>spacewalk-clone-by-date -c Q3-2015-sles11sp3-x86_64-archive.conf</screen>

            <para>Note that it specifies the base channel source <emphasis
                    role="strong">sles11-sp3-pool-x86_64</emphasis> and the
                target base channel (destination) <emphasis role="strong"
                    >cc_patch_archives_channel_64bit</emphasis> and uses
                the directive of <emphasis role="strong"
                    >existing-parent-do-not-modify</emphasis>
                <emphasis role="strong">: true</emphasis>. This tells the
                utility that a child channel from one base will be cloned
                into a completely different base channel. Note that your
                channel names might be different; this means this example
                may need modifications to work in your case. Example:
                    <emphasis role="strong"
                    >Q3-2015-sles11sp3-x86_64-archive.conf</emphasis>
                contents below. </para>


            <screen>
{
 "username":"SMadmin",
 "to_date": "2015-09-30",
 "skip_depsolve":false,
 "security_only":false,
 "use_update_date":false,
 "no_errata_sync":false,
 "dry_run":false,
 "channels":[
       {
         "sles11-sp3-pool-x86_64": {
            "label": "cc_patch_archives_channel_64bit",
            "existing-parent-do-not-modify": true
         },
         "sles11-sp3-updates-x86_64": {
            "label": "09_30_2015_q3_archive-sles11-sp3-updates-x86_64",
            "name": "Q3-2015 Patch Archive - 09-30-2015 - SLES11-SP3-Updates for x86_64",
            "summary": "Q3 - 2015 - Patch Archive Set (9-30-2015) - SUSE Linux Enterprise Server 11 SP3 x86_64",
            "description": "Q3 - 2015 - Patch Archive Set (9-30-2015) - SUSE Linux Enterprise Server 11 SP3 x86_64"
         }
        }
       ]
}
</screen>


            <note>
                <title>Review Channel Patch Content </title>
                <para>When using the spacewalk-clone-by-date utility,
                    review the channel patch content after creation
                    to ensure that the channel contains the patches for the
                    appropriate end date. Sometimes extra patches are
                    included in the channel that are in the wrong time
                    period and can be deleted manually.</para>
            </note>

        </sect2>

        <sect2 xml:id="sec-samplepatch">
            <title>Sample Patch/Package Merge Script Using Python</title>

            <para>This script has a defined SUSE Manager server URL set in
                the <varname>MANAGER_URL</varname>. The script prompts for
                a SUSE Manager Administrator ID and password. It then asks
                for a source and target channel. The script will then
                confirm the channels and ask if it should continue. An
                affirmative response (Y) will then allow the script to
                merge the patches and packages from the source channel into
                the target channel.</para>

            <screen>#!/usr/bin/python
import xmlrpclib
import sys
import getpass

MANAGER_URL = "https://suma01.chameleoncorp.com/rpc/api"
MANAGER_LOGIN = raw_input("Please Enter the SUSE Manager Login Name: ")
MANAGER_PASSWORD = getpass.getpass("Please Enter the Password: ")

MERGE_SOURCE = raw_input("Enter the SOURCE channel label to Merge FROM: ")
MERGE_TARGET = raw_input("Enter the TARGET channel label to Merge INTO: ")

print("This tool is going to take all packages and errata from the SOURCE")
print("Channel : " + MERGE_SOURCE)
print("and merge it into the TARGET ")
print("Channel : " + MERGE_TARGET)

def query_yes_no(question, default="yes"):
    """Ask a yes/no question via raw_input() and return their answer.

    "question" is a string that is presented to the user.
    "default" is the presumed answer if the user just hits &lt;Enter>.
        It must be "yes" (the default), "no" or None (meaning
        an answer is required of the user).

        The "answer" return value is True for "yes" or False for "no".
        """
        valid = {"yes": True, "y": True, "ye": True,
                 "no": False, "n": False}
        if default is None:
            prompt = " [y/n] "
        elif default == "yes":
            prompt = " [Y/n] "
        elif default == "no":
            prompt = " [y/N] "
        else:
            raise ValueError("invalid default answer: '%s'" % default)

        while True:
            sys.stdout.write(question + prompt)
            choice = raw_input().lower()
            if default is not None and choice == '':
                return valid[default]
            elif choice in valid:
                return valid[choice]
            else:
                sys.stdout.write("Please respond with 'yes' or 'no' "
                                 "(or 'y' or 'n').\n")

query_yes_no("Is this information correct?")

client = xmlrpclib.Server(MANAGER_URL, verbose=0)
key = client.auth.login(MANAGER_LOGIN, MANAGER_PASSWORD)

client.channel.software.mergePackages(key, MERGE_SOURCE, MERGE_TARGET)
client.channel.software.mergeErrata(key, MERGE_SOURCE, MERGE_TARGET)

client.auth.logout(key)</screen>

        </sect2>

        <sect2 xml:id="sec-samblecontab">
            <title>Sample Crontab Entries for Automation of Archive Channel
                Creation</title>

            <para>Below are some sample cron entries that can be used to
                run the <emphasis role="strong">Archive Channel Creation
                    Script</emphasis> resulting in channel creation for
                each quarter. This example has two entries to
                clone all patches received up until the end of a quarter. A
                single entry could be used to create it at the beginning of
                a quarter, but care must be taken to modify the
                calculations in the <emphasis role="strong">Archive
                    Script</emphasis> to account for that. Currently the
                example <emphasis role="strong">Archive Channel Creation
                    Script</emphasis> below figures out what quarter it is
                by looking at the current date. Running the script in the
                    4<superscript>th</superscript> quarter will name the
                archive created as a 4<superscript>th</superscript> quarter
                archive.</para>

            <para>Cron entries for end of quarter: (for example
                    30<superscript>th</superscript> of months June and
                September and 31<superscript>st</superscript> of months
                March and December):</para>


                <screen>0 0 30 6,9 * /path/to/the/archive/script</screen>

                <screen>0 0 31 3,12 * /path/to/the/archive/script</screen>


        </sect2>

        <sect2 xml:id="sec-samplechancreation">
            <title>Sample Archive Channel Creation Script for SUSE Manager 2.1 and 3.0</title>
            <para>The script below works with the <emphasis role="strong"
                    >Archive Channel Sources</emphasis> file (see <xref
                    linkend="sec-samplechansources"/>) to create quarterly
                archives of the SUSE Updates channels. This example script
                is written in <emphasis role="strong">Bash</emphasis> but
                calls <command>spacecmd</command> to accomplish the cloning
                and to set the new archive to be public (accessible to
                other organizations).</para>

            <para>The script takes some time to run. The clone command
                finishes quickly, but the actual cloned channel still takes
                some time to settle down before the
                    <command>org-access</command> command can access and
                finish. If you want to test this manually you must be
                patient. A normal crontab-type run of the script will
                finish in due time.</para>


            <screen>#!/bin/bash

        ####################################################################
        #    SUMA Archive Channel Creation Script - Called from Cron       #
        #                                                                  #
        #    This script creates quarterly archives of SUSE Manager        #
        #    channels from SUSE Updates channels. It takes a list          #
        #    of source channels from the archive-sources.lst file          #
        #    that should be located in the same directory as this          #
        #    script. Each entry in that file will be used as a             #
        #    source channel to create an archive for patches/updates       #
        #    in the appropriate archive channel.                           #
        #                                                                  #
        # REQUIRES:                                                        #
        #                1. cron entries for each quarter :                #
        #     e.g. 30th of months June and Sept. and 31st of months March  #
        #       and December:                                              #
        #                0 0 30 6,9 * /path/to/this/script                 #
        #                0 0 31 3,12 * /path/to/this/script                #
        #                                                                  #
        #                2. archive-sources.lst :                          #
        #     A list of the architecture, the source updates channel       #
        #     for each distro and the suffix of the target channel         #
        #     version and architecture (1 per line - no line-feed at EOF)  #
        #   Example:                                                       #
        #  S390x,sles11-sp3-updates-s390x,SLES11-SP3-Updates for s390x     #
        #  ppc64,sles11-sp4-updates-ppc64,SLES11-SP4-Updates for PPC       #
        #  x86_64,sles11-sp3-updates-x86_64,SLES11-SP3-Updates for x86_64  #
        #         etc.                                                     #
        #                                                                  #
        ####################################################################
        #                                                                  #
        #       Created by - Jeff Price, SUSE Consulting - 2015            #
        #                                                                  #
        ####################################################################

## date strings
month=`date +%m`
year=`date +%Y`
fdate=`date +%m-%d-%Y`
## set quarter
if [ $month -le 3 ]
then
   quar=1
elif [ $month -gt 3 ] &amp;&amp; [ $month -lt 7 ]
then
   quar=2
elif [ $month -gt 6 ] &amp;&amp; [ $month -lt 10 ]
then
   quar=3
elif [ $month -gt 9 ]
then
   quar=4
fi

## Create archives using source list

while read line
do
        arch=`echo "$line" | awk -F, '{print $1}'`
        src_ch=`echo "$line" | awk -F, '{print $2}'`
        trg_ch=`echo "$line" | awk -F, '{print $3}'`
## set archive channel

target_parent=$arch"-patch-archives-channel"
source_channel=$src_ch
target_channel_name="Q"$quar" "$year" - "$fdate" - Archive of "$trg_ch
target_summary="Q"$quar"-"$year" Archive Set "$trg_ch
target_channel_label="q"$quar"-"$year"-archive-"$src_ch

## Debug Output
echo "Architecture: " $arch
echo "Source Channel: "$src_ch
echo "Target Channel Archive Suffix: "$trg_ch
echo "Target Archive Parent Channel: "$target_parent
echo "Source Channel (again): "$source_channel
echo "Target Channel Name: "$target_channel_name
lctn=`echo $target_channel_name|tr '[:upper:]' '[:lower:]'`
echo "lowercase target name: "$lctn
echo "Target Channel Label: "$target_channel_label
echo "Target Channel Summary and Description: "$target_summary

/usr/bin/spacecmd -d -- softwarechannel_clone -s “‘$src_ch’” -n
“‘$target_channel_name’” -l “‘$target_channel_label’” -p “‘$target_parent’” - g
/usr/bin/spacecmd -d -- softwarechannel_setorgaccess
“‘$target_channel_label’” -e
done &lt; ./archive-sources.lst

</screen>
        </sect2>      
        

        
        <sect2 xml:id="sec-samplechancreation-update">
            <title>Sample Archive Channel Creation Script for SUSE Manager 3.1 and 3.2</title>
            <para>The script below works with the <emphasis role="strong"
                >Archive Channel Sources</emphasis> file (see <xref
                    linkend="sec-samplechansources"/>) to create quarterly
                archives of the SUSE Updates channels. This example script
                is written in <emphasis role="strong">Bash</emphasis> but
                calls <command>spacecmd</command> to accomplish the cloning
                and to set the new archive to be public (accessible to
                other organizations).</para>
            
            <para>The script takes some time to run. The clone command
                finishes quickly, but the actual cloned channel still takes
                some time to settle down before the
                <command>org-access</command> command can access and
                finish. If you want to test this manually you must be
                patient. A normal crontab-type run of the script will
                finish in due time.</para>
            
            
<screen>#!/bin/bash
                
        ####################################################################
        #    SUMA Archive Channel Creation Script - Called from Cron       #
        #                                                                  #
        #    This script creates quarterly archives of SUSE Manager        #
        #    channels from SUSE Updates channels. It takes a list          #
        #    of source channels from the archive-sources.lst file          #
        #    that should be located in the same directory as this          #
        #    script. Each entry in that file will be used as a             #
        #    source channel to create an archive for patches/updates       #
        #    in the appropriate archive channel.                           #
        #                                                                  #
        # REQUIRES:                                                        #
        #                1. cron entries for each quarter :                #
        #     e.g. 30th of months June and Sept. and 31st of months March  #
        #       and December:                                              #
        #                0 0 30 6,9 * /path/to/this/script                 #
        #                0 0 31 3,12 * /path/to/this/script                #
        #                                                                  #
        #                2. archive-sources.lst :                          #
        #     A list of the architecture, the source updates channel       #
        #     for each distro and the suffix of the target channel         #
        #     version and architecture (1 per line - no line-feed at EOF)  #
        #   Example:                                                       #
        #  S390x,sles11-sp3-updates-s390x,SLES11-SP3-Updates for s390x     #
        #  ppc64,sles11-sp4-updates-ppc64,SLES11-SP4-Updates for PPC       #
        #  x86_64,sles11-sp3-updates-x86_64,SLES11-SP3-Updates for x86_64  #
        #         etc.                                                     #
        #                                                                  #
        ####################################################################
        #                                                                  #
        #       Created by - Jeff Price, SUSE Consulting - 2015            #
        #       Updated for SUMA 3.1 &amp; 3.2 - Levin Forrest,            #
        #       Lenovo Consulting - 2018                                   #
        #                                                                  #
        ####################################################################
                
## date strings
month=`date +%m`
year=`date +%Y`
fdate=`date +%m-%d-%Y`
## set quarter
if [ $month -le 3 ]
then
   quar=1
elif [ $month -gt 3 ] &amp;&amp; [ $month -lt 7 ]
then
   quar=2
elif [ $month -gt 6 ] &amp;&amp; [ $month -lt 10 ]
then
   quar=3
elif [ $month -gt 9 ]
then
   quar=4
fi
                
## Create archives using source list
                
while read line
do
        arch=`echo "$line" | awk -F, '{print $1}'`
        src_ch=`echo "$line" | awk -F, '{print $2}'`
        trg_ch=`echo "$line" | awk -F, '{print $3}'`
## set archive channel
## Note the target_parent requires this EXACT channel already created
target_parent=$arch"-patch-archives-channel"
source_channel=$src_ch
target_channel_name="Q"$quar" "$year" - "$fdate" - Archive of "$trg_ch
target_summary="Q"$quar"-"$year" Archive Set "$trg_ch
target_channel_label="q"$quar"-"$year"-archive-"$src_ch
                
## Debug Output
echo "Architecture: " $arch
echo "Source Channel: "$src_ch
echo "Target Channel Archive Suffix: "$trg_ch
echo "Target Archive Parent Channel: "$target_parent
echo "Source Channel (again): "$source_channel
echo "Target Channel Name: "$target_channel_name
lctn=`echo $target_channel_name|tr '[:upper:]' '[:lower:]'`
echo "lowercase target name: "$lctn
echo "Target Channel Label: "$target_channel_label
echo "Target Channel Summary and Description: "$target_summary
                
## removed double quotes from $src_ch to allow spacecmd to parse correctly
## removed single quotes from $target_channel_label and $target_parent to allow spacecmd to parse correctly
## only $target_channel_name should have single quotes as this variable contains spaces
/usr/bin/spacecmd -d -- softwarechannel_clone -s $src_ch -n "'$target_channel_name'" -l "$target_channel_label" -p "$target_parent" -g
## removed double quotes from $target_channel_label to allow spacecmd to parse correctly
/usr/bin/spacecmd -d -- softwarechannel_setorgaccess $target_channel_label -e
## added full directory structure to archive-sources location to allow call from crontab
done &lt; /usr/sbin/archive-sources.lst               
</screen>
            
        </sect2>
        

        <sect2 xml:id="sec-samplechansources">
            <title>Sample Archive Channel Sources List File</title>

            <para>This file is called and used by the Archive Channel
                Creation script located above in the previous section (see
                    <xref linkend="sec-samplechancreation"/>). Since the
                function “readline” is used, there should only be lines
                with data in the file. Any blank lines will be sourced as
                data and will cause errors with the Archive Channel
                Creation script above. </para>

            <para>The first field is <emphasis role="strong"
                    >architecture</emphasis>, which defines the source
                parent archive channel. This is where the new archive will
                be placed as a child channel. The second field is the
                    <emphasis role="strong">source channel
                label</emphasis>, which is where the patches/packages are
                coming FROM. The last field is used for <emphasis
                    role="strong">target channel naming</emphasis>. This
                field will be part of the text that makes up the channel
                name and part of the channel summary/description
                fields.</para>


<screen>s390x,sles11-sp3-updates-s390x,SLES11-SP3-Updates for s390x
x86_64,sles11-sp4-updates-x86_64,SLES11-SP4-Updates for x86_64
i586,sles11-sp3-updates-x86_64,SLES11-SP3-Updates for x86_64</screen>

        </sect2>

        <sect2 xml:id="sec-spacemdauthent">
            <title>Spacecmd Automatic Authentication</title>

            <para>The archive script example here is written in Bash and
                calls the spacecmd shell. Normal operation of spacecmd and
                the SUSE Manager XMLRPC api requires authentication
                credentials. In order for the archive script to run
                successfully from cron, it would require some way of
                passing appropriate user credentials when required. Luckily
                there is a way to store user credential pairs.</para>

            <para>Upon the first invocation of the spacecmd utility/shell,
                a directory is created in the home directory of the user
                who calls spacecmd. The directory is called .spacecmd (for example
                /root/.spacecmd/). Within this directory is a file called
                <quote>config</quote>, and within this file you can store parameters that
                will be used when the user subsequently calls spacecmd. The
                parameters are as follows (substitute your user name and
                password):</para>

            <screen>[spacecmd]
server=localhost
username=admin
password=susemgr
nossl=0</screen>


            <para>When those credentials are stored, you should be able to
                invoke the spacecmd shell or call spacecmd commands from
                the command line without being prompted for a user name or
                password.</para>
        </sect2>

    </sect1>
    
    
    <?pdfpagebreak style="sbp" formatter="fop"?>
        <xi:include href="sbp-legal-notice.xml"/>

    <?pdfpagebreak style="sbp" formatter="fop"?>
    <xi:include href="license-gfdl.xml"/>

</article>
