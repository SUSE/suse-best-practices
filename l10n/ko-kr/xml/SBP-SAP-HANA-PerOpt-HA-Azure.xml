<?xml version="1.0"?>
<?asciidoc-toc?><?asciidoc-numbered?><article xmlns:xi="http://www.w3.org/2001/XInclude" xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" xml:base="SBP-SAP-HANA-PerOpt-HA-Azure.xml" version="5.0" xml:lang="ko">
<info>
<title>Azure에서 작동하는 SAP HANA 고가용성 클러스터 자동화 시작하기</title>
<date>2020-04-02</date>
<!--<title>Getting Started with SAP HANA High Availability Cluster Automation Operating on Azure</title>-->
<!--<subtitle></subtitle>-->
    <!-- <orgname>SUSE Best Practices</orgname>-->
    <productname>SUSE Linux Enterprise Server for SAP Applications</productname>
    <productnumber>15 SP1 </productnumber>

    <author>
        <personname>
            <firstname>Abdelrahman</firstname>
            <surname>Mohamed, 얼라이언스 솔루션 아키텍트, SUSE</surname>
        </personname>
        <!-- <personname>
            <firstname>Bernd</firstname>
            <surname>Schubert</surname>
            </personname>
            <affiliation>
            <jobtitle>SAP Solution Architect</jobtitle>
            <orgname>SUSE</orgname>
            </affiliation>-->
</author>

          <!--  <author>
        <personname>
            <firstname>Lars</firstname>
            <surname>Pinne, System Engineer, SUSE</surname>
        </personname>
        <!-\- <personname>
            <firstname><Lars</firstname>
            <surname>Pinne</surname>
            </personname>
            <affiliation>
            <jobtitle>System Engineer</jobtitle>
            <orgname>SUSE</orgname>
            </affiliation>-\->
    </author>-->

    <cover role="logos">
        <mediaobject>
		<imageobject>
			<imagedata fileref="suse.svg"/>
		</imageobject>
	</mediaobject>
	</cover>

<date>April 03, 2020</date>


<abstract>

    <para>본 문서에서는 Microsoft* Azure 퍼블릭 클라우드에서 작동하는 자동화된 SAP* HANA SR(System Replication: 시스템 복제) 성능 최적화 HA(High Availability: 고가용성) 클러스터를 구축하는 방법을 설명합니다. 기반이 되는 제품은 SUSE® Linux Enterprise Server for SAP Applications 15 SP1입니다. SUSE Linux Enterprise Server for SAP Applications 최신 서비스 팩에도 이 개념을 적용할 수 있습니다.</para>

</abstract>
</info>
<section xml:id="_about_this_guide">
<title>이 가이드 정보</title>
<section xml:id="_introduction">
<title>소개</title>
<para>SUSE® Linux Enterprise Server for SAP Applications는 고가용성 SAP* 응용 프로그램을 실행하기 위한 최적의 플랫폼입니다. 여기에 중복 레이아웃의 기술 인프라를 사용하면 단일 장애 지점을 제거할 수 있습니다.</para>
<para>SAP* Business Suite는 대기업 및 중견기업을 위한 정교한 응용 프로그램 플랫폼입니다. 핵심 비즈니스 환경에는 최대한의 SAP 응용 프로그램 가용성이 필요한 경우가 많습니다.</para>
</section>
<section xml:id="_additional_documentation_and_resources">
<title>추가 문서 및 리소스</title>
<para>이 모범 사례 가이드의 각 장에는 시스템 또는 인터넷에서 사용할 수 있는 추가 문서 리소스 링크가 있습니다. 최신 문서 업데이트는 <link xl:href="https://documentation.suse.com">SUSE 문서 포털</link>을 참조하십시오.</para>
</section>
<section xml:id="_feedback">
<title>피드백</title>
<para>여러 피드백 채널을 사용할 수 있습니다.</para>
<variablelist>
<varlistentry>
<term>버그 및 기능 향상 요청</term>
<listitem>
<para>제품과 관련하여 사용 가능한 서비스 및 지원 옵션에 대해서는 <link xl:href="http://www.suse.com/support/">http://www.suse.com/support/</link>를 참조하십시오.</para>
</listitem>
</varlistentry>
</variablelist>
<para>제품 구성 요소의 버그를 신고하려면 <link xl:href="https://scc.suse.com/support/">https://scc.suse.com/support/requests</link>로 이동하여 로그인한 후 새 SR(Service Request: 서비스 요청) 제출을 선택하십시오.</para>
<variablelist>
<varlistentry>
<term>메일</term>
<listitem>
<para>본 제품 문서에 대한 피드백이 있는 경우 <link xl:href="mailto:doc-team@suse.com">doc-team@suse.com</link>으로 메일을 보낼 수도 있습니다. 문서의 문서 제목, 제품 버전 및 게시 날짜를 포함해야 합니다. 오류를 보고하거나 개선사항을 제안하려면 문제점에 대한 간략한 설명을 제공하고 해당 섹션 번호 및 페이지(또는 URL)를 참조하십시오.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section xml:id="_document_scope">
<title>문서 범위</title>
<para>이 가이드의 목적은 Microsoft Azure 퍼블릭 클라우드에서 작동하는 자동화된 SAP HANA SR 성능 최적화 HA 클러스터를 구축하는 것입니다.</para>
<para>이 가이드에서는 여러 가지 기능을 갖춘 <link xl:href="https://github.com/SUSE/ha-sap-terraform-deployments">Automated SAP HA Deployments in Public/Private Clouds with Terraform(Terraform을 사용하여 퍼블릭/프라이빗 클라우드에 SAP HA 자동 배포)</link> 프로젝트를 사용합니다. 제공되는 기능 중 하나는 SAP HANA HA 클러스터를 퍼블릭 클라우드에 자동 배포하는 것입니다.</para>
<para>Terraform을 사용하여 퍼블릭/프라이빗 클라우드에 SAP HA 자동 배포 프로젝트에서는 배포 단계에 <emphasis>Terraform</emphasis>을, 프로비저닝 단계에 <emphasis>Saltstack</emphasis>을 사용합니다. 이 프로젝트는 퍼블릭 또는 프라이빗 클라우드 제공업체별 <emphasis>terraform</emphasis> 구성 파일과 <emphasis>Saltstack</emphasis> pillar가 들어 있는 디렉토리로 구성되어 있습니다.</para>
<para>Microsoft Azure 퍼블릭 클라우드에서 SAP HANA Database Scale-Up Performance Optimized High Availability(SAP HANA 데이터베이스 확장 성능 최적화 고가용성) 클러스터를 구축하는 방법에 대한 자세한 정보는 <link xl:href="https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-hana-high-availability">High Availability of SAP HANA on Azure VMs on SUSE Linux Enterprise Server</link> 가이드를 참조하십시오.</para>
<important>
<para>SAP HA 솔루션은 고객의 환경에 따라 고도로 사용자 정의된 소프트웨어 솔루션입니다. 이 가이드에서는 SUSE 고객이 Microsoft Azure 퍼블릭 클라우드 구성 요소를 사용한 SAP HANA HA 솔루션의 기본 구현을 이해할 수 있도록 <emphasis>테스트 환경</emphasis>을 제공합니다. <emphasis role="strong">프로덕션 환경에 앞서 적절한 계획 단계와 배포 단계를 차례로 거쳐야 합니다.</emphasis></para>
<para>추가적인 지원은 <link xl:href="https://www.suse.com/services/consulting">SUSE 컨설팅 서비스</link>에 문의하십시오.</para>
</important>
</section>
<section xml:id="_environment_preparation">
<title>환경 준비</title>
<section xml:id="_azure_command_line_interface_environment_preparation">
<title>Azure 명령 줄 인터페이스 환경 준비</title>
<para>이 가이드에서는 SUSE Linux Enterprise Server 15 SP1(Service Pack 1: 서비스 팩 1)에 설치된 Azure CLI(Command-Line Interface: 명령 줄 인터페이스)를 사용하여 Microsoft Azure 퍼블릭 클라우드와 상호 작용합니다. <link xl:href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-zypper?view=azure-cli-latest">Microsoft 지침</link>에 따라 SUSE 배포용 Azure CLI를 설치하십시오.</para>
<tip>
<para>자세한 내용은 <link xl:href="https://docs.microsoft.com/en-us/cli/azure/?view=azure-cli-latest">Azure 명령 줄 인터페이스 포털</link>을 참조하십시오.</para>
</tip>
<para>Azure CLI를 설치한 후 <literal>az login</literal> 명령을 사용하여 Azure 포털에 로그인합니다. 그러면 현재 Azure 계정 정보가 표시됩니다. 이 가이드의 작성 시점에 사용 중인 Azure 계정의 예는 아래와 같습니다.</para>
<example>
<title>Azure 계정 정보 목록:</title>
<screen>$ az account list
[
  {
    "cloudName": "AzureCloud",
    "homeTenantId": "<emphasis role="strong">&lt;HOME TENANT ID&gt;</emphasis>",
    "id": "<emphasis role="strong">&lt;ACCOUNT ID&gt;",</emphasis>
    "isDefault": true,
    "managedByTenants": [],
    "name": <emphasis role="strong">"&lt;ACCOUNT NAME&gt;",</emphasis>
    "state": "Enabled",
    "tenantId": "<emphasis role="strong">&lt;TENANT ID&gt;</emphasis>",
    "user": {
      "name": "<emphasis role="strong">&lt;USER NAME&gt;</emphasis>",
      "type": "<emphasis role="strong">&lt;USER TYPE&gt;</emphasis>"
    }
  }
]</screen>
</example>
</section>
<section xml:id="_azure_storage_account_preparation">
<title>Azure Storage 계정 준비</title>
<para>SAP HANA 설치 미디어를 호스팅하려면 Azure Storage 계정이 필요합니다.</para>
<para>Azure Storage 계정에 새 <emphasis>파일 공유</emphasis>를 만들고, SAP HANA 설치 미디어를 새로 만든 파일 공유에 업로드한 후 압축을 풉니다.</para>
<important>
<para>SAP HANA 설치 미디어를 Azure Storage 계정의 파일 공유에 풀어야 합니다. 압축된 SAP HANA 설치 미디어를 사용하면 Saltstack 프로비저닝이 작동하지 않습니다.</para>
</important>
<tip>
<para>Azure Storage 계정 작업에 대한 자세한 정보는 <link xl:href="https://docs.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal">Azure Storage 계정 만들기</link> Microsoft 설명서를 참조하십시오.</para>
</tip>
</section>
<section xml:id="_terraform_installation">
<title>Terraform 설치</title>
<para>SUSE Linux Enterprise Server 15 SP1부터는 SUSE Linux Enterprise Public Cloud 모듈에 <literal>terraform</literal>이 추가되었습니다. Public Cloud 모듈을 활성화한 후 <literal>terraform</literal> 패키지를 설치합니다.</para>
<para>다음 예에서는 이 가이드의 작성 시점에 SUSE Linux Enterprise Server 15 SP1에 사용할 수 있는 terraform 버전을 보여줍니다.</para>
<screen>$ sudo zypper in terraform

$ terraform version
Terraform v0.12.19</screen>
<para>아니면 <link xl:href="https://azure.microsoft.com/en-us/features/cloud-shell/">Azure Cloud Shell</link>에 사전 설치된 <literal>terraform</literal> 바이너리를 사용할 수도 있습니다. 다음 예에서는 이 가이드의 작성 시점에 Azure 클라우드 셸에서 사용되는 terraform 버전을 보여줍니다.</para>
<screen>$ terraform version
Terraform v0.12.23</screen>
<tip>
<para>이 가이드는 <literal>terraform</literal> 버전 <literal>v0.12.19</literal>를 사용하여 작성되었습니다. terraform 팀은 계속해서 terraform 버전을 업데이트하고 있으므로 사용자가 이 가이드를 사용하는 시점에는 이미 최신 버전이 출시되었을 수 있습니다.</para>
</tip>
</section>
<section xml:id="_github_repository_cloning">
<title>GitHub 리포지토리 복제</title>
<para>이 가이드에서는 <emphasis>프로젝트 디렉토리 경로</emphasis>를 <literal>/home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments</literal>로 간주하며, 여기서 <literal><emphasis role="strong">&lt;USERNAME&gt;</emphasis></literal>은 프로젝트를 생성할 때 사용한 SUSE Linux Enterprise Server 15 SP1 사용자입니다.</para>
<para><emphasis>Terraform을 사용하여 퍼블릭/프라이빗 클라우드에 SAP HA 자동 배포</emphasis> GitHub 리포지토리를 복제하십시오.</para>
<screen>$ cd /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>

$ git clone https://github.com/SUSE/ha-sap-terraform-deployments.git</screen>
</section>
</section>
<section xml:id="_environment_deployment">
<title>환경 배포</title>
<section xml:id="_saltstack_pillars_adaptation">
<title><emphasis/>Saltstack Pillars 조정</title>
<para>SAP HANA 및 클러스터 SaltStack Pillars 템플릿은 복제된 GitHub 리포지토리의 <literal>pillar_example</literal> 디렉토리에 있습니다.</para>
<para>SAP HANA 및 클러스터 SaltStack Pillars 템플릿을 적절한 Salt 디렉토리에 복사하십시오.</para>
<screen>$ cd /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments

$ cp -av pillar_examples/automatic/hana/*.sls salt/hana_node/files/pillar/</screen>
<para>일부 파라미터 값이 달라지는 것을 제외하고, <literal>/home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/salt/hana_node/files/pillar/hana.sls</literal> SaltStack Pillar의 내용은 이 가이드에 적합합니다.</para>
<para>업데이트되어야 하는 기본 파라미터 값은 다음과 같습니다.</para>
<itemizedlist>
<listitem>
<para>SAP 사용자 관련 비밀번호</para>
</listitem>
<listitem>
<para>SAP HANA 기본 사이트 이름</para>
</listitem>
<listitem>
<para>SPA HANA 보조 사이트 이름</para>
</listitem>
</itemizedlist>
<note>
<para><emphasis role="strong">부록</emphasis> → <emphasis role="strong">SAP HANA SaltStack Pillar 구성</emphasis> 섹션을 참조하여 굵게 강조 표시된 파라미터 값을 적절한 값으로 변경합니다.</para>
</note>
</section>
<section xml:id="_terraform_configuration_adaptation">
<title>Terraform 구성 조정</title>
<para><literal>terraform.tfvars.example</literal> 파일에는 클러스터 인프라를 생성할 때 사용되는 terraform 변수 템플릿이 포함되어 있습니다.</para>
<para>이 가이드에서는 변경된 다음 값을 제외하고 기본 값을 그대로 사용합니다.</para>
<itemizedlist>
<listitem>
<para>Azure VM(Virtual Machine: 가상 머신) 인스턴스 유형</para>
</listitem>
<listitem>
<para>SAP HANA VM 및 iSCSI OS(Operating System: 운영 체제) 구독 모델 세부 정보</para>
</listitem>
<listitem>
<para>SSH 키 경로</para>
</listitem>
<listitem>
<para>Azure Storage 계정 이름</para>
</listitem>
<listitem>
<para>SAP HANA 설치 미디어 경로</para>
</listitem>
<listitem>
<para>HA/SAP 배포 패키지 소프트웨어 리포지토리</para>
</listitem>
</itemizedlist>
<example>
<title>Terraform 변수 파일 조정:</title>
<orderedlist numeration="arabic">
<listitem>
<para>디렉토리를 terraform azure 제공자 디렉토리 경로로 변경하고 <literal>terraform.tfvars.example</literal> 파일의 이름을 <literal>terraform.tfvars</literal>로 변경하십시오.</para>
<screen>$ cd /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/azure

$ mv -v terraform.tfvars.example terraform.tfvars</screen>
</listitem>
<listitem>
<para>terraform 배포 및 SaltStack 프로비저닝에서 사용할 프라이빗 및 퍼블릭 키를 생성하십시오.</para>
<screen>$ mkdir -v /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/salt/hana_node/files/sshkeys

$ ssh-keygen -t rsa -f /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/salt/hana_node/files/sshkeys/cluster.id_rsa</screen>
</listitem>
<listitem>
<para>이 가이드에서 사용하는 OS 관련 값은 다음과 같습니다.</para>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">파라미터</entry>
<entry align="left" valign="top">값</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><para>SAP HANA OS 버전</para></entry>
<entry align="left" valign="top"><para>SUSE Linux Enterprise Server 15 for SAP Applications</para></entry>
</row>
<row>
<entry align="left" valign="top"><para>iSCSI 대상 OS 버전</para></entry>
<entry align="left" valign="top"><para>SUSE Linux Enterprise Server 15 SP1</para></entry>
</row>
<row>
<entry align="left" valign="top"><para>구독 모델</para></entry>
<entry align="left" valign="top"><para>PAYGO(Pay as you GO: 종량제)</para></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<para><literal>/home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/azure/terraform.tfvars</literal> terraform 변수 구성 파일에서 다음 파라미터 값만 변경하십시오.</para>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">파라미터</entry>
<entry align="left" valign="top">기존 값</entry>
<entry align="left" valign="top">새 값</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><para>instancetype</para></entry>
<entry align="left" valign="top"><para>Standard_M128s</para></entry>
<entry align="left" valign="top"><para><emphasis role="strong">&lt;선택한 인스턴스 유형&gt;</emphasis></para></entry>
</row>
<row>
<entry align="left" valign="top"><para>hana_public_sku</para></entry>
<entry align="left" valign="top"><para>12-sp4</para></entry>
<entry align="left" valign="top"><para>15</para></entry>
</row>
<row>
<entry align="left" valign="top"><para>admin_user</para></entry>
<entry align="left" valign="top"><para>OUR_USERNAME_HERE</para></entry>
<entry align="left" valign="top"><para><emphasis role="strong">&lt;선택한 관리자 ID&gt;</emphasis></para></entry>
</row>
<row>
<entry align="left" valign="top"><para>public_key_location</para></entry>
<entry align="left" valign="top"><para>/path/to/your/public/ssh/key</para></entry>
<entry align="left" valign="top"><para>../salt/hana_node/files/sshkeys/cluster.id_rsa.pub</para></entry>
</row>
<row>
<entry align="left" valign="top"><para>private_key_location</para></entry>
<entry align="left" valign="top"><para>/path/to/your/private/ssh/key</para></entry>
<entry align="left" valign="top"><para>../salt/hana_node/files/sshkeys/cluster.id_rsa</para></entry>
</row>
<row>
<entry align="left" valign="top"><para>storage_account_name</para></entry>
<entry align="left" valign="top"><para>YOUR_STORAGE_​ACCOUNT_NAME</para></entry>
<entry align="left" valign="top"><para><emphasis role="strong">&lt;AZURE STORAGE 계정 ID&gt;</emphasis></para></entry>
</row>
<row>
<entry align="left" valign="top"><para>storage_account_key</para></entry>
<entry align="left" valign="top"><para>YOUR_STORAGE_​ACCOUNT_KEY</para></entry>
<entry align="left" valign="top"><para><emphasis role="strong">&lt;AZURE STORAGE 계정 키 #1&gt;</emphasis></para></entry>
</row>
<row>
<entry align="left" valign="top"><para>hana_inst_master</para></entry>
<entry align="left" valign="top"><para>//YOUR_STORAGE_​ACCOUNT_NAME.file.​core.windows.net/*path/​to/your/hana/​installation/​master</para></entry>
<entry align="left" valign="top"><para><emphasis role="strong">&lt;SAP HANA 설치 미디어 경로&gt;</emphasis></para></entry>
</row>
<row>
<entry align="left" valign="top"><para>ha_sap_deployment_repo</para></entry>
<entry align="left" valign="top"><para>""</para></entry>
<entry align="left" valign="top"><para>"https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/SLE_15/"</para></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</orderedlist>
</example>
<note>
<para><literal>terraform.tfvars</literal> 구성 파일의 모든 샘플을 살펴보려면 <emphasis role="strong">부록</emphasis> → <emphasis role="strong">Terraform 구성</emphasis> → <emphasis role="strong">종량제 구독 모델</emphasis> 섹션을 참조하십시오.</para>
</note>
<important>
<para>이 가이드에서는 완전한 테스트 케이스 시나리오를 제공하기 위해 특정 OS 버전 및 구독 모델을 사용하지만, <emphasis role="strong">Terraform을 사용하여 퍼블릭/프라이빗 클라우드에 SAP HA 자동 배포</emphasis> 프로젝트를 이용하면 다양한 OS 버전, 구독 모델 및 기타 파라미터를 사용할 수 있습니다.</para>
<para><emphasis role="strong">부록</emphasis> → <emphasis role="strong">Terraform 구성</emphasis> → <emphasis role="strong">종량제 구독 모델</emphasis> 섹션에서 굵게 강조 표시된 모든 파라미터는 고객의 환경 및 요구 사항에 따라 조정할 수 있습니다.</para>
</important>
</section>
<section xml:id="_terraform_deployment">
<title>Terraform 배포</title>
<example>
<title><literal>terraform</literal>을 사용하여 Azure 인프라 배포:</title>
<orderedlist numeration="arabic">
<listitem>
<para>terraform Azure 제공자를 초기화하십시오.</para>
<screen>$ cd /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/azure
$ terraform init</screen>
</listitem>
<listitem>
<para>새 terraform 작업 영역을 생성하십시오. 이 작업 영역을 선택하여 terraform 계획 및 적용 단계에서 사용합니다.</para>
<screen>$ terraform workspace new <emphasis role="strong">&lt;TERRAFORM WORKSPACE NAME&gt;</emphasis>
$ terraform workspace select <emphasis role="strong">&lt;TERRAFORM WORKSPACE NAME&gt;</emphasis></screen>
</listitem>
<listitem>
<para>terraform 배포 계획을 수립하십시오.</para>
<screen>$ terraform plan</screen>
</listitem>
<listitem>
<para>terraform 배포를 적용하십시오.</para>
<screen>$ terraform apply</screen>
</listitem>
</orderedlist>
<tip>
<para>Terraform 배포 및 SaltStack 프로비저닝을 수행하는 데는 약 40~50분이 걸릴 수 있습니다.</para>
</tip>
</example>
</section>
</section>
<section xml:id="_environment_post_deployment_validation">
<title>환경 배포 후 유효성 검사</title>
<section xml:id="_deployment_validation">
<title>배포 유효성 검사</title>
<para><literal>terraform apply</literal> 명령 출력은 생성된 클러스터에 대한 정보를 제공합니다.</para>
<example>
<title><literal>terraform apply</literal> 출력 샘플:</title>
<screen>$ terraform apply
<emphasis role="strong">[OUTPUT TRIMMED]</emphasis>

<emphasis role="strong">module.hana_node.null_resource.hana_node_provisioner[1]: Creation complete after 36m4s [id=2647934812513863765]</emphasis>

Apply complete! Resources: 33 added, 0 changed, 0 destroyed.

Outputs:

cluster_nodes_ip = [
  <emphasis role="strong">"10.74.1.11",</emphasis>
  <emphasis role="strong">"10.74.1.12",</emphasis>
]
cluster_nodes_name = [
  <emphasis role="strong">"vmhana01",</emphasis>
  <emphasis role="strong">"vmhana02",</emphasis>
]
cluster_nodes_public_ip = [
  <emphasis role="strong">"13.81.13.169",</emphasis>
  <emphasis role="strong">"13.81.13.149",</emphasis>
]
cluster_nodes_public_name = [
  "",
  "",
]
drbd_ip = []
drbd_name = []
drbd_public_ip = []
drbd_public_name = []
iscsisrv_ip = [
  <emphasis role="strong">"10.74.1.14",</emphasis>
]
iscsisrv_name = [
  <emphasis role="strong">"vmiscsisrv",</emphasis>
]
iscsisrv_public_ip = [
  <emphasis role="strong">"13.81.13.51",</emphasis>
]
iscsisrv_public_name = [
  "",
]
<emphasis role="strong">[OUTPUT TRIMMED]</emphasis></screen>
</example>
</section>
<section xml:id="_cluster_status_validation">
<title>클러스터 상태 유효성 검사</title>
<para>클러스터 노드에 연결하여 클러스터 상태를 확인하십시오.</para>
<example>
<title>클러스터 상태 확인:</title>
<orderedlist numeration="arabic">
<listitem>
<para>생성된 SSH 키를 기본 SSH 디렉토리에 복사하십시오.</para>
<screen>$ cp -v /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/salt/hana_node/files/sshkeys/cluster.id_rsa*  /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/.ssh/</screen>
</listitem>
<listitem>
<para>SSH 키 파일 권한을 다음과 같이 변경하십시오.</para>
<screen>$ chmod -v 400 /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/.ssh/cluster.id_rsa

$ chmod -v 600 /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/.ssh/cluster.id_rsa.pub</screen>
</listitem>
<listitem>
<para>클러스터 노드에 연결하십시오.</para>
<screen>$ ssh -i .ssh/cluster.id_rsa <emphasis role="strong">&lt;ADMIN USER&gt;</emphasis>@<emphasis role="strong">&lt;CLUSTER NODE PUBLIC IP&gt;</emphasis></screen>
</listitem>
<listitem>
<para>클러스터 상태를 확인하십시오.</para>
<screen>$ hostname
<emphasis role="strong">vmhana01</emphasis>

$ sudo su -</screen>
<screen>vmhana01:~ # crm_mon -rnf1
Stack: corosync
Current DC: vmhana01 (version 1.1.18+20180430.b12c320f5-3.18.1-b12c320f5) - partition with quorum
Last updated: Thu Mar  5 16:04:23 2020
Last change: Thu Mar  5 16:04:09 2020 by root via crm_attribute on vmhana01

2 nodes configured
7 resources configured

Node vmhana01: online
        <emphasis role="strong">rsc_SAPHana_PRD_HDB00  (ocf::suse:SAPHana):    Master</emphasis>
        <emphasis role="strong">rsc_ip_PRD_HDB00       (ocf::heartbeat:IPaddr2):       Started</emphasis>
        stonith-sbd     (stonith:external/sbd): Started
        <emphasis role="strong">rsc_SAPHanaTopology_PRD_HDB00  (ocf::suse:SAPHanaTopology):    Started</emphasis>
        <emphasis role="strong">rsc_socat_PRD_HDB00    (ocf::heartbeat:anything):      Started</emphasis>
Node vmhana02: online
        <emphasis role="strong">rsc_SAPHana_PRD_HDB00  (ocf::suse:SAPHana):    Slave</emphasis>
        <emphasis role="strong">rsc_SAPHanaTopology_PRD_HDB00  (ocf::suse:SAPHanaTopology):    Started</emphasis>

No inactive resources


Migration Summary:
* Node vmhana01:
* Node vmhana02:</screen>
</listitem>
</orderedlist>
</example>
</section>
</section>
<section xml:id="_environment_destroy">
<title>환경 제거</title>
<para>Azure 계정에 로그인되어 있는지 확인합니다. 로그인하지 않은 경우, <literal>az login</literal> 명령을 실행하십시오.</para>
<example>
<title>환경 제거:</title>
<orderedlist numeration="arabic">
<listitem>
<para>디렉토리를 terraform azure 제공자 경로로 변경하십시오.</para>
<screen>$ cd /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/azure</screen>
</listitem>
<listitem>
<para>terraform 작업 영역을 나열하십시오.</para>
<screen>$ terraform workspace list
  default
* &lt;WORKSPACE NAME&gt;</screen>
</listitem>
<listitem>
<para>이 프로젝트를 생성할 때 사용한 terraform 작업 영역을 선택하십시오.</para>
<screen>$ terraform workspace select <emphasis role="strong">&lt;WORKSPACE NAME&gt;</emphasis></screen>
</listitem>
<listitem>
<para>이 프로젝트를 생성할 때 사용한 terraform 작업 영역을 제거하십시오.</para>
<screen>$ terraform destroy</screen>
</listitem>
</orderedlist>
</example>
</section>
<section xml:id="_appendix">
<title>부록</title>
<section xml:id="_sap_hana_saltstack_pillar_configuration">
<title>SAP HANA SaltStack Pillar 구성</title>
<screen>$ cat  /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/salt/hana_node/files/pillar/hana.sls
hana:
  {% if grains.get('qa_mode') %}
  install_packages: false
  {% endif %}
  saptune_solution: 'HANA'
  nodes:
    - host: {{ grains['name_prefix'] }}01
      sid: prd
      instance: "00"
      password: <emphasis role="strong">&lt;PASSWORD&gt;</emphasis>
      install:
        software_path: {{ grains['hana_inst_folder'] }}
        root_user: root
        {% if grains['provider'] == 'libvirt' %}
        root_password: linux
        {% else %}
        root_password: ''
        {% endif %}
        system_user_password: <emphasis role="strong">&lt;PASSWORD&gt;</emphasis>
        sapadm_password: <emphasis role="strong">&lt;PASSWORD&gt;</emphasis>
      primary:
        name: <emphasis role="strong">&lt;PRIMARY SITNE NAME&gt;</emphasis>
        backup:
          key_name: backupkey
          database: SYSTEMDB
          file: backup
        userkey:
          key_name: backupkey
          environment: {{ grains['name_prefix'] }}01:30013
          user_name: SYSTEM
          user_password: <emphasis role="strong">&lt;PASSWORD&gt;</emphasis>
          database: SYSTEMDB
    {% if grains.get('monitoring_enabled', False) %}
      exporter:
        exposition_port: 9668
        user: SYSTEM
        password: YourPassword1234
    {% endif %}

    - host: {{ grains['name_prefix'] }}02
      sid: prd
      instance: "00"
      password: <emphasis role="strong">&lt;PASSWORD&gt;</emphasis>
      {% if grains['scenario_type'] == 'cost-optimized' %}
      scenario_type: 'cost-optimized'
      cost_optimized_parameters:
        global_allocation_limit: '32100'
        preload_column_tables: False
      {% endif %}
      install:
        software_path: {{ grains['hana_inst_folder'] }}
        root_user: root
        {% if grains['provider'] == 'libvirt' %}
        root_password: linux
        {% else %}
        root_password: ''
        {% endif %}
        system_user_password: <emphasis role="strong">&lt;PASSWORD&gt;</emphasis>
        sapadm_password: <emphasis role="strong">&lt;PASSWORD&gt;</emphasis>
      secondary:
        name: <emphasis role="strong">&lt;SECONDARY SITE NAME&gt;</emphasis>
        remote_host: {{ grains['name_prefix'] }}01
        remote_instance: "00"
        replication_mode: sync
        operation_mode: logreplay
        primary_timeout: 3000
    {% if grains['scenario_type'] == 'cost-optimized' %}
    - host: {{ grains['name_prefix'] }}02
      sid: qas
      instance: "01"
      password: YourPassword1234
      scenario_type: 'cost-optimized'
      cost_optimized_parameters:
        global_allocation_limit: '28600'
        preload_column_tables: False
      install:
        software_path: {{ grains['hana_inst_folder'] }}
        root_user: root
        {% if grains['provider'] == 'libvirt' %}
        root_password: linux
        {% else %}
        root_password: ''
        {% endif %}
        system_user_password: YourPassword1234
        sapadm_password: YourPassword1234
      {% if grains.get('monitoring_enabled', False) %}
      exporter:
        exposition_port: 9669
        user: SYSTEM
        password: YourPassword1234
      {% endif %}
    {% endif %}</screen>
</section>
<section xml:id="_terraform_configurations">
<title>Terraform 구성</title>
<section xml:id="_pay_as_you_go_paygo_subscription_model">
<title>PAYGO 구독 모델</title>
<screen>$ cat /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/azure/terraform.tfvars
# VM size to use for the cluster nodes
<emphasis role="strong">hana_vm_size = "&lt;CHOSEN INSTANCE TYPE&gt;"</emphasis>

# Disk type for HANA
<emphasis role="strong">hana_data_disk_type = "StandardSSD_LRS"</emphasis>

# Disk size for HANA
<emphasis role="strong">hana_data_disk_size = "60"</emphasis>

# Caching used for HANA disk
hana_data_disk_caching = "ReadWrite"

# Number of nodes in the cluster
hana_count = "2"

# Instance number for the HANA database. 00 by default.
<emphasis role="strong">hana_instance_number = "00"</emphasis>

# Region where to deploy the configuration
<emphasis role="strong">az_region = "westeurope"</emphasis>

# Variable to control what is deployed in the nodes. Can be all, skip-hana or skip-cluster
init_type = "all"

# SLES4SAP image information
# If custom uris are enabled public information will be omitted
# Custom sles4sap image
#sles4sap_uri = "/path/to/your/image"

# Custom iscsi server image
#iscsi_srv_uri = "/path/to/your/iscsi/image"

# Custom monitoring server image
#monitoring_uri = "/path/to/your/monitoring/image"

# Custom drbd nodes image
#drbd_image_uri = "/path/to/your/monitoring/image"

# Public sles4sap image
hana_public_publisher = "SUSE"
hana_public_offer     = <emphasis role="strong">"SLES-SAP"</emphasis>
hana_public_sku       = <emphasis role="strong">"gen2-15"</emphasis>
hana_public_version   = "latest"

# Public iscsi server image
iscsi_public_publisher = "SUSE"
iscsi_public_offer     = <emphasis role="strong">"sles-15-sp1"</emphasis>
iscsi_public_sku       = <emphasis role="strong">"gen2"</emphasis>
iscsi_public_version   = "latest"

# Public monitoring server image
#monitoring_public_publisher = "SUSE"
#monitoring_public_offer     = "SLES-SAP-BYOS"
#monitoring_public_sku       = "15"
#monitoring_public_version   = "latest"

# Public drbd nodes image
#drbd_public_publisher = "SUSE"
#drbd_public_offer     = "SLES-SAP-BYOS"
#drbd_public_sku       = "15"
#drbd_public_version   = "latest"

# Admin user
<emphasis role="strong">admin_user = "&lt;CHOSEN USER ID&gt;"</emphasis>

# SSH Public key to configure access to the remote instances
<emphasis role="strong">public_key_location = "../salt/hana_node/files/sshkeys/cluster.id_rsa.pub"</emphasis>

# Private SSH Key location
<emphasis role="strong">private_key_location = "../salt/hana_node/files/sshkeys/cluster.id_rsa"</emphasis>

# Azure storage account name
<emphasis role="strong">storage_account_name = "&lt;AZURE STORAGE ACCOUNT NAME&gt;"</emphasis>

# Azure storage account secret key (key1 or key2)
<emphasis role="strong">storage_account_key = "&lt;AZURE STORAGE ACCOUNT KEY1&gt;"</emphasis>

# Azure storage account path where HANA installation master is located
<emphasis role="strong">hana_inst_master = "//&lt;AZURE STORAGE ACCOUNT NAME&gt;.file.core.windows.net/&lt;SAP HANA INSTALLATION MEDIA PATH&gt;"</emphasis>

# Local folder where HANA installation master will be mounted
hana_inst_folder = "/root/hana_inst_media/"

# Device used by node where HANA will be installed
hana_disk_device = "/dev/sdc"

# Device used by the iSCSI server to provide LUNs
iscsidev = "/dev/sdc"

# IP address of the iSCSI server
<emphasis role="strong">iscsi_srv_ip = "10.74.1.14"</emphasis>

# Path to a custom ssh public key to upload to the nodes
# Used for cluster communication for example
cluster_ssh_pub = "salt://hana_node/files/sshkeys/cluster.id_rsa.pub"

# Path to a custom ssh private key to upload to the nodes
# Used for cluster communication for example
cluster_ssh_key = "salt://hana_node/files/sshkeys/cluster.id_rsa"

# Each host IP address (sequential order).
# example : host_ips = ["10.0.1.0", "10.0.1.1"]
<emphasis role="strong">host_ips = ["10.74.1.11", "10.74.1.12"]</emphasis>

# Each drbd cluster host IP address (sequential order).
# example : drbd_host_ips = ["10.0.1.10", "10.0.1.11"]
<emphasis role="strong">drbd_ips = ["10.74.1.21", "10.74.1.22"]</emphasis>

# Repository url used to install HA/SAP deployment packages"
# The latest RPM packages can be found at:
# https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/{YOUR OS VERSION}
# Contains the salt formulas rpm packages.
<emphasis role="strong">ha_sap_deployment_repo = "https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/SLE_15/"</emphasis>

# Optional SUSE Customer Center Registration parameters
#reg_code = "&lt;&lt;REG_CODE&gt;&gt;"
#reg_email = "&lt;&lt;your email&gt;&gt;"

# For any sle12 version the additional module sle-module-adv-systems-management/12/x86_64 is mandatory if reg_code is provided
#reg_additional_modules = {
#    "sle-module-adv-systems-management/12/x86_64" = ""
#    "sle-module-containers/12/x86_64" = ""
#    "sle-ha-geo/12.4/x86_64" = "&lt;&lt;REG_CODE&gt;&gt;"
#}

# Cost optimized scenario
#scenario_type: "cost-optimized"

# To disable the provisioning process
#provisioner = ""

# Run provisioner execution in background
#background = true

# Monitoring variables

# Enable the host to be monitored by exporters
#monitoring_enabled = true

# IP address of the machine where Prometheus and Grafana are running
monitoring_srv_ip = "10.74.1.13"

# Enable drbd cluster
#drbd_enabled = true

# Netweaver variables

#netweaver_enabled = true
#netweaver_ips = ["10.74.1.30", "10.74.1.31", "10.74.1.32", "10.74.1.33"]
#netweaver_virtual_ips = ["10.74.1.35", "10.74.1.36", "10.74.1.37", "10.74.1.38"]
#netweaver_storage_account_key = "YOUR_STORAGE_ACCOUNT_KEY"
#netweaver_storage_account_name = "YOUR_STORAGE_ACCOUNT_NAME"
#netweaver_storage_account = "//YOUR_STORAGE_ACCOUNT_NAME.file.core.windows.net/path/to/your/nw/installation/master"

# QA variables

# Define if the deployment is using for testing purpose
# Disable all extra packages that do not come from the image
# Except salt-minion (for the moment) and salt formulas
# true or false (default)
#qa_mode = false

# Execute HANA Hardware Configuration Check Tool to bench filesystems
# qa_mode must be set to true for executing hwcct
# true or false (default)
#hwcct = false</screen>
</section>
<section xml:id="_bring_your_own_subscription_byos_model">
<title>BYOS(Bring Your Own Subscription: 자체 구독 가져오기) 모델</title>
<screen>$ cat /home/<emphasis role="strong">&lt;USERNAME&gt;</emphasis>/ha-sap-terraform-deployments/azure/terraform.tfvars
# Instance type to use for the cluster nodes
<emphasis role="strong">instancetype = "&lt;CHOSEN INSTANCE TYPE&gt;"</emphasis>

# Disk type for HANA
<emphasis role="strong">hana_data_disk_type = "StandardSSD_LRS"</emphasis>

# Disk size for HANA
<emphasis role="strong">hana_data_disk_size = "60"</emphasis>

# Caching used for HANA disk
hana_data_disk_caching = "ReadWrite"

# Number of nodes in the cluster
ninstances = "2"

# Region where to deploy the configuration
<emphasis role="strong">az_region = "westeurope"</emphasis>

# Variable to control what is deployed in the nodes. Can be all, skip-hana or skip-cluster
init_type = "all"

# SLES4SAP image information
# If custom uris are enabled public information will be omitted
# Custom sles4sap image
#sles4sap_uri = "/path/to/your/image"

# Custom iscsi server image
#iscsi_srv_uri = "/path/to/your/iscsi/image"

# Custom monitoring server image
#monitoring_uri = "/path/to/your/monitoring/image"

# Custom drbd nodes image
#drbd_image_uri = "/path/to/your/monitoring/image"

# Public sles4sap image
hana_public_publisher = "SUSE"
hana_public_offer     = "SLES-SAP-BYOS"
<emphasis role="strong">hana_public_sku       = "15"</emphasis>
hana_public_version   = "latest"

# Public iscsi server image
iscsi_public_publisher = "SUSE"
iscsi_public_offer     = "SLES-SAP-BYOS"
iscsi_public_sku       = "15"
iscsi_public_version   = "latest"

# Public monitoring server image
#monitoring_public_publisher = "SUSE"
#monitoring_public_offer     = "SLES-SAP-BYOS"
#monitoring_public_sku       = "15"
#monitoring_public_version   = "latest"

# Public drbd nodes image
#drbd_public_publisher = "SUSE"
#drbd_public_offer     = "SLES-SAP-BYOS"
#drbd_public_sku       = "15"
#drbd_public_version   = "latest"

# Admin user
<emphasis role="strong">admin_user = "&lt;CHOSEN USER ID&gt;"</emphasis>

# SSH Public key to configure access to the remote instances
<emphasis role="strong">public_key_location = "../salt/hana_node/files/sshkeys/cluster.id_rsa.pub"</emphasis>

# Private SSH Key location
<emphasis role="strong">private_key_location = "../salt/hana_node/files/sshkeys/cluster.id_rsa"</emphasis>

# Azure storage account name
<emphasis role="strong">storage_account_name = "&lt;AZURE STORAGE ACCOUNT NAME&gt;"</emphasis>

# Azure storage account secret key (key1 or key2)
<emphasis role="strong">storage_account_key = "&lt;AZURE STORAGE ACCOUNT KEY1&gt;"</emphasis>

# Azure storage account path where HANA installation master is located
<emphasis role="strong">hana_inst_master = "//&lt;AZURE STORAGE ACCOUNT NAME&gt;.file.core.windows.net/&lt;SAP HANA INSTALLATION MEDIA PATH&gt;"</emphasis>

# Local folder where HANA installation master will be mounted
hana_inst_folder = "/root/hana_inst_media/"

# Device used by node where HANA will be installed
hana_disk_device = "/dev/sdc"

# Device used by the iSCSI server to provide LUNs
iscsidev = "/dev/sdc"

# Path to a custom ssh public key to upload to the nodes
# Used for cluster communication for example
cluster_ssh_pub = "salt://hana_node/files/sshkeys/cluster.id_rsa.pub"

# Path to a custom ssh private key to upload to the nodes
# Used for cluster communication for example
cluster_ssh_key = "salt://hana_node/files/sshkeys/cluster.id_rsa"

# Each host IP address (sequential order).
# example : host_ips = ["10.0.1.0", "10.0.1.1"]
<emphasis role="strong">host_ips = ["10.74.1.11", "10.74.1.12"]</emphasis>

# Each drbd cluster host IP address (sequential order).
# example : drbd_host_ips = ["10.0.1.10", "10.0.1.11"]
<emphasis role="strong">drbd_ips = ["10.74.1.21", "10.74.1.22"]</emphasis>

# Repository url used to install HA/SAP deployment packages"
# The latest RPM packages can be found at:
# https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/{YOUR OS VERSION}
# Contains the salt formulas rpm packages.
<emphasis role="strong">ha_sap_deployment_repo = "https://download.opensuse.org/repositories/network:/ha-clustering:/Factory/SLE_15/"</emphasis>

# Optional SUSE Customer Center Registration parameters
<emphasis role="strong">reg_code = "&lt;SUSE REGISTRATION CODE&gt;"</emphasis>
<emphasis role="strong">reg_email = "&lt;SUSE REGISTRATION EMAIL&gt;"</emphasis>

# For any sle12 version the additional module sle-module-adv-systems-management/12/x86_64 is mandatory if reg_code is provided
#reg_additional_modules = {
#    "sle-module-adv-systems-management/12/x86_64" = ""
#    "sle-module-containers/12/x86_64" = ""
#    "sle-ha-geo/12.4/x86_64" = "&lt;&lt;REG_CODE&gt;&gt;"
#}

# Cost optimized scenario
#scenario_type: "cost-optimized"

# To disable the provisioning process
#provisioner = ""

# Run provisioner execution in background
#background = true

# Monitoring variables

# Enable the host to be monitored by exporters
#monitoring_enabled = true

# IP address of the machine where Prometheus and Grafana are running
monitoring_srv_ip = "10.74.1.13"

# Enable drbd cluster
#drbd_enabled = true

# Netweaver variables

#netweaver_enabled = true
#netweaver_ips = ["10.74.1.30", "10.74.1.31", "10.74.1.32", "10.74.1.33"]
#netweaver_virtual_ips = ["10.74.1.35", "10.74.1.36", "10.74.1.37", "10.74.1.38"]
#netweaver_storage_account_key = "YOUR_STORAGE_ACCOUNT_KEY"
#netweaver_storage_account_name = "YOUR_STORAGE_ACCOUNT_NAME"
#netweaver_storage_account = "//YOUR_STORAGE_ACCOUNT_NAME.file.core.windows.net/path/to/your/nw/installation/master"

# QA variables

# Define if the deployment is using for testing purpose
# Disable all extra packages that do not come from the image
# Except salt-minion (for the moment) and salt formulas
# true or false (default)
#qa_mode = false

# Execute HANA Hardware Configuration Check Tool to bench filesystems
# qa_mode must be set to true for executing hwcct
# true or false (default)
#hwcct = false</screen>
</section>
</section>
<section xml:id="_cluster_configurations">
<title>클러스터 구성</title>
<screen>vmhana01:~ # crm cofigure show
node 1: vmhana01 \
        attributes lpa_prd_lpt=1583424440 hana_prd_vhost=vmhana01 hana_prd_site=NUE hana_prd_op_mode=logreplay hana_prd_srmode=sync hana_prd_remoteHost=vmhana02
node 2: vmhana02 \
        attributes lpa_prd_lpt=30 hana_prd_op_mode=logreplay hana_prd_vhost=vmhana02 hana_prd_remoteHost=vmhana01 hana_prd_site=FRA hana_prd_srmode=sync
# SAP HANA resources
primitive rsc_SAPHanaTopology_PRD_HDB00 ocf:suse:SAPHanaTopology \
        params SID=PRD InstanceNumber=00 \
        op monitor interval=10 timeout=600 \
        op start interval=0 timeout=600 \
        op stop interval=0 timeout=300
primitive rsc_SAPHana_PRD_HDB00 ocf:suse:SAPHana \
        params SID=PRD InstanceNumber=00 PREFER_SITE_TAKEOVER=True AUTOMATED_REGISTER=False DUPLICATE_PRIMARY_TIMEOUT=7200 \
        op start interval=0 timeout=3600 \
        op stop interval=0 timeout=3600 \
        op promote interval=0 timeout=3600 \
        op monitor interval=60 role=Master timeout=700 \
        op monitor interval=61 role=Slave timeout=700
# Create virtual ip. gcp must be changed when gcp-vpc-move-route RA is available
primitive rsc_ip_PRD_HDB00 IPaddr2 \
        params ip=10.74.1.200 cidr_netmask=24 nic=eth0 \
        op start timeout=20 interval=0 \
        op stop timeout=20 interval=0 \
        op monitor interval=10 timeout=20
# Platform dependant (stonith, virtual ip address, cib options, etc) resource
primitive rsc_socat_PRD_HDB00 anything \
        params binfile="/usr/bin/socat" cmdline_options="-U TCP-LISTEN:62500,backlog=10,fork,reuseaddr /dev/null" \
        op monitor timeout=20 interval=10 \
        op_params depth=0
primitive stonith-sbd stonith:external/sbd \
        params pcmk_delay_max=30s
group g_ip_PRD_HDB00 rsc_ip_PRD_HDB00 rsc_socat_PRD_HDB00
ms msl_SAPHana_PRD_HDB00 rsc_SAPHana_PRD_HDB00 \
        meta clone-max=2 clone-node-max=1 interleave=true
clone cln_SAPHanaTopology_PRD_HDB00 rsc_SAPHanaTopology_PRD_HDB00 \
        meta is-managed=true clone-node-max=1 interleave=true
colocation col_saphana_ip_PRD_HDB00 2000: g_ip_PRD_HDB00:Started msl_SAPHana_PRD_HDB00:Master
order ord_SAPHana_PRD_HDB00 Optional: cln_SAPHanaTopology_PRD_HDB00 msl_SAPHana_PRD_HDB00
property cib-bootstrap-options: \
        have-watchdog=true \
        dc-version="1.1.18+20180430.b12c320f5-3.18.1-b12c320f5" \
        cluster-infrastructure=corosync \
        cluster-name=hana_cluster \
        stonith-enabled=true
rsc_defaults rsc-options: \
        resource-stickiness=1000 \
        migration-threshold=5000
op_defaults op-options: \
        timeout=600 \
        record-pending=true</screen>
</section>
<section xml:id="_sap_system_overview">
<title>SAP 시스템 개요</title>
<screen>vmhana01:~ # su - prdadm
prdadm@vmhana01:/usr/sap/PRD/HDB00&gt; HDBSettings.sh systemOverview.py
| Section    | Name            | Status  | Value                                       |
| ---------- | --------------- | ------- | ------------------------------------------- |
| System     | Instance ID     |         | PRD                                         |
| System     | Instance Number |         | 00                                          |
| System     | Distributed     |         | No                                          |
| System     | Version         |         | 2.00.040.00.1553674765 (fa/hana2sp04)       |
| System     | Platform        |         | SUSE Linux Enterprise Server 15             |
| Services   | All Started     | OK      | Yes                                         |
| Services   | Min Start Time  |         | 2020-03-05 13:48:38.000                     |
| Services   | Max Start Time  |         | 2020-03-05 13:50:51.444                     |
| Memory     | Memory          | OK      | Physical 62.86 GB, Swap 0.00 GB, Used 23.51 |
| CPU        | CPU             | OK      | Available 8, Used 0.32                      |
| Disk       | Data            | OK      | Size 60.0 GB, Used 7.1 GB, Free 88 %        |
| Disk       | Log             | OK      | Size 60.0 GB, Used 3.7 GB, Free 93 %        |
| Disk       | Trace           | OK      | Size 60.0 GB, Used 14.3 GB, Free 76 %       |
| Statistics | Alerts          | WARNING | cannot check statistics w/o SQL connection  |</screen>
</section>
<section xml:id="_sap_hana_database_version">
<title>SAP HANA 데이터베이스 버전</title>
<screen>vmhana01:~ # su - prdadm
prdadm@vmhana01:/usr/sap/PRD/HDB00&gt; HDB version
HDB version info:
  version:             2.00.040.00.1553674765
  branch:              fa/hana2sp04
  machine config:      linuxx86_64
  git hash:            c8210ee40a82860643f1874a2bf4ffb67a7b2add
  git merge time:      2019-03-27 09:19:25
  weekstone:           0000.00.0
  cloud edition:       0000.00.00
  compile date:        2019-03-27 09:30:26
  compile host:        ld4551
  compile type:        rel</screen>
</section>
</section>
<section xml:id="_legal_notice">
<title>사용권 고지사항</title>
<para>저작권 © 2006–2020 SUSE LLC 및 제공자. All rights reserved. </para>
<para>GNU 무료 설명서 라이선스, 버전 1.2 또는 (사용자 선택에 따라) 버전 1.3의 조항에 따라 본 문서를 복사, 배포 및/또는 수정하는 권한이 허가됩니다. 그리고 각 항목에는 본 저작권 통지 및 라이선스가 설명된 고정(Invariant) 섹션이 있습니다. 라이선스 버전 1.2의 복사본은 "GNU 무료 설명서 라이선스" 섹션에 포함되어 있습니다.</para>
<para>SUSE, SUSE 로고 및 YaST는 미국과 기타 국가에서 SUSE LLC의 등록 상표입니다. SUSE 상표에 관해서는 <link xl:href="http://www.suse.com/company/legal/">http://www.suse.com/company/legal/</link>을 참조하십시오.</para>
<para>Linux는 Linus Torvalds의 등록 상표입니다. 본 문서에 언급된 기타 모든 이름 또는 상표는 해당 소유주의 상표 또는 등록 상표일 수 있습니다.</para>
<para>본 문서는 "SUSE 모범 사례"라는 문서 시리즈 중 일부입니다. 시리즈의 각 문서는 SUSE 직원 및 제3자가 자발적으로 기여하여 작성되었습니다. 문서의 목적은 특정 작업을 수행하는 방법의 한 가지 예만을 제공하는 것입니다.</para>
<para>또한, SUSE는 문서에서 설명되는 작업이 해당 기능을 수행하는지 또는 의도하지 않은 결과가 제공되지 않는지를 확인할 수 없습니다.</para>
<para>본 문서의 모든 정보는 최대한 주의를 기울여 작성되었습니다. 그러나 이것이 문서의 정확성을 보장하지는 않습니다. 따라서 SUSE LLC, 그 계열사, 저자, 번역자 중 어느 누구도 있을 수 있는 오류나 그에 따른 결과에 책임을 지지 않는다고 명확히 진술할 필요가 있습니다. 아래에 명시된 내용은 문서를 게시할 때 준수해야 할 라이선스에 대한 주의를 환기하기 위한 것입니다.</para>
</section>
<?pdfpagebreak style="suse2013-sbp" formatter="fop"?>
<xi:include href="license-gfdl.xml"/>

</article>
