<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
]>

<article role="sbp" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art-sbp-csp-update-infra"
	xml:lang="en">

	<info>
		<title>Oracle Database 19c on SUSE Linux Enterprise Server 15 SP2</title>
		<subtitle>Installation Guide</subtitle>
		<!--  <orgname>SUSE Best Practices</orgname>-->
		<productname>SUSE Linux Enterprise Server 15
			SP2, Oracle Database 19c (19.8.0.0)</productname>
		<!-- <productnumber></productnumber>-->
		<dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
			<dm:bugtracker>
				<dm:url>https://github.com/SUSE/suse-best-practices/issues/new</dm:url>
				<dm:product>Oracle Database 19c on SUSE Linux Enterprise Server 15 SP2</dm:product>
			</dm:bugtracker>
			<dm:editurl>https://github.com/SUSE/suse-best-practices/edit/main/xml/</dm:editurl>
		</dm:docmanager>
		
		
			<meta name="series">SUSE Best Practices</meta> 
			<meta name="category">Databases</meta> 
			
			<meta name="platform">SUSE Linux Enterprise Server 15 SP2</meta>    
		<meta name="platform">Oracle Database 19c (19.8.0.0)</meta>        
			
			<authorgroup>
			<author>
			<personname>
			<firstname>Arun</firstname>
			<surname>Singh</surname>
			</personname>
			<affiliation>
				<jobtitle>CSP Cloud Architect</jobtitle>
			<orgname>SUSE</orgname>
			</affiliation>
			</author>
			<!--<author>
			<personname>
			<firstname></firstname>
			<surname></surname>
			</personname>
			<affiliation>
			<jobtitle></jobtitle>
			<orgname></orgname>
			</affiliation>
			</author>
			<editor>
			<orgname></orgname>
			</editor>
			<othercredit>
			<orgname></orgname>
			</othercredit>-->
			</authorgroup>
		
		<cover role="logos">
			<mediaobject>
				<imageobject>
					<imagedata fileref="suse.svg" width="4em"/>
				</imageobject>
			</mediaobject>
		<!--	<mediaobject>
				<imageobject>
					<imagedata fileref="microsoft.svg" width="6em"/>
				</imageobject>
			</mediaobject>-->
		</cover>	

		<date>December 21, 2020</date>

		<abstract>
			<para>The document at hand is by no means a replacement for the official Oracle
				installation documentation. The goal of the document is to help you deal with minor
				difference you might encounter while installing Oracle Database 19c on SUSE Linux
				Enterprise Server 15 SP2.</para>
			
			<para>
				<emphasis role="strong">Disclaimer: </emphasis>
				Documents published as part of the SUSE Best Practices series have been contributed voluntarily
				by SUSE employees and third parties. They are meant to serve as examples of how particular
				actions can be performed. They have been compiled with utmost attention to detail. However,
				this does not guarantee complete accuracy. SUSE cannot verify that actions described in these
				documents do what is claimed or whether actions described have unintended consequences.
				SUSE LLC, its affiliates, the authors, and the translators may not be held liable for possible errors
				or the consequences thereof.
			</para>
			
		</abstract>

	</info>

	<sect1 xml:id="sec-intro">
		<title>Introduction</title>

		<para>This document should by no means serve as a replacement for the official Oracle
			installation documentation at <link
				xlink:href="https://docs.oracle.com/en/database/oracle/oracle-database/">Oracle
				Database Documentation</link>. The purpose of the document is to help you understand
			minor difference you might encounter while installing Oracle Database 19c on SUSE Linux
			Enterprise Server 15 SP2. It covers the x86_64 hardware architecture. But the
			installation steps are same for other platforms, too. For the scope of this document,
			the latest version Oracle Database Enterprise Edition 19c is used.</para>

	</sect1>

	<sect1 xml:id="sec-sw">
		<title>Software</title>

		<sect2 xml:id="sec-oracle-db-sw">
			<title>Oracle Database Software</title>

			<para>Oracle Database Enterprise Edition 19c is available for public download at<link
					xlink:href="https://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html"
					>Oracle Database Software Downloads</link></para>

		</sect2>

		<sect2 xml:id="sec-linux-sw">
			<title>SUSE Linux Enterprise Software</title>

			<para>Download SUSE Linux Enterprise Server 15 SP2 from the <link
					xlink:href="https://www.suse.com/products/server/download/">SUSE Linux
					Enterprise Server Download Page</link>. To get started, you can use 60 dayâ€™s free
					trial.</para>
		</sect2>
		
		
	</sect1>

	<sect1 xml:id="sec-overview">
		<title>High Level Overview</title>

		<figure>
			<title>Update Infrastructure Overview</title>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="csp-infra-img1-high-level-overview.png" width="90%"
						format="PNG"/>
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="csp-infra-img1-high-level-overview.png" width="80%"
						format="PNG"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>The update infrastructure consists of two major components:</para>

		<itemizedlist>
			<listitem>
				<para>Region Servers</para>
			</listitem>
			<listitem>
				<para>Repository Mirroring Tool (RMT) Servers</para>
			</listitem>
		</itemizedlist>

		<para>Both components run as virtual machines (VMs). All services run on SUSE Linux
			Enterprise Server 15 SP1 or higher. These systems may be registered directly to SCC or
			may be managed using SUSE Manager. Optionally, if using Region Servers, the systems must
			also have the Public Cloud Module repository configured.</para>

	</sect1>

	<sect1 xml:id="sec-detailed-setup-guide">
		<title>Detailed Setup Guide</title>

		<para>Although the Region Server is the first service used by a client, its setup and
			configuration is dependent on the setup of the RMT servers. Therefore, the setup guide
			will describe the setup in reverse order as compared to the previous section.</para>


		<sect2 xml:id="sec-prerequisite">
			<title>Prerequisite</title>

			<itemizedlist>
				<listitem>
					<para>Retrieve the SCC mirroring credentials</para>
				</listitem>
				<listitem>
					<orderedlist>
						<listitem>
							<para> Visit the SUSE Customer Center at <link
									xlink:href="http://scc.suse.com">http://scc.suse.com</link> and
								log in. </para>
						</listitem>
						<listitem>
							<para> If you are member of multiple organizations, choose the
								organization you want to work with from the sidebar on the left.
							</para>
						</listitem>
						<listitem>
							<para> Select Proxies in the top menu. </para>

							<figure>
								<title>SUSE Customer Center Organizations</title>
								<mediaobject>
									<imageobject role="fo">
										<imagedata fileref="csp-infra-img2-scc.png" width="70%"
											format="PNG"/>
									</imageobject>
									<imageobject role="html">
										<imagedata fileref="csp-infra-img2-scc.png" width="80%"
											format="PNG"/>
									</imageobject>
								</mediaobject>
							</figure>

						</listitem>
						<listitem>
							<para> The credentials are displayed in the top right corner. </para>

							<figure>
								<title>SUSE Customer Center Mirroring Credentials</title>
								<mediaobject>
									<imageobject role="fo">
										<imagedata
											fileref="csp-infra-img3-mirroring-credentials.png"
											width="70%" format="PNG"/>
									</imageobject>
									<imageobject role="html">
										<imagedata
											fileref="csp-infra-img3-mirroring-credentials.png"
											width="80%" format="PNG"/>
									</imageobject>
								</mediaobject>
							</figure>

						</listitem>
						<listitem>
							<para> To see the password, select the <emphasis role="strong"
									>eye</emphasis> symbol. </para>
						</listitem>
					</orderedlist>
				</listitem>
			</itemizedlist>
		</sect2>

		<sect2 xml:id="sec-general-setup">
			<title>General Setup</title>

			<para>Before any of the servers are set up and configured, some general preparations
				should be completed. Access restriction to the servers is a multi-level process as
				described in more detail later. This is usually achieved with firewalls. </para>

			<para> For each region there should be at least two RMT servers. Additionally, there
				should be at least two Region Servers. Depending on the footprint of the cloud
				environment, more Region Servers, with instances running in different regions, may
				be desired. </para>


		</sect2>



		<sect2 xml:id="sec-rmt-server-setup">
			<title>RMT Server Setup</title>

			<para> It is recommended to have two RMT servers per physical location (region)
				available. The number of RMT servers depends on the bandwidth within the data center
				and the number of expected simultaneous users. As a reference, SUSE operates two RMT
				servers per region on Amazon Web Services (AWS) and can easily satisfy the
				throughput needs for registered clients. </para>

			<para> Thus, it is unlikely that more than two RMT servers are needed in your setup. The
				setup of an RMT server inside a virtual machine is no different from the setup of an
				RMT Server on a physical machine. A standard RMT server installation is described in
				the next chapter. For detailed information on the RMT server, refer to the <link
					xlink:href="https://documentation.suse.com/sles/15-SP1/html/SLES-all/book-rmt.html"
					>Repository Mirroring Tool Guide</link>. A step-by-step instruction for a
				standard installation is provided in that document. </para>

			<sect3 xml:id="sec-default-rmt-server-installation">
				<title>Default RMT Server Installation</title>

				<sect4 xml:id="sec-system-installation">
					<title>During System Installation</title>

					<para>During the system installation, make sure you select the
							<package>rmt-server</package> package.</para>

					<procedure>
						<step>
							<para>When getting to the <emphasis role="strong">Installation
									Summary</emphasis> step of the installation, select <emphasis
									role="strong">Software</emphasis>.</para>

							<figure>
								<title>Installation Summary</title>
								<mediaobject>
									<imageobject role="fo">
										<imagedata fileref="csp-infra-img4-installation-summary.png"
											width="70%" format="PNG"/>
									</imageobject>
									<imageobject role="html">
										<imagedata fileref="csp-infra-img4-installation-summary.png"
											width="80%" format="PNG"/>
									</imageobject>
								</mediaobject>
							</figure>
						</step>

						<step>
							<para>On the software selection page click <emphasis role="strong"
									>Details</emphasis>. Go to the <emphasis role="strong">Search
									Tab</emphasis>. Type <emphasis role="italic">rmt</emphasis> and
								select <emphasis role="strong">rmt-server</emphasis>. The
								dependencies are automatically selected.</para>
							<figure>
								<title>Software Selection</title>
								<mediaobject>
									<imageobject role="fo">
										<imagedata
											fileref="csp-infra-img5-rmt-software-selection.png"
											width="70%" format="PNG"/>
									</imageobject>
									<imageobject role="html">
										<imagedata
											fileref="csp-infra-img5-rmt-software-selection.png"
											width="80%" format="PNG"/>
									</imageobject>
								</mediaobject>
							</figure>
						</step>

						<step>
							<para> Click <emphasis role="strong">Accept</emphasis>. Click <emphasis
									role="strong">Continue</emphasis> to accept the automatic
								dependencies added.</para>
						</step>
						<step>
							<para>Continue with the installation.</para>
						</step>
					</procedure>
				</sect4>

				<sect4 xml:id="sec-install-rmt-existing-system">
					<title>Install an RMT Server on an Existing System</title>

					<para>To install RMT on a running SUSE Linux Enterprise Server installation, use
							<package>zypper</package>. Type the following command:</para>
					<screen>sudo zypper in rmt-server</screen>
					<para>RMT is now installed.</para>
				</sect4>
			</sect3>
		</sect2>

		<sect2 xml:id="sec-rmt-config">
			<title>RMT Configuration</title>

			<sect3 xml:id="sec-initial-config">

				<title>Initial Configuration</title>
				<para/>
				<procedure>
					<step>
						<para>Start YaST with the <package>rmt</package> module</para>
						<screen>sudo yast2 rmt</screen>
					</step>
					<step>
						<para>Enter your organizations credentials from SCC.</para>
					</step>
					<step>
						<para>Enter the credentials for a new MariaDB user and database name. This
							user will then be created. Then select <emphasis role="strong"
								>Next</emphasis>. If a password for the MariaDB root user is already
							set, you are required to enter it. If no password is set for root, you
							are asked to enter a new one.</para>
					</step>
					<step>
						<para>Enter a common name for the SSL certificates. The common name should
							usually be the fully qualified domain name (FQDN) of the server. Enter
							all domain names and IP addresses with which you want to reach the RMT
							server as alternative common names. When all common names are entered,
							select <emphasis role="strong">Next</emphasis>.</para>
					</step>
					<step>
						<para>To view the summary, click <emphasis role="strong">Next</emphasis>.
							Close YaST by clicking <emphasis role="strong">Finish</emphasis>. YaST
							then enables and starts all <package>systemd</package> services and
							timers.</para>
					</step>
				</procedure>
			</sect3>

		


			<sect3 xml:id="sec-configure-data-disks">
				<title>Configuring Data Disks to Hold Repositories and DB</title>

				<para>After the installation of the RMT server package, the directory structure
					required by RMT is set up in <filename>/var/lib/rmt/public/repo</filename>.
					Ideally, use an extra disk to hold the repositories. The following process
					outlines the steps necessary to set up the external device to hold the
					repositories.</para>

				<para>For the RMT repository disk follow the steps outlined below:</para>

				<procedure>
					<step>
						<para>Add the disk to the SUSE Linux Enterprise Server instance that holds
							the RMT server.</para>
					</step>
					<step>
						<para> Use <command>sudo fdisk -l</command> to list the available block
							devices. </para>
					</step>
					<step>
						<para>Create a partition table (using YaST, <package>gparted</package>, or
								<package>fdisk</package>) and create one partition on the
							device.</para>
					</step>
					<step>
						<para>Optional but recommended: Create a volume group, to easily add more
							storage for repository growth. </para>
					</step>
					<step>
						<para> Create a file system on the newly created partition. XFS is the
							recommended file system for this storage device. </para>
					</step>
					<step>
						<para> Copy the content of the RMT directory to a <quote>safe</quote> place: </para>
						<screen>sudo mkdir /tmp/RMTData; rsync -av /var/lib/rmt/public/repo /tmp/RMTData</screen>
					</step>
					<step>
						<para>Mount the storage partition:</para>
						<screen>sudo mount /dev/sd? /var/lib/rmt/public/repo</screen>
					</step>
					<step>
						<para>Make sure to have the <package>rmt</package> user and the
								<package>nginx</package> group owners of the newly mounted
							directory:</para>
						<screen>
						sudo chown _rmt /var/lib/rmt/public/repo -R
						sudo chgrp nginx /var/lib/rmt/public/repo -R
						</screen>
					</step>
					<step>
						<para>Restore the content of the backed-up repository directory:</para>
						<screen>rsync -av /tmp/RMTData/ /var/lib/rmt/public/repo; rm -rf /tmp/RMTData</screen>
					</step>
					<step>
						<para>Make sure the disks are mounted on start-up by having the entries in
								<filename>/etc/fstab</filename>. </para>
					</step>
				</procedure>

				<para>The procedure for placing the DB data onto a separate device is the
					same:</para>

				<procedure>
					<step>
						<para>Attach a disk of at least 40 GB to the RMT server.</para>
					</step>
					<step>
						<para> Use <command>sudo fdisk -l</command> to list the available block
							devices. </para>
					</step>
					<step>
						<para>Create a partition table (using YaST, <package>gparted</package>, or
								<package>fdisk</package>) and create one partition on the
							device.</para>
					</step>
					<step>
						<para> Create a file system on the newly created partition. XFS is the
							recommended file system for this storage device. </para>
					</step>
					<step>
						<para> Copy the content of the DB directory to a <quote>safe</quote> place: </para>
						<screen>mkdir /tmp/dbData; rsync -av /var/lib/mysql/ /tmp/dbData</screen>
					</step>
					<step>
						<para>Mount the storage partition:</para>
						<screen>mount /dev/sd? /var/lib/mysql</screen>
					</step>
					<step>
						<para>Restore the content of the repository directory:</para>
						<screen>rsync -av /tmp/dbData/ /var/lib/mysql; rm -rf /tmp/dbData</screen>
					</step>
					<step>
						<para>Change ownership and group membership to the default:</para>
						<screen>chgrp root mysql -R
chown mysql mysql -R</screen>
					</step>
					<step>
						<para>Make sure the disks are mounted on start-up by having the entries in
								<filename>/etc/fstab</filename>. </para>
					</step>
				</procedure>
			</sect3>
		</sect2>
	</sect1>


	<sect1 xml:id="sec-migrate-smt-rmt">
		<title>Migrating from Subscription Management Tool to Repository Mirroring Tool</title>

		<sect2 xml:id="sec-export-smt-data">
			<title>Export the Subscription Management Tool (SMT) Data</title>
			<procedure>
				<step>
					<para>Update your SMT server installation by running the following
						command:</para>
					<screen>sudo zypper up</screen>
				</step>
				<step>
					<para>If you want to export your SSL certificates along with the rest of the
						data, run the following command:</para>
					<screen>sudo smt data-export </screen>
					<para>Remember to keep your certificates in a <quote>safe</quote> place.</para>
					<para>If you do not want to export the SSL certificates from SMT, run the
						command:</para>
					<screen>sudo smt-data-export â€“no-ssl-export</screen>
				</step>
				<step>
					<para>The exported configuration is now saved to
							<filename>smt-export.XXXXXX.tar.gz</filename>. Copy the file to a
						location which can be accessed by the new RMT server.</para>
				</step>
			</procedure>
		</sect2>

		<sect2 xml:id="sec-importing-data-smt-rmt">
			<title>Importing SMT data to RMT</title>
			<procedure>
				<step>
					<para> Update your RMT server installation by running the following command: </para>
					<screen>sudo zypper up</screen>
				</step>
				<step>
					<para>Copy the exported <filename>.tar.gz</filename> file to an empty directory.
						Then unpack it:</para>
					<screen>
sudo mkdir  EMPTY_DIR
sudo cd EMTPY_DIR
sudo cp /PATH/TO/smt-export.XXXXXX.tar.gz ./
sudo tar xf smt-export.XXXXXX.tar.gz
					</screen>
				</step>
				<step>
					<para>If you chose to export the SSL certificates from SMT, copy the CA private
						key and certificate to <filename>/etc/rmt/ssl/</filename>:</para>
					<screen>
sudo cp ssl/cacert.key /etc/rmt/ssl/rmt-ca.key
sudo cp ssl/cacert.pem /etc/rmt/ssl/rmt-ca.crt
					</screen>
				</step>
				<step>
					<para>Run the YaST RMT configuration module. If you imported the SMT CA
						certificate, add the domain of the SMT server to the common names of the new
						SSL certificate. </para>
				</step>
				<step>
					<para>Run the RMT synchronization to get the products and repositories data from
						SUSE Customer Center:</para>
					<screen>sudo rmt-cli sync</screen>
				</step>
				<step>
					<para>Import the data from the SMT server:</para>
					<screen>sudo rmt-data-import -d ./</screen>
				</step>
				<step>
					<para> Optional: Move the mirrored repository data from to RMT and adjust the
						ownership of the copied data: </para>
					<screen>
sudo cp -r /var/www/htdocs/repo/* /var/lib/rmt/public/repo
sudo chown -R _rmt:nginx /var/lib/rmt/public/repo
					</screen>
				</step>
				<step>
					<para>Update the packages in the repositories by starting the mirroring
						process:</para>
					<screen>sudo rmt-cli mirror</screen>
				</step>
			</procedure>
		</sect2>

		<sect2 xml:id="sec-moving-data-smt-rmt">
			<title>Optional: Moving Mirrored Data From the SMT to the RMT Server </title>

			<procedure>
				<step>
					<para>Option 1: If a separate disk has been used for the mirrored data on the
						SMT server, perform the following actions:</para>
					<substeps>
						<step>
							<para>Unmount the disk from the SMT server with:</para>
							<screen>sudo umount /dev/sdX</screen>
						</step>
						<step>
							<para>Mount it to the new RMT server (this can be the same in case of an
								in-place upgrade):</para>
							<screen>mount  /dev/sdX/ /var/lib/rmt/public/repo</screen>
						</step>
					</substeps>
				</step>
				<step>
					<para>Option 2: In case of an in-place upgrade, and when no separate disk has
						been used, perform the following action:</para>
					<substeps>
						<step>
							<para>Copy the mirrored data from the location SMT uses to the location
								RMT uses:</para>
						</step>
						<step>
							<screen>sudo cp -r /var/www/htdocs/repo/* /var/lib/rmt/public/repo</screen>
						</step>
					</substeps>
				</step>
				<step>
					<para>Finally, set the permissions on the repository directory so the RMT server
						can access it:</para>
					<screen>sudo chown -R _rmt:nginx /var/lib/rmt/public/repo</screen>
				</step>
			</procedure>
		</sect2>
	</sect1>



	<sect1 xml:id="sec-region-server-config-test">
		<title>Region Server Configuration and Testing</title>


		<sect2 xml:id="sec-region-server-setup">
			<title>Region Server Setup</title>

			<procedure>
				<step>
					<para>Use <command>SUSEConnect --list-extension</command> to determine the
						command to enable the Public Cloud module.</para>
				</step>
				<step>
					<para>Install the <package>cloud-regionsrv</package> package.</para>
					<screen>zypper in cloud-regsionsrv</screen>
					<para/>
					<para>The service itself uses two configuration files: </para>
					<itemizedlist>
						<listitem>
							<para><filename>/etc/regionService/regionInfo.cfg</filename> is used to
								configure the service and contains the location of the log file and
								the location of the <filename>regionData.cfg</filename></para>
						</listitem>
						<listitem>
							<para><filename>/etc/regionService/regionData.cfg</filename> contains
								the data the Region Server will provide to the connecting
								client</para>
						</listitem>
					</itemizedlist>
					<para>Both files are available in the <emphasis role="strong">ini</emphasis>
						format.</para>
				</step>
				<step>
					<para>Make a copy of
						<filename>/etc/regionService/regionData.cfg</filename>.</para>
					<screen>cp /etc/regionService/regionData.cfg /etc/regionService/regionData.cfg.orig</screen>
				</step>
				<step>
					<para>Add region information in
							<filename>/etc/regionService/regionData.cfg</filename>.</para>

					<para>The default <filename>regionData.cfg</filename> file provides a template
						for the configuration file. This file can be maintained manually or be
						auto-generated, depending on your setup for IP address allocation within
						your cloud framework.</para>

					<para>The <filename>regionData.cfg</filename> file needs to contain one
						configuration section per region. The hint is processed with string
						matching. Thus having section names match the configured region names is
						important. The server implementation has no option of name mapping. For each
						region all options in the section must be configured.</para>

					<para>The section options are as follows:</para>

					<variablelist>
						<varlistentry>
							<term>public-ips</term>
							<listitem>
								<para>The value for this option is a comma-separated list of IP
									ranges in CIDR format, for example: </para>
								<screen>public-ips = 62.135.16.0/18,56.56.130.0/16</screen>
								<para>These are the ranges the DHCP server in the given region is
									configured to use.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term> smt-server-ip </term>
							<listitem>
								<para> The value for this option is a comma-separated list of the
									RMT Server IP addresses in the region being configured. </para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term> smt-server-name </term>
							<listitem>
								<para> The value for this option sets the host name of the RMT
									Server that was encoded into the certificate during the setup of
									the RMT Server. If only one value is supplied, it will be used
									for all IP addresses provided by the
										<option>smt-server-ip</option> setting. If more than one
									value is supplied, the number of names must match the number of
									IP addresses given with the <option>smt-server-ip</option>
									option. The order of the names and IP addresses must match as
									well. </para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term> smt-fingerprint </term>
							<listitem>
								<para> The value for this option is the fingerprint of the root CA
									created during the RMT Server setup. On the RMT Server, the
										<filename>/srv/www/htdocs</filename> includes the
										<filename>rmt.crt</filename> file. This is the root CA
									transferred to the client and verified prior to accepting the
									repositories from the RMT Server. Obtain the fingerprint with
									the command: </para>
								<screen>openssl x509 -in rmt.crt -noout -fingerprint | /usr/bin/cut -d= -f2</screen>

								<para>Use this fingerprint for the <option>smt-fingerprint</option>
									value. As with the <option>smt-server-name</option>, supplying
									one value is sufficient if all RMT Servers have the same root
									CA. If each server has its own CA, supply a comma-separated
									list. The order must match the order of the IP addresses, or
									certificate acceptance will fail and the guest cannot register
									with the RMT Server.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para>
						<emphasis role="strong">Example: Completed Section for a Region in a
							Cloud</emphasis>
					</para>

					<para>The following shows an example of a completed section for a region in a
						cloud setup.</para>

					<screen>[nor-north]
			public-ips = 62.135.16.0/18,56.56.130.0/16
			smt-server-ip = 62.153.16.20,56.56.130.253
			smt-server-name = rmt-nor.supertuxcloud.com
			smt-fingerprint = 9D:B9:88:DB:87:52:00:55:F0:FF:5D:5C:66:60:D3:E0:5C:D4:FB:79</screen>

					<para>In the example above, both RMT Servers share the same certificate. If this
						were not the case, another value for the <option>smt-server-name</option>
						and for the <option>smt-fingerprint</option> options would need to be
						configured.</para>

					<screen>[mid-north]
			public-ips = 62.135.16.0/18,56.56.130.0/16
			smt-server-ip = 62.153.16.20,56.56.130.253
			smt-server-name = rmt-mid-a.supertuxcloud.com, rmt-mid-b.supertuxcloud.com
			smt-fingerprint = 9D:B9:88:DB:87:52:00:55:F0:FF:5D:5C:66:60:D3:E0:5C:D4:FB:79</screen>

					<para>In this example, the servers share the same certificate, but have
						different names. The certificate in this case would contain a wild
						card.</para>
				</step>
				<step>
					<para>Generate a region server certificate.</para>

					<para>It is recommended to use name resolution via DNS for new clients that will
						connect to a region server. One potential advantage of using DNS for the
						Region Server is that no new client update needs to be released if a Region
						Server needs to move out of a given region and into a new region where a new
						IP address would need to be allocated. However, this implies that an entire
						cloud region would be shut down, which is a very unlikely scenario. The
						Region Server package (<systemitem>cloud-regionsrv</systemitem>) provides a
						convenient executable to generate the server certificate.</para>

					<screen>genRegionServerCert -c COUNTRY -d DEPARTMENT --host IP_ADDRESS_OR_HOSTNAME -l LOCATION -o ORGANIZATION -s STATE</screen>

					<para>This will generate the server certificate in
							<filename>/etc/apache2/ssl.crt</filename> and the public certificate in
							<filename>/root/regionServCert/</filename>. The certificate generation
						script will restart the Apache Web server.</para>
				</step>
				<step>
					<para>Modify
						<filename>/etc/apache2/vhosts.d/regionsrv_vhost.conf</filename>.</para>

					<para>Change <option>SUBSTITUTE_WITH_CLOUD_SPECIFC_NAME</option> in the
							<option>ServerName</option> option so that it matches the
						fully-qualified hostname used in in the
							<command>genRegionServerCert</command>.</para>

					<para>Change the following section so that it matches what is below.</para>
					<screen>
						&lt;Directory /srv/www/regionService&gt;
							WSGIProcessGroup regionInfo
							WSGIApplicationGroup %{GLOBAL}
							&lt;RequireAll&gt;
									Require all granted
							&lt;/RequireAll&gt;
						&lt;/Directory&gt;
					</screen>
				</step>
				<step>
					<para>Enable and restart the Region Server service.</para>
					<screen>
						systemctl enable apache2.service
						systemctl restart apache2.service
					</screen>
					<para>The Region Server reads the <filename>regionData.cfg</filename> file as
						configured in the <filename>regionInfo.cfg</filename> file at start-up. It
						creates a hash table from the information provided in the
							<filename>regionData.cfg</filename> file. Depending on the number of IP
						address ranges, this may result in a relatively large requirement of memory.
						For estimation purposes, one can use a requirement of 20 MB per octet (254
						IP addresses). The Region Server also creates a secondary hash table that
						relates the region names to the RMT server information. The secondary hash
						table is consulted if the Region Server receives a region hint from the
						client.</para>
				</step>
			</procedure>
			<para>With the configuration in place the Region Server setup is complete.</para>
		</sect2>
	

	</sect1>
	
	<sect1 xml:id="sec-references">
		<title>References</title>

		<para>For more detailed information and references, have a look at the following
			resources:</para>

		<itemizedlist>
			<listitem>
				<para>
					<link
						xlink:href="https://documentation.suse.com/sles/15-SP2/single-html/SLES-rmt/index.html"
						>Repository Mirroring Tool Guide</link>
				</para>
			</listitem>
			<!-- <listitem>
        		<para>
        			<link
        				xlink:href="https://github.com/SUSE/rmt/tree/master/engines/instance_verification">InstanceVerification</link>
        		</para>
        	</listitem> -->
			<listitem>
				<para> Registration Sharing -
						<filename>/usr/share/rmt/engines/registration_sharing/README.md</filename>
				</para>
			</listitem>
			<listitem>
				<para> Region Server -
						<filename>/usr/share/doc/packages/cloud-regionsrv/README.md</filename>
				</para>
			</listitem>
		</itemizedlist>

	</sect1>

	
	<?pdfpagebreak style="sbp" formatter="fop"?>
	<xi:include href="sbp-legal-notice.xml"/>


	<?pdfpagebreak style="sbp" formatter="fop"?>
	<xi:include href="license-gfdl.xml"/>

</article>
