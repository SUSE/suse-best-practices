<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
]>

<article role="sbp" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art-sbp-suse-sec-report-23"
 xml:lang="en">

 <info>
  <title>SUSE Solution Security Risk Report 2023</title>
  <productname>All SUSE Products</productname>
  <!--<productnumber></productnumber>-->
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://github.com/SUSE/suse-best-practices/issues/new</dm:url>
    <dm:product>SUSE Solution Security Risk Report 2022</dm:product>
   </dm:bugtracker>
   <dm:editurl>https://github.com/SUSE/suse-best-practices/edit/main/xml/</dm:editurl>
  </dm:docmanager>


  <meta name="series">SUSE Best Practices</meta>
  <!--  <meta name="series">Best Practices</meta>-->
  <meta name="category">
   <phrase>Security</phrase>
  </meta>
  <meta name="task">
   <phrase>Vulnerability</phrase> 
   <phrase>Auditing</phrase>
  </meta>
  <meta name="title">SUSE Solution Security Risk Report 2023</meta>
  <meta name="description">Summary of all security vulnerabilities which affected SUSE products 
  in calendar year 2023</meta>
  <meta name="social-descr">SUSE Security Report 2023</meta>
<!--  <meta name="productname">
   <productname>All SUSE Products</productname>
  </meta>-->

  <meta name="platform">All SUSE Products</meta>
  
  <authorgroup>
   <author>
    <personname>
     <firstname>Stoyan</firstname>
     <surname>Manolov</surname>
    </personname>
    <affiliation>
     <jobtitle>Head of Solution Security</jobtitle>
     <orgname>SUSE</orgname>
    </affiliation>
   </author>
   <!--  <author>
   <personname>
   <firstname></firstname>
   <surname></surname>
   </personname>
   <affiliation>
   <jobtitle></jobtitle>
   <orgname></orgname>
   </affiliation>
   </author>
   <editor>
   <orgname></orgname>
   </editor>
   <othercredit>
   <orgname></orgname>
   </othercredit>-->
  </authorgroup>

  <cover role="logos">
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="suse.svg" width="5em" align="center" valign="bottom"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="suse.svg" width="152px" align="center" valign="bottom"/>
    </imageobject>
   </mediaobject>
  </cover>
  
  <revhistory xml:id="rh-art-sbp-suse-sec-report-23">
   <revision>
    <date>2024-05-27</date>
    <revdescription>
     <para> </para>
    </revdescription>
   </revision>
  </revhistory>

  <!--<date>2024-05-27</date>-->

  <abstract>

   <para>SUSE Solution Security is committed to delivering best-in-class software security to its
    customers and to the open source community. The primary objectives are to treat software
    security as an ongoing and continual process.</para>

   <para>The goal of this report is to provide a summary of all security vulnerabilities which
    affected SUSE products in calendar year 2023.</para>

   <para><emphasis role="strong">Disclaimer</emphasis>: This document is part of the SUSE Best
    Practices series. All documents published in this series were contributed voluntarily by SUSE
    employees and by third parties. If not stated otherwise inside the document, the articles are
    intended only to be one example of how a particular action could be taken. Also, SUSE cannot
    verify either that the actions described in the articles do what they claim to do or that they
    do not have unintended consequences. All information found in this document has been compiled
    with utmost attention to detail. However, this does not guarantee complete accuracy. Therefore,
    we need to specifically state that neither SUSE LLC, its affiliates, the authors, nor the
    translators may be held liable for possible errors or the consequences thereof. </para>

  </abstract>

 </info>

 <sect1 xml:id="sec-motivation">
  <title>Motivation</title>

  <para>SUSE Solution Security is committed to delivering best in class software security to
   customers and to the open source community. The primary objectives are to treat software security
   as an ongoing and continual process that never ends. This implies to:</para>

  <itemizedlist>
   <listitem>
    <para>promptly react to security incidents and deliver premium quality security updates.</para>
   </listitem>
   <listitem>
    <para>continuously improve the security-related functionality in SUSE products.</para>
   </listitem>
   <listitem>
    <para>continuously contribute to the rapidly growing maturity of open source software.</para>
   </listitem>
   <listitem>
    <para>respect the open source software security principles of openness, transparency and
     traceability.</para>
   </listitem>
  </itemizedlist>

  <para>The SUSE Security Team addresses all aspects of software security on an ongoing basis. 
   Software security cannot be thought of as a state you can achieve at a specific point in time. Instead, it
   is a process that must be executed with professional expertise and continuous development. This
   persistent focus is what has given open source software, Linux and SUSE an excellent reputation
   for security. Our SUSE Solution Security team is responsible for handling all SUSE product-related 
   security incidents. In that team, clear and well-defined roles are assigned for tracking new incidents 
   and coordinating needed updates. The team closely collaborates with all SUSE software engineer specialists.</para>

  <para>The objective of this report is to provide a summary of all security vulnerabilities which
   affected SUSE products in calendar year 2023. We will go into details on the high impact
   vulnerabilities and elaborate on how we responded to these incidents. For a better understanding of our 
   classification mechanisms, we have described our rating system along with the equivalency of each rating 
   to the CVSS v3.1 scoring calculator.</para>
  
 </sect1>

 <!--<sect1 xml:id="sec-background">
  <title>Background</title>

  <para>A modern Linux operating system, such as SUSE Linux Enterprise Server for enterprise use or
   the openSUSE community distribution for home use, features a rich set of security programs and
   functions. Those range from access control, intrusion prevention and detection, flexible and
   trustworthy authentication mechanisms, encryption for files and network connections, file
   integrity checking utilities, to network analysis tools and monitoring/logging utilities for your
   system. To complement this, there are advanced tools that help you to securely configure and
   administer your system, and to securely download and install update packages. These utilities are
   standard in SUSE products. The update packages fix security bugs that have been found after your
   product has been released. The security features of your Linux system are waiting for you to
   explore them. SUSE encourages our customers to take advantage of them to further improve the
   level of privacy and security that is built into every system by default. </para>

  <para>Programs are usually written by humans, and humans make mistakes. By consequence, all
   software can contain errors. Some of these errors appear as instabilities (the software or the
   entire system crashes), while others may not have any apparent, visible effect. However, some
   software errors may introduce a security risk. A local or a remote attacker may be able to feed
   specially drafted data to the software which takes advantage of the programming error. In the
   case of a remotely exploitable bug, the data comes from an attached network device, such as a
   cable or DSL modem, or a wireless network interface card. The application then either crashes,
   resulting in a Denial of Service (DoS) attack, or it executes code that originates from the
   attacker, transferring control over the execution context from what the programmer intended to
   what the attacker has in mind for the exploitation of the error. Depending on the software's
   function, the resulting security breach can impose little or high security risks for your data
   and your system, potentially giving an attacker the opportunity to delete, alter or even steal
   your data, or use the system for his own purposes.</para>

  <para>The SUSE Solution Security team is responsible for handling all SUSE product-related
   security incidents. In that team, clear and well-defined roles are assigned for tracking new
   incidents and coordinating needed updates. The team works with all SUSE engineering software
   specialists.</para>

  <para>We use multiple sources to understand security incidents. These sources include the Mitre
   and NVD Common Vulnerabilities and Exposures (CVE) databases, various security mailing lists (OSS
   security, Linux distros, distros, bugtraq, and full-disclosure), direct reports, and other Linux
   vendors databases. We are also part of various pre-notification mailing lists for software
   components, like Xen, Samba, X.ORG. Confidential pre-notifications about vulnerabilities will be
   treated according to established responsible disclosure procedures.</para>

 </sect1>-->

 <!--<sect1 xml:id="sec-incident-rating-tracking">
  <title>Incident rating and tracking</title>

  <para>We rate the severity of incidents with two different systems, a simplified rating system and
   the Common Vulnerability Scoring System (CVSS) v3.1 scoring system. The CVSS is an open framework
   for communicating the characteristics and severity of software vulnerabilities. It is being
   developed by the US-based non-profit organization FIRST.org: Its main goal is to assign the right
   score to a vulnerability to help security administrators prioritize responses and resources to
   specific threats. CVSS v3.1 scoring consists of three metric groups: Base, Temporal, and
   Environmental. The Base group represents the intrinsic qualities of a vulnerability that are
   constant over time and across user environments. The Temporal group reflects the characteristics
   of a vulnerability that change over time. The Environmental group represents the characteristics
   of a vulnerability that are unique to a user's environment. The Base metrics produce a score
   ranging from 0 to 10, which can then be modified by scoring the Temporal and Environmental
   metrics. A CVSS score is also represented as a vector string, a compressed textual representation
   of the values used to derive the score. Today, SUSE uses the Base score methodology to evaluate
   vulnerabilities throughout the support life cycle of our products. SUSE keeps the right to adjust
   the final score of the vulnerability as more details become known and available throughout the
   analysis. The most current CVSS resources can be found at <link
    xlink:href="https://www.first.org/cvss/"/> . The CVSS v3.1 calculator used by SUSE could be
   found at <link xlink:href="https://www.first.org/cvss/calculator/3.1"/>. The framework is
   measuring the severity of a given vulnerability, not the associated risk alone. The scoring of
   any vulnerability may vary with different analysts hence the final score could be slightly
   different between vendors impacted by that vulnerability. For a more accurate assessment of the
   impact, vendors and application owners must always consider factors outside of CVSS such as
   exposure or threat.</para>

  <para> The security incidents are tracked in our own workflow system. Technical details are
   tracked in the SUSE bug-tracking system, and the updated software package is built, processed,
   and published by our internal <quote>Open Build System</quote>. Internal Service Level Agreements
   (SLAs) corresponding to the severity rating are monitored and reviewed regularly. Our packagers
   backport the required security fixes to our version of the software. To protect the stability of
   our customer setups, we only rarely do minor version upgrades. After receiving fixes for the
   affected software, four eye reviews cross-check the source patches. Several automated checks
   verify source and binary compatibility and the completeness of patch meta information. They also
   check whether patches can be installed without problems. Dedicated QA teams provide integration,
   bugfix, and regression testing for all updates before they are released to our customers. After
   the release of an update, automated processes publish the updates, update notices, and cross
   reference information on our CVE index pages and machine-readable OVAL and CVRF XML
   information.</para>

  <para>The objective of this report is to provide a summary of all security vulnerabilities which
   affected SUSE products in calendar year 2023. We will go into details on the high impact
   vulnerabilities which affected our prour products in 2023 and elaborate on how we responded to
   these incidents. For a better understanding of our classification mechanisms, we have described
   our rating system along with the equivalency of each rating to the CVSS v3.1 scoring
   calculator:</para>


  <table>
   <title>Incident rating and CVSS score</title>
   <tgroup cols="3">
    <colspec colwidth="2.5cm"/>
    <colspec colwidth="3cm"/>
    <thead>
     <row>
      <entry>Rating</entry>
      <entry>CVSS Score</entry>
      <entry>Definition</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>Critical</entry>
      <entry>9.0 and above</entry>
      <entry>This rating is given to flaws that could be easily exploited by a remote
       unauthenticated attacker and lead to system compromise (arbitrary code execution) without
       requiring user interaction. These are the types of vulnerabilities that can be exploited by
       worms. Flaws that require an authenticated remote user, a local user, or an unlikely
       configuration are not classed as critical impact.</entry>
     </row>
     <row>
      <entry>Important</entry>
      <entry>7.0 to 8.9</entry>
      <entry>This rating is given to flaws that can easily compromise the confidentiality,
       integrity, or availability of resources. These are the types of vulnerabilities that allow
       local users to gain privileges, allow unauthenticated remote users to view resources that
       should otherwise be protected by authentication, allow authenticated remote users to execute
       arbitrary code, or allow remote unauthenticated users to cause a denial of service without
       user interaction.</entry>
     </row>
     <row>
      <entry>Moderate </entry>
      <entry>4.0 to 6.9</entry>
      <entry>This rating is given to flaws that may be more difficult to exploit but could still
       lead to some compromise of the confidentiality, integrity, or availability of resources,
       under certain circumstances. These are the types of vulnerabilities that could have had a
       critical impact or important impact but are less easily exploited based on a technical
       evaluation of the flaw, or affect unlikely configurations. Local, persistent (service needs
       to be restarted) denial of service conditions for basic system services (kernel, systemd,
       polkit, dbus, etc.) with and without user interaction should also be rated
        <quote>moderate</quote>.</entry>
     </row>
     <row>
      <entry>Low </entry>
      <entry>up to 3.9 </entry>
      <entry>This rating is given to all other issues that have a security impact. These are the
       types of vulnerabilities that are believed to require unlikely circumstances to be able to be
       exploited, or where a successful exploit would give minimal consequences.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>-->

 <!--</sect1>

 <sect1 xml:id="sec-prefer-upgrades-over-backports">
  <title>When to prefer version upgrades over backports</title>

  <para> It is a general policy rule that no new upstream versions of a package are introduced into
   our enterprise products. This rule is not an absolute rule however. For certain types of
   packages, in particular antivirus software, security concerns weigh heavier than the conservative
   approach that is preferable from the perspective of quality assurance. For packages in that
   class, occasionally newer versions are introduced to a released version of an enterprise product
   line. </para>

  <para>Sometimes also for other types of packages the choice is made to introduce a new version
<!-\-   rather than a backport. This is done when producing a backport is not economically feasible or
   when there is a very relevant technical reason to introduce the newer version.</para>

 </sect1>-->

 <sect1 xml:id="sec-security-vulnerabilities-2023">
  <title>Major security vulnerabilities in 2023</title>

  <sect2 xml:id="sec-pwnkit">
   <title>CVE-2023-38408: Remote code execution in OpenSSH's forwarded ssh-agent</title>

   <bridgehead>Overview</bridgehead>
   <para>n July 2023, The Qualys Threat Research Unit (TRU) has discovered a remote code 
    execution vulnerability in OpenSSH’s forwarded <package>ssh-agent</package>. This vulnerability allows a remote 
    attacker to potentially execute arbitrary commands on vulnerable OpenSSH’s forwarded <package>ssh-agent</package>. </para>

   <para>Attackers must be able to access a host via SSH to escalate privileges on that host by exploiting 
    a flaw in the <package>pkcs11</package> module loading of the SSH agent. As the <package>pkcs11</package> agent helper allowed loading of 
    system dynamic libraries, certain loading patterns and problems in system libraries could be used 
    to gain code execution as the <package>pkcs11</package> helper.</para>

   <bridgehead>Solution</bridgehead>
   <para> Installing the updated packages provided by SUSE is sufficient to fix the problem.
    Use</para>

   <screen>zypper lp -a --cve=CVE-2023-38408</screen>

   <para> to search for the specific patch information. A restart of the service is not
    required.</para>

   <para>Note that for any SPx (Service Pack level) which is no longer in general support, you might need an LTSS
    or ESPOS subscription to obtain the update. See the SUSE <quote>CVE Page</quote>
    link in the <quote>References</quote> paragraph below for more details about each SPx.</para>

   <bridgehead>Workaround</bridgehead>
   <para>In case PKCS11 smartcards are not used for SSH agent support, remove 
    <filename>/usr/lib/ssh/ssh-pkcs11-helper</filename> from the system until maintenance updates 
    have been released.</para>
   
   <para>The workaround prevents exploitation and might be the right thing to do given how easy the exploit it, 
    but customers must be aware that this will break functionality until the update is installed.</para>


   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para> SUSE Web page for CVE-2023-38408: <link
      xlink:href="https://www.suse.com/security/cve/CVE-2023-38408.html"/></para>
    </listitem>
    <listitem>
     <para>Blog article: <link
      xlink:href="https://blog.qualys.com/vulnerabilities-threat-research/2023/07/19/cve-2023-38408-remote-code-execution-in-opensshs-forwarded-ssh-agent"/></para>
    </listitem>
   </itemizedlist>

  </sect2>


  <sect2 xml:id="sec-zenbleed">
   <title>CVE-2023-20593: AMD CPU: "ZenBleed" - VZEROUPPER does not clear upper bits under certain conditions</title>

   <bridgehead>Overview</bridgehead>
   <para> Researchers at Google have discovered Zenbleed, a hardware bug causing corruption of the vector registers.</para>
   
   <para>When a VZEROUPPER instruction is discarded as part of a bad transient execution path, its effect 
    on internal tracking is not unwound correctly. This manifests as the wrong micro-architectural state 
    becoming architectural, and corrupting the vector registers.</para>
   
   <para><emphasis>Note:</emphasis> While this malfunction is related to speculative execution, 
    this is not a speculative side-channel vulnerability.</para>
   
   <para>The corruption is not random. It happens to be stale values from the physical vector register file, 
    a structure competitively shared between sibling threads. Therefore, an attacker can directly access data from 
    the sibling thread, or from a more privileged context.</para>

   <bridgehead>Solution</bridgehead>
   <para>Packages containing a fix for this security issue were made available quickly. 
    To apply the fixes, install the new packages with the following command:</para>

   <screen>zypper patch --cve=CVE-2023-20593</screen>


   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>SUSE Web page for CVE-2023-20593 : <link
      xlink:href="https://www.suse.com/security/cve/CVE-2023-20593.html"/></para>
    </listitem>
    <listitem>
     <para>AMD Security Bulletin: <link xlink:href="https://www.amd.com/en/resources/product-security/bulletin/amd-sb-7008.html"
    /></para>
    </listitem>
    <listitem>
     <para>GitHub security research article: <link xlink:href="https://github.com/google/security-research/security/advisories/GHSA-v6wh-rxpg-cmm8"
     /></para>
    </listitem>
    </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-rapid-reset-attack">
   <title>CVE-2023-44487: HTTP/2 <emphasis role="bold">Rapid Reset</emphasis> attack</title>

   <bridgehead>Overview</bridgehead>
   <para>In August 2023, Amazon Web Services, Cloudflare and Google noticed a new type of 
    distributed denial-of-service (DDos) attacks on their networks. These attacks had record breaking sizes, 
    three times bigger than previous attacks.</para>

   <para>As it turned out, the problem that was exploited was not an implementation bug, but an issue 
    inside the internal design of the HTTP/2 protocol itself. The principle of the 
    <emphasis role="bold">Rapid Reset</emphasis> attack is quite simple.</para>
   
   <para>With HTTP/1.1, all requests to the server are processed serially on one connection. 
    The client is sending a request, the server will read and process it and send a response. Then the next request is processed.
    The newer HTTP/2 protocol allows multiple bidirectional streams via a single TCP connection. 
    A client can therefore send several requests at the same time, which are then answered by the server. 
    This results in a much higher utilization of each connection.</para>
   
   <para>The <emphasis role="bold">Rapid Reset</emphasis> attack now uses the fact that each of those 
    inner streams can be canceled at any point in time via an RST_STREAM frame. This can be done even before 
    data has been transmitted back to the client. The problem that arises is as follows: 
    The request is processed by the server, and for this purposes, resources are allocated per stream. 
    These resources must be deleted again a moment later when the RST_STREAM frame has arrived.</para>
   
   <para>This comes at almost no cost for the attacker, but depending on the server implementation, 
    it can result in significant resource utilization for the victim.</para>

   <bridgehead>Solution</bridgehead>
   <para>Several upstream projects updated their code to implement or extent the mitigation mechanisms 
    that prevent or lower the impact of those attacks. This is usually done by setting a reset rate limit.</para>
   
   <para>To install the respective patches, use:</para>

   <screen>zypper patch --cve=CVE-2023-44487</screen>


   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>SUSE Web page for CVE-2023-44487: <link
      xlink:href="https://www.suse.com/security/cve/CVE-2023-44487.html"/></para>
    </listitem>
    <listitem>
     <para>Google Cloud blog article: <link xlink:href="https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack"
     /></para>
    </listitem>
    <listitem>
     <para>Cloudflare blog article: <link xlink:href="https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/"
     /></para>
    </listitem>
    <listitem>
     <para>Qualys blog article: <link xlink:href="https://blog.qualys.com/vulnerabilities-threat-research/2023/10/10/cve-2023-44487-http-2-rapid-reset-attack"
     /></para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-terrapin-attack">
   <title>CVE-2023-48795: SSH prefix truncation attack (aka Terrapin Attack)</title>

   <bridgehead>Overview</bridgehead>
   <para> Security researchers from the Ruhr University Bochum have published a new attack on 
    the SSH v2 protocol, which allows active person-in-the-middle attackers to impact SSH connections 
    by removing initial encrypted SSH packets.</para>
   
   <para>This can lead to protocol security downgrades or similar problems. 
   Changing SSH packages or injecting new encrypted SSH packages is not possible with this attack.</para>
   
   <para>Software on all SUSE Linux Enterprise versions were originally affected. 
    The problem is inherent to the existing SSH v2 protocol, so new protocol addition(s) and enforcement 
    of them are needed to avoid the problem.</para>
   
   <para>The protocol vulnerability needs to be exploited in tandem with specific SSH ciphers.     
    The <package>chacha20-poly1305</package> SSH cipher is the one that was shown to be exploitable 
    most easily, also other ciphers using Encrypt-Then-MAC Message Authentication Codes (MACs) might 
    be exploitable under certain conditions.</para>
    
   <para><emphasis>Note</emphasis> that the ciphers themselves are not problematic. They could lead to exploitable scenarios
   only in combination with the SSH v2 protocol weakness.</para>
   
   <para>Find below a list of SSH v2 implementations that are shipped by SUSE and their exploitability status:</para>
   
   <itemizedlist>
    <listitem>
     <para><package>openssh</package>: is affected in all shipping versions up to 9.5p1. 
      All versions of SUSE Linux Enterprise Server are affected.</para>
    </listitem>
    <listitem>
     <para><package>putty</package>: is affected. It is shipped via SUSE PackageHub 15.</para>
    </listitem>
    <listitem>
     <para><package>libssh.org</package> (aka libssh): supports <package>chacha20-poly1305</package> 
      since 0.8.0. SUSE Linux Enterprise Server 12 SP5 and SUSE Linux Enterprise Server 15 SP1 and newer are affected.</para>
    </listitem>
    <listitem>
     <para><package>libssh2.org</package> (aka libssh2_org): does not implement the <package>chacha20-poly1305</package> 
      cipher in the newest release 1.11.0. ETM MACs were only implemented in 1.11.0, therefor versions before 1.11.0 
      are not affected. SUSE Linux Enterprise Server 12 SP5 and SUSE Linux Enterprise Server 15 come with version 1.11.0 and are 
      affected by this problem.</para>
    </listitem>
    <listitem>
     <para><package>jsch</package> (Java SSH): <package>chacha20-poly1305</package> was added with 
      version 0.1.66, ETM MACs in 0.1.58. Versions from 0.1.58 to current 0.2.9 are considered affected.       
      SUSE currently does not ship affected versions of <package>jsch</package>.</para>
    </listitem>
    <listitem>
     <para><package>proftpd</package>: its <package>mod_sftp</package> module, which is shipped via 
      SUSE PackageHub 15, is affected. It supports ETM MACs, but not <package>chacha20-poly1305</package>. 
      The module, however, is not enabled by default.</para>
    </listitem>
    <listitem>
     <para><package>golang.org/x/crypto/ssh</package>: The Golang SSH module is also affected.
      The SSH module is used and/or included by a long list of software written in GO.s of an issue, as in scenarios 
      relying on secure boot, like public systems.</para>
    </listitem>
   </itemizedlist>
     

   <bridgehead>Solution</bridgehead>
   <para>The solution is to install respective updates on server and client machines.</para>

   <para><package>openssh</package> updates were provided on December 18th. 
    Other SSH software was also updated after backporting upstream security fixes. 
    Note that both SSH clients and servers must be adjusted for the protocol adjustments to be effective.</para>
   
   <para>Mitigations like removal of ciphers can be done on either side to be effective.    
    Bacuase rollout may take some time and not all clients are under administrative control, 
    configuration adjustments such as removing ciphers should be made to avoid using affected ciphers
    (see the References section below).</para>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>SUSE Web page for CVE-2023-48795: <link
      xlink:href="https://www.suse.com/security/cve/CVE-2023-48795/"/></para>
    </listitem>
        <listitem>
     <para>SUSE TID 000021295: <link xlink:href="https://www.suse.com/support/kb/doc/?id=000021295"
      /></para>
    </listitem>
    <listitem>
     <para>Web page: <link xlink:href="https://terrapin-attack.com/"
     /></para>
    </listitem>
   </itemizedlist>

  </sect2>


  <sect2 xml:id="sec-tty-injection">
   <title>TTY injection via sudo</title>

   <bridgehead>Overview</bridgehead>
   <para> The Linux TTY subsystem allows pushing back keypresses into the TTY stack. 
   This is a not well-known feature and may lead to unexpected consequences or potential attacks.
   As an example, in cases where untrusted code using a command such as <command>sudo</command> 
    is executed, the untrusted code could push keypresses into the TTY stack, 
    which could then be executed after the <command>sudo</command> execution completes.</para>
   
   <para>While <command>sudo</command> is commonly used for transitioning to <quote>root</quote>
    where this would not be an issue, several other <command>sudo</command> scenarios are possible where this could be used to escalate privileges.
    The untrusted code would then be able to execute commands as <quote>root</quote> using this attack.</para>
   
   <para>To avoid this injection, <command>sudo</command> has the option to create a new 
    pseudo terminal device (PTY), which is discarded after running <command>sudo</command>, 
    and would not be affected by this keypress push back attack. However, note that this might impact 
    terminal output or the use of interactive keys like backspace or delete.</para>

   <bridgehead>Solution</bridgehead>
   <para>Add the line</para>
   
<screen>Default use_pty</screen>
   
   <para>to the <filename>/etc/sudoers</filename> configuration file using the <command>visudo</command> command.
    Starting with <package>sudo</package> version 1.9.14p1, this setting is the default for new installations.</para>

   <bridgehead>References</bridgehead>
   <itemizedlist>
    <listitem>
     <para>SUSE TID 000021241: <link xlink:href="https://www.suse.com/support/kb/doc/?id=000021241"
      /></para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-gather-data-sampling-downfall">
   <title>CVE-2022-40982: CPU transient information leakage from GATHER instructions 
    aka <quote>Gather Data Sampling</quote> aka <quote>DOWNFALL</quote></title>

   <bridgehead>Overview</bridgehead>
   <para>Security researcher Daniel Moghimi has identified a transient information leakage from GATHER 
    instructions on modern Intel CPUs (<emphasis role="bold">Skylake</emphasis> to 
    <emphasis role="bold">Tiger Lake</emphasis> generations).</para>
   
   <para>This can be used to reveal secret data contained in vector registers, which can essentially 
    be any information due to the use of these instructions in memory copy operations. 
    This information leak can cross process and privilege boundaries.</para>

   <bridgehead>Solution</bridgehead>
   <para>Intel has released CPU microcode to mitigate these issues. 
    The CPU microcode is mandatory for mitigation, the mitigation is enabled by default.</para>

   <para>Updated <package>ucode-intel</package> packages released by SUSE, 
    version 20230808 or later, contain the mitigations. If there is no CPU Microcode available, 
    the <command>avx</command> instructions can be hidden from CPUID reporting by the kernel.</para>
   
   <para>In addition, kernel and XEN changes are being applied to:</para>
   
   <itemizedlist>
    <listitem>
     <para>allow disabling the mitigation.</para>
    </listitem>
    <listitem>
     <para>report affectedness of the CPU and state of the mitigation.</para>
    </listitem>
   </itemizedlist>
   
   <para>SUSE will release kernel and XEN updates.</para>
   
   <para><emphasis role="bold">Mitigation reporting</emphasis></para>
   
   <para>The mitigation state is reported via the sysfs file <filename>    
    /sys/devices/system/cpu/vulnerabilities/gather_data_sampling</filename>.
    The file can report the following states:</para>
   
   <itemizedlist>
    <listitem>
     <para>Not affected</para>
     <para>This processor is not vulnerable.</para>
    </listitem>
    <listitem>
     <para>Vulnerable</para>
     <para>This processor is is vulnerable and the mitigation is disabled.</para>
    </listitem>
    <listitem>
     <para>Vulnerable: No microcode</para>
     <para>This processor is is vulnerable and the microcode is missing mitigation.</para>
    </listitem>
    <listitem>
     <para>Mitigation: Microcode</para>
     <para>This processor is is vulnerable and the mitigation is in effect.</para>
    </listitem>
    <listitem>
     <para>Mitigation: Microcode (locked)</para>
     <para>This processor is is vulnerable and the mitigation is in effect and cannot be disabled.</para>
    </listitem>
    <listitem>
     <para>Unknown: Dependent on hypervisor status</para>
     <para>Running on a virtual guest processor that is affected but with no way to know 
      if the host processor is mitigated or vulnerable. This can happen if the hypervisor does not expose 
      necessary MSR registers to guests.</para>
    </listitem>
   </itemizedlist>

   <para>Kernel command line options:</para>    
  <itemizedlist>
   <listitem>
    <para><command>gather_data_sampling=off</command></para>
    <para>Switch off this specific mitigation (the default is <quote>on</quote>).</para>
   </listitem>
   <listitem>
    <para><command>mitigations=off</command></para>
    <para>Switch off all CPU transient execution mitigations, including the <command>gather_data_sampling</command> one.</para>
   </listitem>
   <listitem>
    <para><command>clearcpuid=avx</command></para>
    <para>This option hides the AVX instructions from CPUID flags. Therefore, existing optimized code will not use 
     AVX instructions, or fallback to other variants, and thus not expose the vulnerability.</para>
   </listitem>
  </itemizedlist>

   <bridgehead>Performance considerations</bridgehead>
   
   <para>The mitigation impacts performance of the GATHER parts of the AVX2 and AVX512 instructions, 
    and potentially operations that are translated within the CPU to use these vector instructions 
    (for example potentially REP MOVS, or other instruction sets like SSE).</para>
   
   <para>According to the technical paper linked from the Intel Product Security Center Advisory listed below, 
    the impact might be as follows:</para>
    <para><quote>When the mitigation is enabled, there is additional latency before results of the gather 
     load can be consumed. Although the performance impact to most workloads is minimal, specific workloads 
     may show performance impacts of up to 50%.</quote></para>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>SUSE Web page for CVE-2022-40982: <link
      xlink:href="https://www.suse.com/security/cve/CVE-2022-40982.html"/></para>
    </listitem>
    <listitem>
     <para>Downfall attacks Web page: <link xlink:href="https://downfall.page/"/></para>
    </listitem>
    <listitem>
     <para>Intel Product Security Center Advisory INTEL-SA-00828: <link
      xlink:href="https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00828.html"
      /></para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-blacklotus-bootkit">
   <title>CVE-2023-24932: BlackLotus bootkit</title>

   <bridgehead>Overview</bridgehead>
   <para> A UEFI bootkit called BlackLotus has been spotted in the wild, which uses buggy secure boot binaries
    to bypass the UEFI secure boot chain. While this component is not shipped by SUSE, to ensure the integrity 
    of the UEFI secure boot chain, the affected components will need to be excluded from the UEFI secure boot space. 
    Any UEFI secure boot-enabled installation could be impacted by this vulnerability.</para>

   <bridgehead>Solution</bridgehead>
   <para>You can exclude affected components via a so-called <filename>DBX</filename> file which blocks UEFI binaries 
    using <package>signatures/has</package>. <filename>DBX</filename> file updates can be delivered 
    and deployed in different ways:</para> 
   
   <orderedlist>
    <listitem>
     <para>Via BIOS or Windows updates</para>
     <para>The DBX file can be delivered via BIOS updates. In case of a dual boot system, it is delivered with Windows updates.
      If it is installed via BIOS or Windows updates, no additional deployment on Linux is required.</para>
    </listitem>
    <listitem>
     <para>Via the firmware update tool (<package>fwupd</package>)</para>
     <para>Download the current DBX revocation list from https://uefi.org/revocationlistfile for the respective hardware platform.
      Use the command <command>fwupdmgr install x64_DBXUpdate.bin</command> and follow the prompts.
      This update method only works starting with SUSE Linux Enterprise 15 SP3 based products and newer.</para>
     <para><emphasis role="bold">Note:</emphasis> This is a manual deployment and is only required 
      if there are concerns about UEFI bootkits, as they are not a common attack scenario.</para>
    </listitem>
   </orderedlist>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>SUSE Web page for CVE-2023-24932: <link
      xlink:href="https://www.suse.com/security/cve/CVE-2023-24932.html"/></para>
    </listitem>
    <listitem>
     <para>Microsoft Support KB5025885:<link
      xlink:href="https://support.microsoft.com/en-us/topic/kb5025885-how-to-manage-the-windows-boot-manager-revocations-for-secure-boot-changes-associated-with-cve-2023-24932-41a975df-beb2-40c1-99a3-b3ff139f832d"/></para>
    </listitem>
    <listitem>
     <para>UEFI Revocation List File: <link xlink:href="https://uefi.org/revocationlistfile"/></para>
    </listitem>
   </itemizedlist>
   

  </sect2>

  <sect2 xml:id="sec-slp-traffic-amplification">
   <title>CVE-2023-29552: New SLP based traffic amplification attack</title>

   <bridgehead>Overview</bridgehead>
   <para> Security researchers Pedro Umbelino at Bitsight and Marco Lux at Curesec have published 
    a new network traffic amplification attack using the Service Location Protocol (SLP, RFC 2608). 
    This new attack allows for up to 2200x amplification, enabling very effective distributed 
    denial of service attacks.</para>

   <para>This flaw is a network protocol design flaw, a software fix is not easily possible.</para>

   <bridgehead>Solution</bridgehead>
   <para>The SLP protocol IP ports 427, both UDP and TCP, outside of your network boundary 
    should be blocked or filtered.</para>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>SUSE Web page for CVE-2023-29552: <link
      xlink:href="https://www.suse.com/security/cve/CVE-2023-29552.html"/></para>
    </listitem>
    <listitem>
     <para>SUSE TID 000021051: <link
      xlink:href="https://www.suse.com/support/kb/doc/?id=000021051"/></para></listitem>
   </itemizedlist>
  
  </sect2>

 </sect1>

 <sect1 xml:id="sec-vulnerability-management-2023">
  <title>Vulnerability Management in 2023</title>

  <para>The SUSE Solution Security team constantly monitors all the software components used in our
   products for security issues. More and improved tools are now available to find zero-day vulnerabilities 
   and scan for existing vulnerabilities. Such tools can check and report whether the application code written 
   conforms to standard security best practices or whether there are major holes in potential attack vectors 
   such as buffer overflow, denial of service, or unwanted elevated access. It is clear that developers are 
   becoming more and more security-aware and that the quality of the code being developed has improved 
   significantly, both in quantity and quality. While we are seeing an increasing number of important 
   vulnerabilities, the number of critical vulnerabilities is decreasing year over year.</para>


  <table>
   <title>Vulnerabilities with a unique CVE identified, impacting SUSE products in 2023</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>Low</entry>
      <entry>Moderate</entry>
      <entry>Important</entry>
      <entry>Critical</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>123</entry>
      <entry>597</entry>
      <entry>387</entry>
      <entry>9</entry>
     </row>
    </tbody>
   </tgroup>
  </table>


  <table>
   <title>Security updates and patches released to fix these vulnerabilities in 2023</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>Low</entry>
      <entry>Moderate</entry>
      <entry>Important</entry>
      <entry>Critical</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>49</entry>
      <entry>718</entry>
      <entry>2137</entry>
      <entry>37</entry>
     </row>
    </tbody>
   </tgroup>
  </table>


  <figure>
   <title>Security updates and patches released per month in 2023</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="suse-security-report-2023-statistics.png" width="90%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="suse-security-report-2023-statistics.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

 </sect1>

 <sect1 xml:id="sec-secure-sw-supply-chain">
  <title>Securing the software supply chain </title>
  
  <para>Securing our software supply chain is a top priority for SUSE to protect our customers
   from security risks, known and zero-day vulnerabilities. Ensuring that no threat actor can inject
   malicious code into our build service systems is certified by industry leading security
   certifications. Our teams continually work to certify all SUSE products, and develop security
   solutions to offer our customers the highest level of trust and reliability.</para>

<sect2 xml:id="sec-proactive-code-review">
 <title>Proactive review of code</title>
 
 <para>Our skilled team of proactive security engineers regularly reviews the code we ship. 
  We harden our products and conduct security audits on selected packages. Packages and products 
  are continually reviewed to ensure we protect our customers' systems with the latest state of the art
  technology. To this end, we have introduced an automation setup that notifies our team of 
  potentially dangerous changes in existing or new packages (for example important permission changes) 
  and triggers an audit if necessary.</para>
 
 <para>Over the last year, our proactive Security team has found and assigned CVE IDs to a number 
  of vulnerabilities which document the more important findings. Find more information on our 
  <link xlink:href="https://security.opensuse.org/">blog page</link>.</para>
 
</sect2>

 
 <sect2 xml:id="sec-sbom">
  <title>Software Bill of Materials (SBOM) available</title>
  
  <para>Following recent supply chain attacks and increasing security automation, software inventory 
   management in particular is becoming increasingly important. Governments and other regulated industries 
   now require the publication of a so-called Software Bill Of Materials (SBOM) for software products.</para>
  
  <para>Various SBOM formats have appeared on the market.
   SUSE has begun releasing SBOM in the two formats most commonly used by operating system vendors: 
   SPDX 2.0 and CycloneDX. SPDX 2.0 has even been standardized in ISO/ICE 5962:2021.</para>
  
  <para><emphasis role="bold">SUSE Linux Enterprise product media:</emphasis></para>
  <para>For our product media (ISO images), the SBOM materials are available from our download Web site 
   in both SPDX 2.0 and CycloneDX formats. The granularity of this data is currently at RPM level.</para>
  
    <para><emphasis role="bold">SUSE Linux Enterprise BCI container images:</emphasis></para>
  <para>For our BCI container images, the SBOM data is delivered in the sigstore attestation blob in SPDX 2.0 format.
   The data is supposed to be processed automatically, but manual retrieval is also possible. Due to multi-arch 
   container manifests it is a two step operation.</para>
   
  <para><emphasis role="bold">Example call:</emphasis> </para>
  <para>Use the external <package>crane</package> tool 
   to extract the x86_64 container part, the <package>cosign</package> tool to retrieve and verify the attestation, 
   and the <package>jq</package> tool to extract the SPDX 2.0 SBOM data.</para>
  
  <screen>crane digest --platform linux/amd64 registry.suse.com/suse/sle15:15.4</screen>  
  
  <para><emphasis role="bold">Example result:</emphasis></para>
  
  <screen>sha256:c8aeb5a7662c38716d303fb854c5baa2329afccb4637c0f3c7c44b971181fdbb</screen>
  
  <para>Then run the following on the command line:</para>
  
<screen>
 cosign verify-attestation --type spdxjson –key
 /usr/share/pki/containers/suse-container-key.pem 
 registry.suse.com/suse/sle15@sha256:c8aeb5a7662c38716d303fb854c5baa2329afccb4637c0f3c7c44b971181fdbb | jq '.payload | @base64d | fromjson 
 | .predicate'
</screen>
    
 </sect2>
  
 <sect2 xml:id="sec-security-csaf-format">
  <title>Security Information in CSAF format</title>
  
  <para>The Common Security Advisory Format (CSAF) is an industry-standard format for publishing 
   security advisories in machine readable form. It is the descendant of the CVRF format and standardized 
   by the OASIS foundation. </para>
  
   <para>It differs from the OVAL format, whose goal is to be able to machine-check the health of a system 
   for security, while the CVRF and CSAF formats are intended for machine import into ticketing systems 
   and bug trackers to respond to vulnerabilities.</para>
  
  <para>SUSE currently offers:</para>
  
  <itemizedlist>
   <listitem>
    <para>CSAF data indexed by Security Advisory in CSAF 2.0 format.</para>
   </listitem>
   <listitem>
    <para>CSAF VEX data indexed by CVE in CSAF 2.0 VEX format.</para>
   </listitem>
  </itemizedlist>
  
  <para>SUSE has started generating CSAF data for SUSE security update notifications 
  and CVEs in February 2023, including all previous security advisories and CVEs.</para>
  
  <para>The CSAF 2.0 security advisory data can be downloaded 
   <link xlink:href="https://ftp.suse.com/pub/projects/security/csaf/">from the SUSE ftp site</link>.</para>
  <para>The CSAF 2.0 VEX data indexed by CVE can be downloaded 
   <link xlink:href="https://ftp.suse.com/pub/projects/security/csaf-vex/">from this SUSE ftp site</link>.</para>
  <para>The data is available under the Creative Commons license, with attribution CC-BY-4.0. 
   The CSAF format is a verbose and simple JSON format, so it can be hooked into other tools pretty 
   easily even without additional libraries.</para>
  
  <para>A <link xlink:href="https://oasis-open.github.io/csaf-documentation/tools.html">list of reference tools</link> 
   is also provided by OASIS.</para>
    
 </sect2> 
  
  <sect2 xml:id="sec-osv-data">
   <title>Open Source Vulnerabilities (OSV) data</title>
   
   <para>OSV is a Google-based vulnerability database and triage infrastructure for open source projects 
   aimed at helping both open source maintainers and consumers of open source. </para>
   
   <para>SUSE is publishing regularly updated OSV data, which is available in beta status on 
    <link xlink:href="https://ftp.suse.com/pub/projects/security/osv/"></link>.</para>
      
  </sect2>
  </sect1>

 <sect1 xml:id="sec-securing-product-portfolio">
  <title>Securing Our Product Portfolio</title>
  
  <para></para>
  <para>
   <emphasis role="bold"> January 17th 2023</emphasis>
  </para>
  <para>The Defense Information Systems Agency (DISA) has released the Security Content Automation
   Protocol (SCAP) for the SUSE Linux Enterprise Server 15 Security Technical Implementation Guide
   (STIG). The SCAP is available for download at <link
    xlink:href="https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_SLES_15_V1R1_STIG_SCAP_1-2_Benchmark.zip"
   />. DISA also released the automated benchmark for the SUSE Linux Enterprise Server 15 Security
   Technical Implementation Guide (STIG). The benchmark is also available on the Cyber Exchange
   public site at <link xlink:href="https://public.cyber.mil/stigs/downloads"/>. </para>

  <para>
   <emphasis role="bold"> April 19th 2022</emphasis>
  </para>
  <para>DISA released the SUSE Rancher Manager Security Technical Implementation Guide (STIG). The
   STIG is also available on the Cyber Exchange public site at
   https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_MCM_V1R1_STIG.zip </para>

  <para>
   <emphasis role="bold">June 13th 2022 </emphasis>
  </para>
  <para>SUSE has translated its SUSE Security Situation Advisory Guide (SUSE S2 UAG) v. 1.1 into
   English. This guide provides an overview of possible immediate actions and approaches that can be
   taken with SUSE customer products. It can be accessed via <link
    xlink:href="https://links.imagerelay.com/cdn/3404/ql/0fb22d6c1aa740bf829f863d5841981a/SUSE_Security_Situation_Advisory_Guide__SUSE_S2UAG.pdf"
   /></para>

  <para>
   <emphasis role="bold">June 29th 2022</emphasis>
  </para>
  <para>SUSE became a collaborator with the National Institute of Standards and Technology (NIST) on
   the Automation of the Cryptographic Module Validation Program (ACMVP). "The National
   Cybersecurity Center of Excellence (NCCoE), a part of NIST, is a collaborative hub where industry
   organizations, government agencies, and academic institutions work together to address
   businesses’ most pressing cybersecurity challenges. Through this collaboration, the NCCoE
   develops modular, easily adaptable example cybersecurity solutions using standards, best
   practices, and commercially available technology." SUSE looks forward to our joint activities
   with NIST and the other vendors in the program. You can read more at the NIST ACMVP Web site. </para>

  <para>
   <emphasis role="bold">August 1st 2022</emphasis>
  </para>
  <para>SUSE was awarded the Certificate of Software Quality Level 1 (Certificate #22-0353), also
   known as the Good Software (GS) Certification, by the Telecommunications Technology Association
   (TTA) of the Republic of Korea, for its SUSE Linux Enterprise Server 15.  "The GS (Good Software)
   Certification certifies good quality software based on international standards, ISO/IEC 25023,
   25051 and 25041 to improve the quality of software products and promote the spread of high
   quality products."  Certificate can be viewed at <link
    xlink:href="https://sw.tta.or.kr/product/prod_gsce_view.jsp?num=7255&amp;pa=2d56c77a3d1739509363eafd002e37bb"
   />
  </para>

  <para>
   <emphasis role="bold">October 31st 2022 </emphasis>
  </para>
  <para>The Defense Information Systems Agency (DISA) released SUSE Rancher Kubernetes Engine 2
   Security Technical Implementation Guide (STIG). This content is published as a resource to assist
   in the application of security guidance to systems. The STIG may be accessed at <link
    xlink:href="https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_RGS_RKE2_V1R1_STIG.zip"/>
  </para>

  <para>
   <emphasis role="bold">December 6th 2022 </emphasis>
  </para>
  <para>SUSE successfully implemented ISO 27001 and ISO 27701 in full scope and with all of the
   clauses and achieved certification of our Information Security Management System (ISMS) and the
   Privacy Information Management System (PIMS) to the respective standards, attesting to our
   commitment of secure innovation, with focus on privacy, rights and freedoms of individuals. In
   doing so, SUSE has obtained two certifications from NQA, the leading independent provider of
   environmental simulation testing, inspection and certification services. They span everything
   within SUSE and our entities, including all countries we operate in, subsidiaries and all
   processes. </para>

  <para>The ISMS &amp; PIMS of SUSE (as PII Controller and Processor) applies to all client
   facing services, internal services, processed information including personal data related to
   employees, clients, openSUSE Community and other interested parties, related IT and non-IT
   supporting infrastructure as detailed in the latest Statement of Applicability version 1.0. </para>

  <para>For additional information, you can download the certifications accessing the below links:
   ISO 27001: <link xlink:href="https://www.suse.com/assets/GB235856-HO-ISMS.pdf"/> ISO 27701: <link
    xlink:href="https://www.suse.com/assets/GB235856-HO-PIMS.pdf"/>
  </para>

 </sect1>

 <sect1 xml:id="sec-about-suse">
  <title>About SUSE</title>

  <para>SUSE is a global leader in innovative, reliable and enterprise-grade open source solutions,
   relied upon by more than 60% of the Fortune 500 to power their mission-critical workloads. We
   specialize in Enterprise Linux, Kubernetes Management, and Edge solutions, and collaborate with
   partners and communities to empower our customers to innovate everywhere – from the data center,
   to the cloud, to the edge and beyond. SUSE puts the <quote>open</quote> back in open source,
   giving customers the agility to tackle innovation challenges today and the freedom to evolve
   their strategy and solutions tomorrow. The company employs nearly 2000 people globally and is
   listed in the regulated market (Prime Standard) of the Frankfurt Stock Exchange. For more
   information, visit <link xlink:href="https://www.suse.com"/>.</para>

 </sect1>

 <sect1 xml:id="sec-statements">
  <title>Forward-looking statements</title>

  <para>Any statements in this document about future expectations, plans and prospects for the
   company, including statements containing the words <quote>aims</quote>, <quote>targets</quote>,
    <quote>will</quote>, <quote>believes</quote>, <quote>anticipates</quote>,
    <quote>plans</quote><quote>, expects</quote>, and similar expressions, may constitute
   forward-looking statements and should be read with caution.</para>

  <para>Actual results may differ materially from those indicated by such forward-looking statements
   as a result of various important factors, including competitive landscape, development of
   customer deals, reliance upon customer relationships, management of growth and acquisitions, the
   possibility of undetected software issues, the risks of impacts of the COVID-19 pandemic and
   economic downturns, pricing pressures and the viability of the Internet. In addition, any
   forward-looking statements included herein represent views as of the date of this document and
   these views could change. The Company does not have any obligation to update its forward-looking
   statements. These forward-looking statements are subject to change and should not be relied upon
   as representing the Company’s views as of any date other than the publication date of this
   document.</para>

 </sect1>

 <?pdfpagebreak style="sbp" formatter="fop"?>
 <xi:include href="sbp-legal-notice.xml"/>


 <?pdfpagebreak style="sbp" formatter="fop"?>
 <xi:include href="license-gfdl.xml"/>


</article>
