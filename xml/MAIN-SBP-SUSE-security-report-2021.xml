<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
]>

<article role="sbp" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art-sbp-suse-sec-report-21"
 xml:lang="en">

 <info>
  <title>SUSE Solution Security Risk Report 2021</title>
  <productname>All SUSE Products</productname>
  <!--<productnumber>12, 15</productnumber>-->
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://github.com/SUSE/suse-best-practices/issues/new</dm:url>
    <dm:product>SUSE Solution Security Risk Report 2021</dm:product>
   </dm:bugtracker>
   <dm:editurl>https://github.com/SUSE/suse-best-practices/edit/main/xml/</dm:editurl>
  </dm:docmanager>
  
  
   <meta name="series">SUSE Best Practices</meta> 
   <meta name="category">Security</meta> 
   
   <meta name="platform">All SUSE Products</meta>    
   <!--<meta name="platform"></meta>-->        
   
   <authorgroup>
   <author>
   <personname>
   <firstname>Stoyan</firstname>
   <surname>Manolov</surname>
   </personname>
   <affiliation>
   <jobtitle>Head of Solution Security</jobtitle>
   <orgname>SUSE</orgname>
   </affiliation>
   </author>
 <!--  <author>
   <personname>
   <firstname></firstname>
   <surname></surname>
   </personname>
   <affiliation>
   <jobtitle></jobtitle>
   <orgname></orgname>
   </affiliation>
   </author>
   <editor>
   <orgname></orgname>
   </editor>
   <othercredit>
   <orgname></orgname>
   </othercredit>-->
   </authorgroup>
  
  <cover role="logos">
   <mediaobject>
    <imageobject>
     <imagedata fileref="suse.svg" width="4em"/>
    </imageobject>
   </mediaobject>
  <!-- <mediaobject>
    <imageobject>
     <imagedata fileref="microsoft.svg" width="6em"/>
    </imageobject>
   </mediaobject>-->
  </cover>

  <date>April 27, 2022</date>

  <abstract>

   <para>SUSE Solution Security is committed to delivering best in class software security to its
    customers and to the open source community. The primary objectives are to treat software
    security as an ongoing and continual process.</para>

   <para>The SUSE Security Team addresses all aspects of software security on an ongoing basis.
    Software security cannot be thought of as a state you can achieve at a specific point in time.
    Instead, it is a process that must be executed with professional expertise and continuous
    development. This persistent focus is what has given open source software, Linux and SUSE an
    excellent reputation for security.</para>

   <para>The objective of this report is to provide a summary of all security vulnerabilities which
    affected SUSE products in calendar year 2021.</para>

   <para><emphasis role="strong">Disclaimer</emphasis>: This document is part of the SUSE Best
    Practices series. All documents published in this series were contributed voluntarily by SUSE
    employees and by third parties. If not stated otherwise inside the document, the articles are
    intended only to be one example of how a particular action could be taken. Also, SUSE cannot
    verify either that the actions described in the articles do what they claim to do or that they
    do not have unintended consequences. All information found in this document has been compiled
    with utmost attention to detail. However, this does not guarantee complete accuracy. Therefore,
    we need to specifically state that neither SUSE LLC, its affiliates, the authors, nor the
    translators may be held liable for possible errors or the consequences thereof. </para>

  </abstract>

 </info>

 <sect1 xml:id="sec-motivation">
  <title>Motivation</title>

  <para>SUSE Solution Security is committed to delivering best in class software security to its
   customers and to the open source community.</para>

  <para> The primary objectives are to treat software security as an ongoing and continual process.
   This implies to</para>

  <itemizedlist>
   <listitem>
    <para>promptly react to security incidents and deliver premium quality security updates.</para>
   </listitem>
   <listitem>
    <para>continuously improve the security related functionality in SUSE products.</para>
   </listitem>
   <listitem>
    <para>continuously contribute to the rapidly growing maturity of open source software.</para>
   </listitem>
   <listitem>
    <para>respect the open source software security principles of openness, transparency and
     traceability.</para>
   </listitem>
  </itemizedlist>

  <para>At the same time, any software can also contain errors (both deliberate and accidental)
   which could affect the system's security, including design flaws, programming errors, and
   backdoors.</para>

  <para>The SUSE Security Team addresses all of these aspects of software security on an ongoing
   basis. Software security cannot be thought of as a state you can achieve at a specific point in
   time. Instead, it is a process that must be executed with professional expertise and continuous
   development. This persistent focus is what has given open source software, Linux and SUSE such an
   excellent reputation for security.</para>

 </sect1>

 <sect1 xml:id="sec-background">
  <title>Background</title>

  <para>Software provides security features (such as authentication methods, encryption, intrusion
   prevention and detection, backup and others). However, it can also contain errors (such as design flaws,
   programming errors, and even backdoors) that often turn out to be relevant for the system's
   security. The SUSE Security Team's task is to addresses all of these aspects of software
   security, with the understanding that security in software is a challenge that never ends.
   Software security cannot be understood a state taken at some certain point in time; it is a
   process that must be filled with professional expertise and permanent development, both on
   software and on skills. The resulting evolution is what has given open source software, Linux and
   SUSE its excellent reputation for security.</para>

  <para>A modern Linux operating system, such as SUSE Linux Enterprise Server for enterprise use
   or the openSUSE community distribution for home use, features a rich set of security programs and
   functions that range from access controls, intrusion prevention and detection, flexible and
   trustworthy authentication mechanisms, encryption for files and network connections, file
   integrity checking utilities, to network analysis tools and monitoring/logging utilities for your
   system. To complement this, there are advanced tools that help you to securely configure and
   administer your system, and to securely download and install update packages. These utilities are
   standard in SUSE products. The update packages fix security bugs that have been found after your
   product has been released. The security features of your Linux system are waiting for you to explore
   them. SUSE encourages our customers to take advantage of them to further improve the level of
   privacy and security that is built into every system by default. </para>

  <para>Programs are usually written by humans, and humans make mistakes. By consequence, all
   software can contain errors. Some of these errors appear as instabilities (the software or the
   entire system crashes), while others may not have any apparent, visible effect. However, some
   software errors may introduce a security risk. A local or a remote attacker may be able to feed
   specially drafted data to the software which takes advantage of the programming error (in the
   case of a remotely exploitable bug, the data comes from an attached network device, such as a
   cable or DSL modem, or a wireless network interface card). The application then either crashes,
   resulting in a Denial of Service (DoS) attack, or it executes code that originates from the
   attacker, transferring control over the execution context from what the programmer intended to
   what the attacker has in mind for the exploitation of the error. Depending on the software's
   function, the resulting security breach can impose little or high security risks for your data
   and your system, potentially giving an attacker the opportunity to delete, alter or even steal
   your data, or use the system for his own purposes.</para>

  <para>The SUSE Solution Security team is responsible for handling all SUSE product-related
   security incidents. In that team, clear and well-defined roles are assigned for tracking new
   incidents and coordinating needed updates. The team works with all SUSE engineering
   software specialists.</para>

  <para>We use multiple sources to understand security incidents. These sources include the Mitre
   and NVD Common Vulnerabilities and Exposures (CVE) databases, various security mailing lists (OSS security, Linux distros, distros,
   bugtraq, and full-disclosure), direct reports, and other Linux vendors databases. We are also
   part of various pre-notification mailing lists for software components, like Xen, Samba, X.ORG.
   Confidential pre-notifications about vulnerabilities will be treated according to established
   responsible disclosure procedures.</para>

 </sect1>

 <sect1 xml:id="sec-incident-rating-tracking">
  <title>Incident rating and tracking</title>

  <para>We rate the severity of incidents with two different systems, a simplified rating system and
   the Common Vulnerability Scoring System (CVSS) v3.1 scoring system. The CVSS is an open framework
   for communicating the characteristics and severity of software vulnerabilities. It is being
   developed by the US-based non-profit organization FIRST.org: Its main goal is to assign the
   right score to a vulnerability to help security administrators prioritize responses and resources
   to specific threats. CVSS v3.1 scoring consists of three metric groups: Base, Temporal, and
   Environmental. The Base group represents the intrinsic qualities of a vulnerability that are
   constant over time and across user environments. The Temporal group reflects the characteristics
   of a vulnerability that change over time. The Environmental group represents the
   characteristics of a vulnerability that are unique to a user's environment. The Base metrics
   produce a score ranging from 0 to 10, which can then be modified by scoring the Temporal and
   Environmental metrics. A CVSS score is also represented as a vector string, a compressed textual
   representation of the values used to derive the score. Today, SUSE uses the Base score
   methodology to evaluate vulnerabilities throughout the support lifecycle of our products. SUSE
   keeps the right to adjust the final score of the vulnerability as more details become known and
   available throughout the analysis. The most current CVSS resources can be found at <link
    xlink:href="https://www.first.org/cvss/"/> . The CVSS v3.1 calculator used by SUSE could be
   found at <link xlink:href="https://www.first.org/cvss/calculator/3.1"/>. The framework is
   measuring the severity of a given vulnerability, not the associated risk alone. The scoring of
   any vulnerability may vary with different analysts hence the final score could be slightly
   different between vendors impacted by that vulnerability. For a more accurate assessment of the
   impact, vendors and application owners must always consider factors outside of CVSS such as
   exposure or threat.</para>

  <para> The security incidents are tracked in our own workflow system, technical details are
   tracked in the SUSE bug-tracking system, and the updated software package is built, processed,
   and published by our internal <quote>Open Build System</quote>. Internal Service Level Agreements (SLAs) corresponding to the severity
   rating are monitored and reviewed regularly. Our packagers backport the required security fixes
   to our version of the software. To protect the stability of our customer setups, we only rarely
   do minor version upgrades. After receiving fixes for the affected software, four eye reviews
   cross-check the source patches. A number of automated checks verify source and binary
   compatibility and the completeness of patch meta information. They also check whether patches can be
   installed without problems. Dedicated QA teams provide integration, bugfix, and regression
   testing for all updates before they are released to our customers. After the release of an
   update, automated processes publish the updates, update notices, and cross reference information
   on our CVE index pages and machine-readable OVAL and CVRF XML information.</para>

  <para>The objective of this report is to provide a summary of all security vulnerabilities which
   affected SUSE products in calendar year 2021. We will go into details on the high impact
   vulnerabilities which affected our products in 2021 and elaborate on how we responded to these
   incidents. For a better understanding of our classification mechanisms, we have described our
   rating system along with the equivalency of each rating to the CVSS v3.1 scoring
   calculator:</para>


  <table>
   <title>Incident rating and CVSS score</title>
   <tgroup cols="3">
    <colspec colwidth="2.5cm"/>
    <colspec colwidth="3cm"/>
    <thead>
     <row>
      <entry>Rating</entry>
      <entry>CVSS Score</entry>
      <entry>Definition</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>Critical</entry>
      <entry>9.0 and above</entry>
      <entry>This rating is given to flaws that could be easily exploited by a remote
       unauthenticated attacker and lead to system compromise (arbitrary code execution) without
       requiring user interaction. These are the types of vulnerabilities that can be exploited by
       worms. Flaws that require an authenticated remote user, a local user, or an unlikely
       configuration are not classed as critical impact.</entry>
     </row>
     <row>
      <entry>Important</entry>
      <entry>7.0 to 8.9</entry>
      <entry>This rating is given to flaws that can easily compromise the confidentiality,
       integrity, or availability of resources. These are the types of vulnerabilities that allow
       local users to gain privileges, allow unauthenticated remote users to view resources that
       should otherwise be protected by authentication, allow authenticated remote users to execute
       arbitrary code, or allow remote unauthenticated users to cause a denial of service without
       user interaction.</entry>
     </row>
     <row>
      <entry>Moderate </entry>
      <entry>4.0 to 6.9</entry>
      <entry>This rating is given to flaws that may be more difficult to Copyright © SUSE 2022 5
       exploit but could still lead to some compromise of the confidentiality, integrity, or
       availability of resources, under certain circumstances. These are the types of
       vulnerabilities that could have had a critical impact or important impact but are less easily
       exploited based on a technical evaluation of the flaw, or affect unlikely configurations.
       Local, persistent (service needs to be restarted) denial of service conditions for basic
       system services (kernel, systemd, polkit, dbus, etc.) with and without user interaction
       should also be rated <quote>moderate</quote>.</entry>
     </row>
     <row>
      <entry>Low </entry>
      <entry>up to 3.9 </entry>
      <entry>This rating is given to all other issues that have a security impact. These are the
       types of vulnerabilities that are believed to require unlikely circumstances to be able to be
       exploited, or where a successful exploit would give minimal consequences.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 xml:id="sec-prefer-upgrades-over-backports">
  <title>When to prefer version upgrades over backports</title>

  <para> It is a general policy rule that no new upstream versions of a package are introduced into
   our enterprise products. This rule is not an absolute rule however. For certain types of
   packages, in particular antivirus software, security concerns weigh heavier than the conservative
   approach that is preferable from the perspective of quality assurance. For packages in that
   class, occasionally newer versions are introduced to a released version of an enterprise product
   line. </para>

  <para>Sometimes also for other types of packages the choice is made to introduce a new version rather
   than a backport. This is done when producing a backport is not economically feasible or when
   there is a very relevant technical reason to introduce the newer version.</para>
  
  </sect1>
 
 <sect1 xml:id="sec-security-vulnerabilities">
  <title>Major security vulnerabilities in 2021</title>

  <sect2 xml:id="sec-log4shell">
   <title>Log4Shell</title>

   <bridgehead>Overview</bridgehead>
   <para> On Friday, December 10th 2021, a new vulnerability in the <quote>log4j</quote> Java
    logging framework was reported, which could be trivially exploited. The 0-day exploit in the
    log4j Java logging framework was found by Chen Zhaojun of Alibaba Cloud Security Team, which
    allowed remote attackers able to inject strings into log4j based Java logging to execute code by
    exploiting the default enabled JNDI bindings. This is possible without any preconditions, making
    it critical. This vulnerability is caused by a new feature introduced in log4j 2.x versions
    where a specific string embedded in messages logged by log4j would be interpreted as Java
    code.</para>

   <para>The vulnerability, also called <quote>log4shell</quote> does not impact SUSE Linux
    Enterprise products directly as these are still shipping an older version of log4j that is not
    affected by this bug. </para>

   <para>SUSE Rancher is not affected by this vulnerability. The Helm chart for Istio 1.5, provided
    by Rancher and which is currently deprecated, includes Zipkin and is vulnerable to log4j.
    Customers are advised to upgrade to the recent Istio version provided in Cluster Explorer, which
    does not uses Zipkin and is not affect to the vulnerability.</para>

   <para>The vulnerability does not affect SUSE Manager, as it is using at most log4j 1.2.x, which
    is not affected. One component of SUSE OpenStack Cloud (<quote>storm</quote>) embeds log4j 2.x, which
    immediately received the required update. The SUSE NeuVector product is not affected by this
    vulnerability, but its security scanner functionality has now added support for scanning your
    containers, see the NeuVector log4j2 page.</para>

   <para>A much less severe similar vulnerability was discovered in older log4j 1.2.x versions via
    the JMS interface. This JMS functionality is not default enabled, administrators must have
    enabled it. SUSE has also published updates for log4j 1.2 versions disabling the JMS
    functionality completely.</para>

   <para>For the log4j 1.2.x packages, SUSE is already fixing security issues in these packages,
    even though upstream has declared them end-of-life. In parallel, SUSE will ship log4j 2.x
    versions where possible so customers can migrate to the newer log4j major release.</para>

   <bridgehead>Solution</bridgehead>

   <para>SUSE considers log4j versions 2.0 and newer as affected, log4j 1.2.x does not have the same
    critical vulnerability and is not considered affected by this CVE.</para>

   <itemizedlist>
    <listitem>
     <para> SUSE OpenStack Cloud embeds log4j2 in the "storm" component, which received updates
      within 5 days of the initial vulnerability announcement. SUSE customers are advised to get the
      release security update for the mitigation of this vulnerability.</para>
    </listitem>
    <listitem>
     <para>SUSE Linux Enterprise products do not ship log4j 2.x.</para>
    </listitem>
    <listitem>
     <para>SUSE Manager does not ship log4j 2.x.</para>
    </listitem>
    <listitem>
     <para>SUSE Enterprise Storage does not ship log4j 2.x.</para>
    </listitem>
    <listitem>
     <para>SUSE NeuVector product does not ship log4j 2.x</para>
    </listitem>
   </itemizedlist>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para> SUSE CVE Web page for CVE-2021-44228: <link
       xlink:href="https://www.suse.com/security/cve/CVE-2021-44228.html"/></para>
    </listitem>
    <listitem>
     <para>SUSE CVE Web page for CVE-2021-45046: <link
       xlink:href="https://www.suse.com/security/cve/CVE-2021-45046.html"/></para>
    </listitem>
    <listitem>
     <para>SUSE CVE Web page for CVE-2021-4104 (log4j 1.2): <link
       xlink:href="https://www.suse.com/security/cve/CVE-2021-4104.html"/>
     </para>
    </listitem>
    <listitem>
     <para>log4j security apara>log4j security advisory: <link
       xlink:href="https://logging.apache.org/log4j/2.x/security.html"/></para>
    </listitem>
    <listitem>
     <para>SUSE Technical Information Document (TID) 000020526: <link
       xlink:href="https://www.suse.com/support/kb/doc/?id=000020526"/></para>
    </listitem>

    <listitem>
     <para>NeuVector article about <emphasis role="italic">log4j2</emphasis> scanning addition:
       <link xlink:href="https://blog.neuvector.com/article/apache-log4j-2-cve-2021-44228"/>
     </para>
    </listitem>
    <listitem>
     <para>US CISA guidance for <emphasis role="italic">log4j2</emphasis>: <link
       xlink:href="https://www.cisa.gov/uscert/apache-log4j-vulnerability-guidance"/>
     </para>
    </listitem>
    <listitem>
     <para>BSI notification about <emphasis role="italic">log4j2</emphasis> (PDF): <link
       xlink:href="https://www.bsi.bund.de/SharedDocs/Cybersicherheitswarnungen/DE/2021/2021-549032-10F2.pdf?__blob=publicationFile&amp;v=3"
      />
     </para>
    </listitem>
   </itemizedlist>


  </sect2>

  <sect2 xml:id="sec-saddns">
   <title>SADDNS / Dnspooq</title>

   <para>Security researchers from University of California and Tsinghua University have identified
    a new variant of DNS cache poisoning attacks called SADDNS (<quote>Side-channel AttackeD
     DNS</quote>) due to a side channel attack against ICMP replies. </para>

   <para>As DNS is primarily UDP-based, it is open to malicious package injection attacks, and
    various have been identified over time. The DNSSSEC enhancement would fix the package injection
    attacks using cryptographic integrity protection, but is not yet widely deployed. </para>

   <para>When using traditional DNS, there have been two primary mitigations against this kind of
    poisoning been added:</para>

   <itemizedlist>
    <listitem>
     <para>Randomization of the transaction ID (a 16 bit identity in every DNS packet)</para>
    </listitem>
    <listitem>
     <para>Randomization of the UDP port sending/receiving the replies (another 16 bit
      entity)</para>
    </listitem>
   </itemizedlist>

   <para>The researchers have now shown that the current Linux kernels have a side-channel attack
    using predictable ICMP port-unreachable replies on non-open UDP ports, like for example DNS
    reply ports, which allows attackers to remotely detect the open ports.</para>

   <para>Making it a 32-bit wide space to exhaust for brute force attacks would also reduce the
    attack surface to 16 bit space, making DNS cache poisoning attacks again possible.</para>

   <bridgehead>Solution</bridgehead>

   <para>The best solution is to remove this side channel attack from the Linux kernel. The
    reappearance of the DNS cache poisoning attack allows remote attackers to pretend to be
    different hosts if your host is reachable from the Internet, allowing man-in-the-middle attacks
    against encrypted communication or software delivery. </para>

   <para>SUSE is delivering Linux kernel updates to again mitigate the SADDNS attack. We also
    recommend to use DNSSEC, which in general avoids this kind of attack.</para>

   <para>SADDNS, while potentially serious to not patched systems, poses little danger to those who
    keep their SUSE product patched and up to date. SUSE released fixes and updates to all affected
    versions, eliminating the potential for disruption.</para>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>SAD DNS Web site: <link xlink:href="https://www.saddns.net/"/></para>
    </listitem>
    <listitem>
     <para>SUSE TID 19786: <link xlink:href="https://www.suse.com/support/kb/doc/?id=000019786"
      /></para>
    </listitem>
    <listitem>
     <para>SUSE CVE-2020-25705 Web page: <link
       xlink:href="https://www.suse.com/security/cve/CVE-2020-25705/"/></para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-baron-samedit">
   <title>Baron Samedit: Heap-based buffer overflow in <package>sudo</package></title>

   <para>Security researchers from Qualys discovered a new vulnerability in <package>sudo</package>
    which allows unauthenticated attackers to gain root privileges. The attackers need to have
    access to the system as a user to exploit this vulnerability but after they are logged in they
    do not need to provide any further authentication password to escalate their privilege to
    root.</para>

   <para>The vulnerable code that causes the heap-based buffer overflow was introduced in
     <package>sudo</package> version 1.8.2.</para>

   <itemizedlist>
    <listitem>
     <para>SUSE Linux Enterprise Server 12 and SUSE Linux Enterprise Server 15 products are
      affected.</para>
    </listitem>
    <listitem>
     <para>SUSE Linux Enterprise Server 11 products are not affected.</para>
    </listitem>
   </itemizedlist>

   <bridgehead>Solution</bridgehead>

   <para>Fixes have been provided for all affected and supported SUSE products. For more details, check the CVE Web page referenced below.</para>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>Bug report: <link xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=1181090"/></para>
    </listitem>
    <listitem>
     <para>SUSE CVE-2021-3156 Web page: <link
       xlink:href="https://www.suse.com/security/cve/CVE-2021-3156/"/></para>
    </listitem>
    <listitem>
     <para>Qualys Security Advisory article: <link
       xlink:href="https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt"
      />
     </para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-salt">
   <title>Salt: Several remote code execution vulnerabilities</title>

   <para>SaltStack announced a security release fixing several critical issues. The issues range
    from privilege escalation, missing TLS/SSL certificate validation, or directory traversal to
    possible command injection.</para>

   <bridgehead>Solution</bridgehead>

   <para>SUSE released fixes and updates for all of the affected and supported SUSE products. See
    the CVEs referenced below:</para>

   <itemizedlist>
    <listitem>
     <para>CVE-2020-28243: A privilege escalation is possible on a SaltStack minion when an
      unprivileged user can create files in any non-blacklisted directory via a command
      injection in a processes' name. Simply ending a file with <quote>(deleted)</quote> and keeping
      a file handle open to it is enough to trigger the exploit whenever a restart check is
      triggered from a SaltStack master.</para>
    </listitem>
    <listitem>
     <para>CVE-2020-28972: In SaltStack Salt v2015.8.0 through v3002.2, authentication to vCenter,
      vSphere, and ESXi servers does not always validate the TLS/SSL certificate.</para>
    </listitem>
    <listitem>
     <para>CVE-2021-3148: This is an issue in SaltStack Salt v2016.3.0 through v3002.2. Sending
      crafted Web requests to the Salt API, when using the SSH client, can result in command
      injection.</para>
    </listitem>
    <listitem>
     <para>CVE-2021-25281: The Salt API does not honor <emphasis role="italic">eAuth</emphasis>
      credentials for the wheel_async client. Thus, an attacker can remotely run any wheel modules
      on the master.</para>
    </listitem>
    <listitem>
     <para>CVE-2021-25282: The <emphasis role="italic">salt.wheel.pillar_roots.write</emphasis>
      method is vulnerable to directory traversal.</para>
    </listitem>
    <listitem>
     <para>CVE-2021-25283: The <emphasis role="italic">jinja</emphasis> render does not protect
      against server-side template injection attacks.</para>
    </listitem>
    <listitem>
     <para>CVE-2021-3144: <emphasis role="italic">eAuth</emphasis> tokens can be used once after
      expiration.</para>
    </listitem>
    <listitem>
     <para>CVE-2021-25284: <emphasis role="italic">Salt.modules.cmdmod</emphasis> can log credential
      to the <quote>error</quote> log level</para>
    </listitem>
    <listitem>
     <para>CVE-2021-3197: The Salt-API's SSH client is vulnerable to a shell injection by including
       <emphasis role="italic">ProxyCommand</emphasis> in an argument, or via <emphasis
       role="italic">ssh_options</emphasis> provided in an API request.</para>
    </listitem>
    <listitem>
     <para>CVE-2020-35662: In SaltStack Salt v2015.8.0 through v3002.2, when authenticating to
      services using certain modules (<emphasis role="italic"> asam runner, qingcloud, splunk
       returner, panos proxy, cimc proxy, zenoss module, esxi module, vsphere module, glassfish
       module, bigip module, and keystone module</emphasis>), the SSL certificate is not always
      validated.</para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-omigod">
   <title>OMIGOD</title>

   <para>Security researchers found that Microsoft Azure injects a specific health monitoring
    package <quote>OMI agent</quote> into public cloud Linux instances when certain other Azure
    services are enabled for a given instance.</para>

   <para>The services known to trigger the injection of the vulnerable package are as
    follows:</para>

   <itemizedlist>
    <listitem>
     <para>Azure Automation</para>
    </listitem>
    <listitem>
     <para>Azure Automatic Update</para>
    </listitem>
    <listitem>
     <para>Azure Operations Management Suite (OMS)</para>
    </listitem>
    <listitem>
     <para>Azure Log Analytics</para>
    </listitem>
    <listitem>
     <para>Azure Configuration Management</para>
    </listitem>
    <listitem>
     <para>Azure Diagnostics</para>
    </listitem>
   </itemizedlist>

   <para>The deployed code has several easy-to-exploit remote vulnerabilities. See the CVEs listed
    below:</para>

   <itemizedlist>
    <listitem>
     <para>CVE-2021-38647: Unauthenticated RCE as root (Severity: 9.8)</para>
    </listitem>
    <listitem>
     <para>CVE-2021-38648: Privilege Escalation vulnerability (Severity: 7.8)</para>
    </listitem>
    <listitem>
     <para>CVE-2021-38645: Privilege Escalation vulnerability (Severity: 7.8)</para>
    </listitem>
    <listitem>
     <para>CVE-2021-38649: Privilege Escalation vulnerability (Severity: 7.0)</para>
    </listitem>
   </itemizedlist>

   <para>To see if your instance is using the code in question, use:</para>

   <screen>rpm -qa omi</screen>

   <para>As the package is maintained and injected by Microsoft into Azure instances, and is not
    delivered by SUSE, SUSE cannot provide fixes.</para>

   <bridgehead>Solution</bridgehead>

   <para>Visit <link
     xlink:href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-38647"/> for more
    details on this vulnerability. You should take several steps to prevent your IT environment from
    being vulnerable to the OMIGOD vulnerability:</para>

   <itemizedlist>
    <listitem>
     <para>Verify your network settings and ensure ports 5985, 5986, 1270 are not exposed to the
      Internet. If these ports are exposed to the Internet, it is recommended to consider your
      system as compromised.</para>
    </listitem>
    <listitem>
     <para>Redeploy your instance using a network construct with ports 5985, 5986, 1270 closed to
      the Internet.</para>
    </listitem>
   </itemizedlist>

   <para>If this is not feasible, follow the installation steps for SUSE at <link
     xlink:href="https://docs.microsoft.com/en-us/windows-server/administration/Linux-Package-Repository-for-Microsoft-Software"
    /> :</para>

   <itemizedlist>
    <listitem>
     <para>SUSE Linux Enterprise Server 12: <command>sudo rpm -Uvh
       https://packages.microsoft.com/config/sles/12/packagesmicrosoft-prod.rpm</command></para>
    </listitem>
    <listitem>
     <para>SUSE Linux Enterprise Server 15: <command>sudo rpm -Uvh
       https://packages.microsoft.com/config/sles/15/packagesmicrosoft-prod.rpm</command></para>
    </listitem>
    <listitem>
     <para>Run <command>zypper up</command> to update the omi agents from the newly added
      repo.</para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-dheater">
   <title>DHEATER</title>

   <para>Security researchers from Balasys have published a new attack on Diffie-Hellman key
    exchange which allows remote attackers to attack network facing SSL / TLS / HTTPS / SSH
    services. This is leading to excessive compute time usage already by sending small amounts of
    network traffic even before authentication. All applications on SUSE Linux Enterprise that have
    DHE enabled are affected. The Diffie-Hellman Epheremal key exchange is usually configured by
    default to provide perfect forward secrecy. The Elliptic Curve Diffie-Hellman protocol is not
    affected by this vulnerability.</para>

   <bridgehead>Solution</bridgehead>

   <para>This vulnerability is a protocol level problem. SUSE continues to monitor if and when
    cryptographic libraries will develop and implement counter measures in their DiffieHellman code,
    and then backport those fixes. Up to then, the DHE key exchange method should be disabled and
    the Elliptic Curve Diffie-Hellman method should being used as a workaround.</para>

   <para>SUSE recommends to disable the DHE key exchange until a technological solution is found,
    using methods listed in the <quote>additional information</quote> section. While we use
     <emphasis role="italic">DEFAULT_SUSE</emphasis> as a default cipher set, removing DHE
    unconditionally could break existing setups. Thus SUSE will not remove it proactively at this
    time.</para>

   <para>A workaround is to temporary disable DHE key exchange and only use ECDHE (Elliptic Curve
    Diffie-Hellman) in SSL / TLS / HTTPS using network services. System administrators should check
    first if this causes interoperability issues.</para>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>GitHub repository: <link xlink:href="https://github.com/Balasys/dheater"/></para>
    </listitem>
    <listitem>
     <para>SUSE CVE-2002-20001 Web page: <link
       xlink:href="https://www.suse.com/security/cve/CVE-2002-20001.html"/></para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-boothole">
   <title>boothole-2: GRUB2 UEFI secure boot bypass issues</title>

   <para>Various security researchers and the GRUB2 team have published more security issues in
    GRUB2, which can be used to bypass UEFI segrubcure boot chain. These security issues have the
    same scope as the BootHole issues from 2020.</para>

   <para>This attack requires root access to the boot loader used in Linux operating systems, GRUB2.
    It bypasses normal Secure Boot protections to persistently install malicious code which cannot
    be detected by the operating system. Given the need for root access to the boot loader, the
    described attack appears to have limited relevance for most cloud computing, data center and
    personal device scenarios, unless these systems are already compromised by another known attack.
    However, it does create an exposure when untrusted users can access a machine, for example bad
    actors in classified computing scenarios or computers in public spaces operating in unattended
    kiosk mode. These are scenarios which Secure Boot was intended to protect against.</para>

   <bridgehead>Solution</bridgehead>

   <para>Software and hardware vendors are closely collaborating to ensure that sophisticated
    attackers cannot reinstall old versions of GRUB2. Over time, vendors are going to update
    cryptographic keys in the BIOS for new computers, and to provide so-called DBX Exclusion
    List updates for existing computers. These can prevent systems that are not patched and old
    installation media from starting. Make sure you have installed all relevant boot loader and
    operating system updates for BootHole before installing a BIOS or DBX Exclusion List update to
    ensure continuity. </para>

   <para>SUSE has released fixed GRUB2 packages which close the vulnerabilities for all of SUSE's
    Linux-based products. SUSE has also released the corresponding Linux kernel packages, cloud
    image and installation media updates.</para>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>Blog article: <link
       xlink:href="https://www.suse.com/c/suse-addresses-another-grub2-uefi-secure-boot-security-exposure/"
      />
     </para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-sequoia">
   <title>Sequoia (kernel root exploit in fs layer)</title>

   <para>Security researchers from Qualys have identified a security issue in the Linux Kernel where
    local attackers could reliably exploit an integer overflow to execute code in the kernel and so
    escalate privileges. <emphasis role="italic">fs/seq_file.c</emphasis> in the Linux kernel 3.16
    through 5.13.x before 5.13.4 does not properly restrict seq buffer allocations, leading to an
    integer overflow, an <emphasis role="italic">Out-of-bounds Write</emphasis>, and escalation to
    root by an unprivileged user, aka CID-8cae8cd89f05.</para>

   <para>Qualys refers to this vulnerability as <quote>Sequoia: A deep root in Linux's filesystem
     layer (CVE2021-33909)</quote>.</para>

   <bridgehead>Solution</bridgehead>

   <para>SUSE advises all customers to update to the latest released kernel after July 20,
    2021.</para>

   <bridgehead>References</bridgehead>

   <itemizedlist>
    <listitem>
     <para>SUSE CVE 2021-33909 Web page: <link
       xlink:href="https://suse.com/security/cve/CVE-2021-33909.html"/></para>
    </listitem>
    <listitem>
     <para>Qualys Security Advisory article: <link
       xlink:href="https://www.qualys.com/2021/07/20/cve-2021-33909/sequoia-local-privilege-escalation-linux.txt"
      /></para>
    </listitem>
   </itemizedlist>

  </sect2>

  <sect2 xml:id="sec-fragattacks">
   <title>FRAGATTACKS - several WLAN vulnerabilities</title>

   <para>Security Researcher Mathy Vanhoef discovered various attacks against Wi-Fi (802.11) stacks
    and against the Wi-Fi standard related to Wi-Fi fragments. This vulnerability is documented
    on the Web site <link xlink:href="https://www.fragattacks.com/"/> and is called
    FRAGATTACKS.</para>

   <para>This set of vulnerabilities can allow local attackers in Wi-Fi range to inject traffic even
    in encrypted Wi-Fi networks, or get access to information of other users in the same Wi-Fi
    network. If the system is not using Wi-Fi, it is not affected. These issues largely affect the
    hardware / firmware of Wi-Fi cards.</para>

   <para>Two CVEs are also included in the mac80211 stack of Linux, and will be addressed by updates
    to the Linux kernel. These issues have received CVE-2020-24586 and CVE-2020-24587. These and
    others CVEs are fixed in the various Wi-Fi firmware. We will release the respective updates when
    they become available from the Wi-Fi card vendors Linux support, via
     <quote>kernel-firmware</quote> updates.</para>

   <bridgehead>Solution</bridgehead>

   <para>SUSE advises all customers to install the published updates required to fix the following
    vulnerabilities:</para>

   <itemizedlist>
    <listitem>
     <para>CVE-2020-24586: Fragmentation cache not cleared on reconnection</para>
    </listitem>
    <listitem>
     <para>CVE-2020-24587: Reassembling fragments encrypted under different keys</para>
    </listitem>
    <listitem>
     <para>CVE-2020-24588: Accepting non-SPP A-MSDU frames, which leads to payload being parsed as
      an L2 frame under an A-MSDU bit toggling attack</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26139: Forwarding EAPOL from unauthenticated sender</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26140: Accepting plaintext data frames in protected networks</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26141: Not verifying TKIP MIC of fragmented frames</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26142: Processing fragmented frames as full frames</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26143: Accepting fragmented plaintext frames in protected networks</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26144: Always accepting unencrypted A-MSDU frames that start with RFC1042 header
      with EAPOL ethertype</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26145: Accepting plaintext broadcast fragments as full frames</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26146: Reassembling encrypted fragments with non-consecutive packet
      numbers</para>
    </listitem>
    <listitem>
     <para>CVE-2020-26147: Reassembling mixed encrypted/plaintext fragments</para>
    </listitem>
   </itemizedlist>

  </sect2>

 </sect1>

 <sect1 xml:id="sec-vulnerability-management">
  <title>Vulnerability Management in 2021</title>

  <para>The SUSE Solution Security team observed a steady amount of vulnerabilities hitting our
   products on an annual basis. More and improved tools are now available for finding out zero-day
   vulnerabilities and scanning for existing vulnerabilities. Such instruments can validate and
   report back if the application code written is following the standard security best practices or
   there are major gaps in potential attack vectors such as buffer overflow, denial of service or
   unwanted elevated access. It is obvious that developers are becoming more and more security aware
   and the quality of the code being developed has greatly improved in both quantity and quality.
   While we notice an increasing number of important vulnerabilities, the number of critical
   vulnerabilities is going down year over year.</para>


  <table>
   <title>Vulnerabilities with a unique CVE identified, impacting SUSE products</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>Year</entry>
      <entry>Moderate</entry>
      <entry>Important</entry>
      <entry>Critical</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>2021</entry>
      <entry>781</entry>
      <entry>591</entry>
      <entry>48</entry>
     </row>
     <row>
      <entry>2020</entry>
      <entry>830</entry>
      <entry>560</entry>
      <entry>48</entry>
     </row>
     <row>
      <entry>2019 </entry>
      <entry>1003</entry>
      <entry>495</entry>
      <entry>55</entry>
     </row>
    </tbody>
   </tgroup>
  </table>


  <table>
   <title>Security updates and patches released to fix these vulnerabilities</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>Year</entry>
      <entry>Moderate</entry>
      <entry>Important</entry>
      <entry>Critical</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>2021</entry>
      <entry>401</entry>
      <entry>887</entry>
      <entry>68</entry>
     </row>
     <row>
      <entry>2020</entry>
      <entry>402</entry>
      <entry>775</entry>
      <entry>80</entry>
     </row>
     <row>
      <entry>2019 </entry>
      <entry>432</entry>
      <entry>558</entry>
      <entry>77</entry>
     </row>
    </tbody>
   </tgroup>
  </table>


  <figure>
   <title>Security updates and patches released per month</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="suse-security-report-2021-statistics.png" width="90%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="suse-security-report-2021-statistics.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <bridgehead>Key Performance Indicators</bridgehead>

  <itemizedlist>
   <listitem>
    <para>100 percent of all high impact vulnerabilities had an update or a patch released to our
     customers within five business days. </para>
   </listitem>
   <listitem>
    <para>97 percent of all vulnerabilities scored CVSS 4.0 and above had an update or a patch
     released to our customers within 180 calendar days. </para>
   </listitem>
   <listitem>
    <para>88 percent of all vulnerabilities scored CVSS 4.0 and above had an update or a patch
     released to our customers within 90 calendar days. </para>
   </listitem>
  </itemizedlist>

 </sect1>

 <sect1 xml:id="sec-secure-sw-supply-chain">
  <title>Secure Software Supply Chain </title>

  <para>Securing our software supply chain is a top priority for SUSE to ensure that our customers
   are protected from security risks, known and zero-day vulnerabilities. Ensuring that no threat
   actor can inject malicious code within our build service systems is certified by industry leading
   security certifications. Our teams continually work to certify all SUSE products, and develop
   security solutions to ensure the highest level of trust and reliability for our customers.</para>

  <para>Common Criteria (CC), also known as the Common Criteria for Information Technology Security
   Evaluation, is an international set of specifications and guidelines designed by the signatories
   of the Common Criteria Recognition Arrangement (CCRA), to evaluate information security products
   and systems. It was developed to ensure that products and systems meet a predefined security
   standard for government deployments. Products and systems that have been successfully tested and
   evaluated by a licensed laboratory are awarded a Common Criteria certification. On November 11th
   2021, SUSE was awarded with the Common Criteria Certification (NIAP OSPP) for SUSE Linux
   Enterprise Server 15 SP2. This certification is mandatory for work with the United States (US)
   Federal Government. It demonstrates compliance to NIAP Protection Profile for General Purpose
   Operating Systems, Version 4.2.1 (CCEVS-VR-PP-0047) with the Extended Package for Secure Shell
   (SSH), Version 1.0 (CCES-VR-PP-0039). This certification extends our Common Criteria
   Certification track by US Compliance Regulations enabling US federal entities to profit from
   SUSE’s Certified Secure Software Supply Chain while complying with all necessary national
   regulations.</para>

  <para>The National Institute of Standards and Technology (NIST) developed the FIPS 140-2 security
   standard. It outlines the security requirements that must be satisfied by cryptographic modules,
   providing four increasing, qualitative levels intended to cover a wide range of potential
   applications and environments. On October 27th 2021, NIST awarded SUSE a validation certificate
   for the Libica Cryptographic Module, a software-hybrid module that provides general purpose
   cryptographic algorithms to applications running in the user space of the underlying operating
   system, SUSE Linux Enterprise Server on the IBM Z mainframes. More details about SUSE Linux
   Enterprise Server on IBM Z can be found at <link
    xlink:href="https://www.suse.com/products/systemz/"/>.</para>

  <para>Many other industry standards like Defense Counterintelligence Security Agency (DCSA) and
   the Defense Information Systems Agency (DISA) Security Requirements Guides (SRGs) and Security
   Technical Implementation Guides (STIG) depend on FIPS 140-2 certified cryptography modules. On
   July 22nd 2021, the National Institute of Standards and Technology (NIST) under the Cryptographic
   Module Validation Program (CMVP) in compliance with the Federal Information Processing Standards
   (FIPS) 140-2, has validated all modules within SUSE Linux Enterprise Server 15 SP2. More details
   can be found at <link
    xlink:href="https://documentation.suse.com/sles/15-SP3/html/SLES-all/cha-security-fips.html"/>
   .</para>

  <para>On July 8th, 2021, SUSE announced that SUSE Linux Enterprise Server 15 SP2 is now EAL 4+
   level certified for IBM Z, Arm and x86-64. SUSE is the only provider of a recent general-purpose
   Linux operating system with a secure software supply chain that is certified Common Criteria EAL
   4+ for all these platforms. SUSE Linux Enterprise Server 15 SP2 was certified by BSI, Germany's
   Federal Office for Information Security, based on an evaluation conducted by atsec information
   security. To achieve the certifications, the SUSE products, and processes for developing and
   maintaining its products, passed a rigorous security evaluation performed by Atsec Information
   Security. The certificates were issued by Bundesamt für Sicherheit in der Informationstechnik
   (BSI) the German Federal Office for IT Security. The Common Criteria for Information Technology
   Security Evaluation is an international standard (ISO/IEC 15408), recognized by 26 countries
   (CCRA) worldwide. Details regarding SUSE’s full <quote>Common Criteria Part 3 conformant EAL 4
    augmented by ALC_FLR.3 Systematic Flaw Remediation</quote> certification are listed at <link
    xlink:href="https://www.bsi.bund.de/SharedDocs/Zertifikate_CC/CC/Betriebssysteme/1151.html?nn=513260"/>
   .</para>

  <para>On January 29th 2021, the Defense Information Systems Agency (DISA) has released the SUSE
   Linux Enterprise Server 15 Security Technical Implementation Guide (STIG). Details regarding STIG
   can be found at <link
    xlink:href="https://www.suse.com/c/sles-15-security-technical-implementation-guide-stig/"/>
   .</para>

 </sect1>

 <sect1 xml:id="sec-about-suse">
  <title>About SUSE</title>

  <para>SUSE is a global leader in innovative, reliable and enterprise-grade open source solutions,
   relied upon by more than 60% of the Fortune 500 to power their mission-critical workloads. We
   specialize in Enterprise Linux, Kubernetes Management, and Edge solutions, and collaborate with
   partners and communities to empower our customers to innovate everywhere – from the data center,
   to the cloud, to the edge and beyond. SUSE puts the <quote>open</quote> back in open source,
   giving customers the agility to tackle innovation challenges today and the freedom to evolve
   their strategy and solutions tomorrow. The company employs nearly 2000 people globally and is
   listed on the Frankfurt Stock Exchange. For more information, visit <link
    xlink:href="https://www.suse.com"/>.</para>

 </sect1>

 <sect1 xml:id="sec-statements">
  <title>Forward-looking statements</title>

  <para>Any statements in this document about future expectations, plans and prospects for the
   company, including statements containing the words <quote>aims</quote>, <quote>targets</quote>,
    <quote>will</quote>, <quote>believes</quote>, <quote>anticipates</quote>,
    <quote>plans</quote><quote>expects</quote>, and similar expressions, may constitute
   forward-looking statements and should be read with caution.</para>

  <para>Actual results may differ materially from those indicated by such forward-looking statements
   as a result of various important factors, including competitive landscape, development of
   customer deals, reliance upon customer relationships, management of growth and acquisitions, the
   possibility of undetected software issues, the risks of impacts of the COVID-19 pandemic and
   economic downturns, pricing pressures and the viability of the Internet. In addition, any
   forward-looking statements included herein represent views as of the date of this document and
   these views could change. SUSE does not have any obligation to update its forward-looking
   statements. These forward-looking statements are subject to change and should not be relied upon
   as representing the SUSE’s views as of any date other than the publication date of this
   document.</para>

 </sect1>

 <?pdfpagebreak style="sbp" formatter="fop"?>
 <xi:include href="sbp-legal-notice.xml"/>


 <?pdfpagebreak style="sbp" formatter="fop"?>
 <xi:include href="license-gfdl.xml"/>


</article>
