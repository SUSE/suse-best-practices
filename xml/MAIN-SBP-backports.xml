<?xml version="1.0" encoding="UTF-8"?>
<!--<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>-->
<!DOCTYPE article [
<!ENTITY % entity SYSTEM "entity-decl.ent">
%entity;
]>

<article role="sbp" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art-sbp-amdepyc3-sles15sp3"
 xml:lang="en">

 <info>
  <title>Backports of Source Code</title>
  <productname>SUSE Linux Enterprise</productname>
  <productnumber>12, 15</productnumber>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://github.com/SUSE/suse-best-practices/issues/new</dm:url>
    <dm:product>Backports of Source Code</dm:product>
   </dm:bugtracker>
   <dm:editurl>https://github.com/SUSE/suse-best-practices/edit/main/xml/</dm:editurl>
  </dm:docmanager>

  <!--  <author>
   <personname>
    <firstname>Mel</firstname>
    <surname>Gorman, Senior Kernel Engineer, SUSE</surname>
   </personname>
   <!-\-      <affiliation>
    <jobtitle>Senior Software Engineer</jobtitle>
    <orgname>SUSE</orgname>
    </affiliation>-\->
  </author>-->

  <!--    <cover role="logos">
   <mediaobject>
   <imageobject>
   <imagedata fileref="suse.svg"/>
   </imageobject>
   </mediaobject>
   <mediaobject>
   <imageobject>
   <imagedata fileref="amd.jpg"/>
   </imageobject>
   </mediaobject>
   </cover>-->

  <date>August 11, 2021</date>

  <abstract>

   <para>This document details what <emphasis role="bold">backporting</emphasis> means and why SUSE
    uses backports extensively. It also explains some of the advantages of backports, and when you
    should prefer a version upgrade over a backport. </para>


   <para><emphasis role="strong">Disclaimer</emphasis>: This document is part of the SUSE Best
    Practices series. All documents published in this series were contributed voluntarily by SUSE
    employees and by third parties. If not stated otherwise inside the document, the articles are
    intended only to be one example of how a particular action could be taken. Also, SUSE cannot
    verify either that the actions described in the articles do what they claim to do or that they
    do not have unintended consequences. All information found in this document has been compiled
    with utmost attention to detail. However, this does not guarantee complete accuracy. Therefore,
    we need to specifically state that neither SUSE LLC, its affiliates, the authors, nor the
    translators may be held liable for possible errors or the consequences thereof. </para>

  </abstract>
 </info>

 <sect1>
  <title>Scope of this document</title>

  <para>SUSE extensively uses backports, for example for the migration of current software fixes and
   features into released &sle; packages. This document explains why it can be misleading to
   compare version numbers to judge the capabilities and the security of SUSE Linux Enterprise
   software packages. In addition, it provides details about how SUSE keeps the system software
   secure and current while maintaining compatibility for your application software on top of SUSE
   Linux Enterprise products. Finally, it shows how to check which public security issues actually
   are addressed in your SUSE Linux Enterprise system software, and the current status of your
   software.</para>

 </sect1>

 <sect1>
  <title>Background</title>

  <para>To understand free software development, the metaphor of a <emphasis role="italic"
    >stream</emphasis> might be useful: </para>

  <para>A piece of free software gets written, is integrated with other software to build a
   distribution such as SUSE Linux Enterprise which is then used by end users. Thus, the software
   flows <emphasis role="italic">downstream</emphasis> from its developers through the integrators
   towards the end users. </para>

  <para>Feedback typically flows in the opposite direction. Users report bugs or request feature
   enhancements from their distribution vendor, who in turn works with the <emphasis role="italic"
    >upstream</emphasis> developers to fix the bugs or develop the enhanced features.</para>

  <para>Like in every ecosystem, in free software development, there are various roles that interact
   with each other. Regarding the topic of backporting, from interest are mainly the following
   roles: </para>
  <itemizedlist>
   <listitem>
    <para>the upstream developer</para>
   </listitem>
   <listitem>
    <para>the distribution developer</para>
   </listitem>
   <listitem>
    <para>the (end) user</para>
   </listitem>
  </itemizedlist>

  <para> These roles have different interests, responsibilities and goals.</para>
  <para>The primary interest of an upstream developer is the development of a specific piece of
   software code itself; integration with other software is of less concern. In most cases, upstream
   developers therefore only actively work on one or two <quote>branches</quote> of their projects. </para>
  <para> To distribution developers, however, the primary concern is forming a coherent, integrated
   whole of the individual pieces of software. To help achieve this, the distribution developers
   often act as a <quote>communication filter</quote> between the upstream developer and the end
   user. They help to analyze end-user problems, and they relay these analyses to the upstream
   developers. Where possible, they also help them develop and test patches to address the problems. </para>
  <para>Lastly, the (end) users' primary requirement and expectation is to be productive using the
   software. </para>

 </sect1>

 <sect1 xml:id="sec-reasons-for-backports">
  <title>Reasons for backporting</title>

  <para> Upstream developers are primarily concerned with advancing the software they develop. Often
   they combine fixing bugs with introducing new features which have not yet received extensive
   testing and which may introduce new bugs. </para>

  <para> For distribution developers, it is important to distinguish between: </para>

  <itemizedlist>
   <listitem>
    <para> bugfixes with a limited potential for disrupting functionality; and </para>
   </listitem>
   <listitem>
    <para> changes that may disrupt existing functionality. </para>
   </listitem>
  </itemizedlist>

  <para> Usually, distribution developers do not follow all upstream changes when a package has
   become part of a released distribution. Instead, they tend to stick with the upstream version
   that they initially released, and they create patches based on upstream changes to fix bugs. This
   practice is known as <emphasis>backporting</emphasis>. </para>

  <para> Distribution developers generally will only introduce a newer version of software in two
   cases: </para>

  <itemizedlist>
   <listitem>
    <para> when the changes between their packages and the upstream versions have become so large
     that backporting is no longer feasible, or </para>
   </listitem>
   <listitem>
    <para> for software that inherently ages badly, like anti-malware software. </para>
   </listitem>
  </itemizedlist>

  <para> &suse; uses backports extensively as we strike a good balance between several concerns
   for enterprise software. The most important of them are: </para>

  <itemizedlist>
   <listitem>
    <para> Having stable interfaces (APIs) that software vendors can rely on when building products
     for use on &suse;'s enterprise products. </para>
   </listitem>
   <listitem>
    <para> Ensuring that packages used in the release of &suse;'s enterprise products are of the
     highest quality and have been thoroughly tested, both in themselves and as part of the whole
     enterprise product. </para>
   </listitem>
   <listitem>
    <para> Maintaining the various certifications of &suse;'s enterprise products by other
     vendors, like certifications for Oracle or SAP products. </para>
   </listitem>
   <listitem>
    <para> Allowing &suse;'s developers to focus on making the next product version, rather than
     spreading their focus thinly across a wide range of releases. </para>
   </listitem>
   <listitem>
    <para> Keeping a clear view of what is in a particular enterprise release, so that our support
     can provide accurate and timely information about it. </para>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="sec-prefer-upgrades-over-backports">
  <title>When to prefer version upgrades over backports</title>

  <para> It is a general policy rule that no new upstream versions of a package are introduced into
   our enterprise products. This rule is not an absolute rule however. For certain types of
   packages, in particular anti-virus software, security concerns weigh heavier than the
   conservative approach that is preferable from the perspective of quality assurance. For packages
   in that class, occasionally newer versions are introduced into a released version of an
   enterprise product line. </para>

  <para> Sometimes also for other types of packages the choice is made to introduce a new version
   rather than a backport. This is done when producing a backport is not economically feasible or
   when there is a very relevant technical reason to introduce the newer version. </para>
 </sect1>


 <sect1 xml:id="sec-backports-implications">
  <title>The implications of backports for interpreting version numbers</title>

  <para> Because of the practice of backporting, one cannot simply compare version numbers to
   determine whether a &suse; package contains a fix for a particular issue or has had a
   particular feature added to it. With backporting, the upstream part of a &suse; package's
   version number merely indicates what upstream version the &suse; package is based on. It may
   contain bug fixes and features that are not in the corresponding upstream release, but that have
   been backported into the &suse; package. </para>

  <para>
   <remark>froh: there will be some new "CVE fixed in &sle;" lookup tool, need to work with
    sarsene@ to figure the details or a link.</remark> One particular area where this limited value
   of version numbers when backporting is involved can cause problems is with security scanning
   tools. Some security vulnerability scanning tools (or particular tests in such tools) operate
   solely on version information. These tools and tests are therefore prone to generating
    <quote>false positives</quote> (when a piece of software is incorrectly identified as
   vulnerable) when backports are involved. When evaluating reports from security scanning tools,
   always check whether an entry is based on a version number or on an actual vulnerability test.
  </para>
 </sect1>

 <sect1 xml:id="sec-backports-checks">
  <title>Checking for fixed bugs and backported features</title>

  <para> There are several locations where information regarding backported bug fixes and features
   are stored: </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para> The package's changelog: </para>

    <screen>&prompt.user;rpm -q --changelog name-of-installed-package
&prompt.user;rpm -qp --changelog packagefile.rpm</screen>

    <para> The output briefly documents the change history of the package. </para>
   </listitem>

   <listitem>
    <para> The package changelog may contain entries like <literal>bsc#1234</literal>
       (<quote><emphasis role="bold">b</emphasis>ugzilla.<emphasis role="bold"
       >s</emphasis>use.<emphasis role="bold">c</emphasis>om</quote>) that refer to bugs in
     &suse;'s Bugzilla tracking system or links to other bugtracking systems. Because of
     confidentiality policies, not all such information may be accessible to you. </para>
   </listitem>

   <listitem>
    <para> A package may contain a
      <filename>/usr/share/doc/<replaceable>PACKAGENAME</replaceable>/README.SUSE</filename> file
     which contains general, high-level information specific to the &suse; package. </para>
   </listitem>

   <listitem>
    <para> The RPM source package contains the patches that were applied during the building of the
     regular binary RPMs as separate files that can be interpreted if you are familiar with reading
     source code. </para>
     <itemizedlist>
      <listitem>
       <para>For installing the sources of SUSE Linux Enterprise software, see the <link
         xlink:href="https://documentation.suse.com/sles/15-SP3/single-html/SLES-administration/#sec-zypper-softman-sources"
         >Administration Guide, Section 6.1.3.5 <quote>Installing or downloading source
          packages”</quote></link>. </para>
      </listitem>

      <listitem>
       <para>For building packages on SUSE Linux Enterprise, see the <link
         xlink:href="https://documentation.suse.com/sles/15-SP3/single-html/SLES-administration/#sec-rpm-sources"
         >Administration Guide, Section 6.2.5 <quote>Installing and compiling source
          packages</quote></link>.</para>
      </listitem>

     </itemizedlist>
   
   </listitem>

   <listitem>
    <para> For security bug fixes, consult the <link
      xlink:href="https://www.suse.com/support/security/">&suse; security announcements</link>.
     These often refer to bugs through standardized names like <literal>CAN-2005-2495</literal>
     which are maintained by the <link xlink:href="http://cve.mitre.org">Common Vulnerabilities and
      Exposures (CVE)</link> project. </para>
   </listitem>

  </itemizedlist>
 </sect1>

 <!-- <?pdfpagebreak style="suse2013-sbp" formatter="fop"?>-->

 <sect1 xml:id="sec-legal-notice">
  <title>Legal notice</title>

  <para>Copyright &copy;2006–2021 SUSE LLC and contributors. All rights reserved. </para>

  <para>Permission is granted to copy, distribute and/or modify this document under the terms of the
   GNU Free Documentation License, Version 1.2 or (at your option) version 1.3; with the Invariant
   Section being this copyright notice and license. A copy of the license version 1.2 is included in
   the section entitled <quote>GNU Free Documentation License</quote>.</para>

  <para>SUSE, the SUSE logo and YaST are registered trademarks of SUSE LLC in the United States and
   other countries. For SUSE trademarks, see <link xlink:href="http://www.suse.com/company/legal/"
    >http://www.suse.com/company/legal/</link>. Linux is a registered trademark of Linus Torvalds.
   All other names or trademarks mentioned in this document may be trademarks or registered
   trademarks of their respective owners.</para>

  <para>This article is part of a series of documents called <quote>SUSE Best Practices</quote>. The
   individual documents in the series were contributed voluntarily by SUSE's employees and by third
   parties.</para>

  <para>The articles are intended only to be one example of how a particular action could be taken.
   They should not be understood to be the only action and certainly not to be the action
   recommended by SUSE. Also, SUSE cannot verify either that the actions described in the articles
   do what they claim to do or that they do not have unintended consequences.</para>

  <para> All information found in this article has been compiled with utmost attention to detail.
   However, this does not guarantee complete accuracy.
   <!--Neither SUSE LLC, the authors, nor the translators shall be held liable
   for possible errors or the consequences thereof. --></para>

  <para>Therefore, we need to specifically state that neither SUSE LLC, its affiliates, the authors,
   nor the translators may be held liable for possible errors or the consequences thereof. Below we
   draw your attention to the license under which the articles are published.</para>

 </sect1>

 <?pdfpagebreak style="suse2013-sbp" formatter="fop"?>
 <xi:include href="license-gfdl.xml"/>


</article>
